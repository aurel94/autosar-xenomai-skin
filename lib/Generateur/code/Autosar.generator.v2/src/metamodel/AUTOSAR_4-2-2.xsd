<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://autosar.org/schema/r4.0" xmlns:AR="http://autosar.org/schema/r4.0">
<xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
   <!-- element group for class ARPackage::ARElement -->
   <xsd:group name="AR-ELEMENT">
      <xsd:annotation>
         <xsd:documentation>An element that can be defined stand-alone, i.e. without being part of another element (except for packages of course).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ARElement"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- element group for class ArObject::ARObject -->
   <xsd:group name="AR-OBJECT">
      <xsd:annotation>
         <xsd:documentation>Implicit base class of all classes in meta-model.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ARObject"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>  
<!-- attribute group for class ArObject::ARObject -->
   <xsd:attributeGroup name="AR-OBJECT">
      <xsd:annotation>
         <xsd:documentation>Implicit base class of all classes in meta-model.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ARObject"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="S" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Checksum calculated by the user's tool environment for an ArObject. May be used in an own tool environment to determine if an ArObject has changed. The checksum has no semantic meaning for an AUTOSAR model and there is no requirement for AUTOSAR tools to manage the checksum.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="ARObject.checksum";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true";xml.name="S"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="T" type="AR:DATE--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Timestamp calculated by the user's tool environment for an ArObject. May be used in an own tool environment to determine the last change of an ArObject. The timestamp has no semantic meaning for an AUTOSAR model and there is no requirement for AUTOSAR tools to manage the timestamp.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="ARObject.timestamp";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true";xml.name="T"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- element group for class ARPackage::ARPackage -->
   <xsd:group name="AR-PACKAGE">
      <xsd:annotation>
         <xsd:documentation>AUTOSAR package, allowing to create top level packages to structure the contained ARElements.

ARPackages are open sets. This means that in a file based description system multiple files can be used to partially describe the contents of a package.

This is an extended version of MSR's SW-SYSTEM.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ARPackage"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="REFERENCE-BASES">
            <xsd:annotation>
               <xsd:documentation>This denotes the reference bases for the package. This is the basis for all relative references within the package. The base needs to be selected according to the base attribute within the references.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortLabel";mmt.qualifiedName="ARPackage.referenceBase";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.sequenceOffset="10"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="REFERENCE-BASE" type="AR:REFERENCE-BASE"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ELEMENTS">
            <xsd:annotation>
               <xsd:documentation>Elements that are part of this package
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="ARPackage.element";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="systemDesignTime";xml.sequenceOffset="20"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  
                  <xsd:element name="BSW-MODULE-DESCRIPTION" type="AR:BSW-MODULE-DESCRIPTION"/>
		<xsd:element name="BSW-IMPLEMENTATION" type="AR:BSW-IMPLEMENTATION"/>
                  
                  <xsd:element name="ECUC-DEFINITION-COLLECTION" type="AR:ECUC-DEFINITION-COLLECTION"/>
                 
                  
                  <xsd:element name="ECUC-MODULE-CONFIGURATION-VALUES" type="AR:ECUC-MODULE-CONFIGURATION-VALUES"/>
                  <xsd:element name="ECUC-MODULE-DEF" type="AR:ECUC-MODULE-DEF"/>
                  <xsd:element name="ECUC-VALUE-COLLECTION" type="AR:ECUC-VALUE-COLLECTION"/>
                  
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="AR-PACKAGES">
            <xsd:annotation>
               <xsd:documentation>This represents a sub package within an ARPackage, thus allowing for an unlimited package hierarchy.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="ARPackage.arPackage";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="blueprintDerivationTime";xml.sequenceOffset="30"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="AR-PACKAGE" type="AR:AR-PACKAGE"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ARPackage.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
<!-- complex type for class ARPackage::ARPackage -->
   <xsd:complexType abstract="false" mixed="false" name="AR-PACKAGE">
      <xsd:annotation>
         <xsd:documentation>AUTOSAR package, allowing to create top level packages to structure the contained ARElements.

ARPackages are open sets. This means that in a file based description system multiple files can be used to partially describe the contents of a package.

This is an extended version of MSR's SW-SYSTEM.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ARPackage"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:COLLECTABLE-ELEMENT"/>
         <xsd:group ref="AR:AR-PACKAGE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
   <xsd:simpleType name="AR-PACKAGE--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="AR-PACKAGE"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class AutosarTopLevelStructure::AUTOSAR -->
   <xsd:group name="AUTOSAR">
      <xsd:annotation>
         <xsd:documentation>Root element of an AUTOSAR description, also the root element in corresponding XML documents.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AUTOSAR";xml.globalElement="true"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ADMIN-DATA" type="AR:ADMIN-DATA">
            <xsd:annotation>
               <xsd:documentation>This represents the administrative data of an Autosar file.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AUTOSAR.adminData";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="INTRODUCTION" type="AR:DOCUMENTATION-BLOCK">
            <xsd:annotation>
               <xsd:documentation>This represents an introduction on the Autosar file. It is intended for example to rpresent disclaimers and legal notes.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AUTOSAR.introduction";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="AR-PACKAGES">
            <xsd:annotation>
               <xsd:documentation>This is the top level package in an AUTOSAR model.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="AUTOSAR.arPackage";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="blueprintDerivationTime";xml.sequenceOffset="30"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="AR-PACKAGE" type="AR:AR-PACKAGE"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class AutosarTopLevelStructure::AUTOSAR -->
   <xsd:complexType abstract="false" mixed="false" name="AUTOSAR">
      <xsd:annotation>
         <xsd:documentation>Root element of an AUTOSAR description, also the root element in corresponding XML documents.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AUTOSAR";xml.globalElement="true"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:AUTOSAR"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
   <!-- global element for class AutosarTopLevelStructure::AUTOSAR -->
   <xsd:element name="AUTOSAR" type="AR:AUTOSAR">
      <xsd:annotation>
         <xsd:documentation>Root element of an AUTOSAR description, also the root element in corresponding XML documents.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AUTOSAR";xml.globalElement="true"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
   </xsd:element>
   <xsd:group name="ADMIN-DATA">
      <xsd:annotation>
         <xsd:documentation>AdminData represents the ability to express administrative information for an element. This administration information is to be treated as meta-data such as revision id or state of the file. There are basically four kinds of meta-data

* The language and/or used languages.

* Revision information covering e.g. revision number, state, release date, changes. Note that this information can be given in general as well as related to a particular company.

* Document meta-data specific for a company</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AdminData"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="LANGUAGE" type="AR:L-ENUM">
            <xsd:annotation>
               <xsd:documentation>This attribute  specifies the master language of the document or the document fragment. The master language is the one in which the document is maintained and from which the other languages are derived from. In particular in case of inconsistencies, the information in the master language is priority.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AdminData.language";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="USED-LANGUAGES" type="AR:MULTI-LANGUAGE-PLAIN-TEXT">
            <xsd:annotation>
               <xsd:documentation>This property specifies the languages which are provided in the document. Therefore it should only be specified in the top level admin data. For each language provided in the document there is one entry in MultilanguagePlainText. The content of each entry can be used for illustration of the language. The used language itself depends on the language attribute in the entry.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AdminData.usedLanguage"VARIATION-POINT"s";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="DOC-REVISIONS">
            <xsd:annotation>
               <xsd:documentation>This allows to denote information about the current revision of the object. 
Note that information about previous revisions can also be logged here. The entries shall be sorted descendant by date in order to reflect the history. Therefore the most recent entry representing the current version is denoted first.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AdminData.docRevision";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.roleElement="true";xml.roleWrapperElement="true";xml.sequenceOffset="50";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="DOC-REVISION" type="AR:DOC-REVISION"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SDGS">
            <xsd:annotation>
               <xsd:documentation>This property allows to keep special data which is not represented by the standard model. It can be utilized to keep e.g. tool specific data.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AdminData.sdg";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.roleElement="true";xml.roleWrapperElement="true";xml.sequenceOffset="60";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="SDG" type="AR:SDG"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class AdminData::AdminData -->
   <xsd:complexType abstract="false" mixed="false" name="ADMIN-DATA">
      <xsd:annotation>
         <xsd:documentation>AdminData represents the ability to express administrative information for an element. This administration information is to be treated as meta-data such as revision id or state of the file. There are basically four kinds of meta-data

* The language and/or used languages.

* Revision information covering e.g. revision number, state, release date, changes. Note that this information can be given in general as well as related to a particular company.

* Document meta-data specific for a company</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AdminData"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ADMIN-DATA"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class ECUCParameterDefTemplate::EcucDefinitionCollection -->
   <xsd:group name="ECUC-DEFINITION-COLLECTION">
      <xsd:annotation>
         <xsd:documentation>This represents the anchor point of an ECU Configuration Parameter Definition within the AUTOSAR templates structure.</xsd:documentation>
         <xsd:appinfo source="tags">atp.recommendedPackage="EcucDefinitionCollections";mmt.qualifiedName="EcucDefinitionCollection"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="MODULE-REFS">
            <xsd:annotation>
               <xsd:documentation>References to  the module definitions of individual software modules.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucDefinitionCollection.module";pureMM.maxOccurs="-1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="MODULE-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:ECUC-MODULE-DEF--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucDefinitionCollection -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-DEFINITION-COLLECTION">
      <xsd:annotation>
         <xsd:documentation>This represents the anchor point of an ECU Configuration Parameter Definition within the AUTOSAR templates structure.</xsd:documentation>
         <xsd:appinfo source="tags">atp.recommendedPackage="EcucDefinitionCollections";mmt.qualifiedName="EcucDefinitionCollection"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:COLLECTABLE-ELEMENT"/>
         <xsd:group ref="AR:PACKAGEABLE-ELEMENT"/>
         <xsd:group ref="AR:AR-ELEMENT"/>
         <xsd:group ref="AR:ECUC-DEFINITION-COLLECTION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>







 <xsd:complexType name="REVISION-LABEL-STRING">
      <xsd:annotation>
         <xsd:documentation>This primitive represents a revision label which identifies an engineering object. It represents a pattern which 

* requires three integers representing from left to right MajorVersion, MinorVersion, PatchVersion.

* may add an application specific suffix separated by one of ".", "_", ";".

Legal patterns are for example:

4.0.0
4.0.0.1234565
4.0.0_vendor specific;13
4.0.0;12</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RevisionLabelString";xml.xsd.customType="REVISION-LABEL-STRING";xml.xsd.pattern="[0-9]+\.[0-9]+\.[0-9]+([\._;].*)?";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:REVISION-LABEL-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:group name="REFERRABLE">
      <xsd:annotation>
         <xsd:documentation>Instances of this class can be referred to by their identifier (while adhering to namespace borders).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Referrable"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="1" name="SHORT-NAME" type="AR:IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>This specifies an identifying shortName for the object. It needs to be unique within its context and is intended for humans but even more for technical reference.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Referrable.shortName";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.enforceMinMultiplicity="true";xml.sequenceOffset="-100"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SHORT-NAME-FRAGMENTS">
            <xsd:annotation>
               <xsd:documentation>This specifies how the Referrable.shortName is composed of several shortNameFragments.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Referrable.shortNameFragment";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.sequenceOffset="-90"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="SHORT-NAME-FRAGMENT" type="AR:SHORT-NAME-FRAGMENT"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>

<!-- element group for class Identifiable::Identifiable -->
   <xsd:group name="IDENTIFIABLE">
      <xsd:annotation>
         <xsd:documentation>Instances of this class can be referred to by their identifier (within the namespace borders). In addition to this, Identifiables are objects  which contribute significantly to the overall structure of an AUTOSAR description. In particular, Identifiables might contain Identifiables.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Identifiable"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="DESC" type="AR:MULTI-LANGUAGE-OVERVIEW-PARAGRAPH">
            <xsd:annotation>
               <xsd:documentation>This represents a general but brief (one paragraph) description what the object in question is about. It is only one paragraph! Desc is intended to be collected into overview tables. This property helps a human reader to identify the object in question.

More elaborate documentation, (in particular how the object is built or used) should go to "introduction".</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Identifiable.desc";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="-60"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="CATEGORY" type="AR:CATEGORY-STRING">
            <xsd:annotation>
               <xsd:documentation>The category is a keyword that specializes the semantics of the Identifiable. It affects the expected existence of attributes and the applicability of constraints.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Identifiable.category";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="-50"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ADMIN-DATA" type="AR:ADMIN-DATA">
            <xsd:annotation>
               <xsd:documentation>This represents the administrative data for the identifiable object.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Identifiable.adminData";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="-40"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="INTRODUCTION" type="AR:DOCUMENTATION-BLOCK">
            <xsd:annotation>
               <xsd:documentation>This represents more information about how the object in question is built or is used. Therefore it is a DocumentationBlock.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Identifiable.introduction";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="-30"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ANNOTATIONS">
            <xsd:annotation>
               <xsd:documentation>Possibility to provide additional notes while defining a model element (e.g. the ECU Configuration Parameter Values). These are not intended as documentation but are mere design notes.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Identifiable.annotation";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.sequenceOffset="-25"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ANNOTATION" type="AR:ANNOTATION"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- attribute group for class Identifiable::Identifiable -->
   <xsd:attributeGroup name="IDENTIFIABLE">
      <xsd:annotation>
         <xsd:documentation>Instances of this class can be referred to by their identifier (within the namespace borders). In addition to this, Identifiables are objects  which contribute significantly to the overall structure of an AUTOSAR description. In particular, Identifiables might contain Identifiables.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Identifiable"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="UUID" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The purpose of this attribute is to provide a globally unique identifier for an instance of a meta-class. The values of this attribute should be globally unique strings prefixed by the type of identifier.  For example, to include a
DCE UUID as defined by The Open Group, the UUID would be preceded by "DCE:". The values of this attribute may be used to support merging of different AUTOSAR models. 
The form of the UUID (Universally Unique Identifier) is taken from a standard defined by the Open Group (was Open Software Foundation). This standard is widely used, including by Microsoft for COM (GUIDs) and by many companies for DCE, which is based on CORBA. The method for generating these 128-bit IDs is published in the standard and the effectiveness and uniqueness of the IDs is not in practice disputed.
If the id namespace is omitted, DCE is assumed. 
An example is "DCE:2fac1234-31f8-11b4-a222-08002b34c003".
The uuid attribute has no semantic meaning for an AUTOSAR model and there is no requirement for AUTOSAR tools to manage the timestamp.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Identifiable.uuid";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
<!-- element group for class ElementCollection::CollectableElement -->
   <xsd:group name="COLLECTABLE-ELEMENT">
      <xsd:annotation>
         <xsd:documentation>This meta-class specifies the ability to be part of a specific  AUTOSAR collection of ARPackages or ARElements.

The scope of collection has been extended beyond CollectableElement with Revision 4.0.3. For compatibility reasons the name of this meta Class was not changed.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CollectableElement"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
 <!-- element group for class ARPackage::ReferenceBase -->
   <xsd:group name="REFERENCE-BASE">
      <xsd:annotation>
         <xsd:documentation>This meta-class establishes a basis for relative references. Reference bases are identified by the shortLabel which must be unique in the current package.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ReferenceBase"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="SHORT-LABEL" type="AR:IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>This is the name of the reference base. By this name, particular references can denote the applicable base.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ReferenceBase.shortLabel";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="10"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="IS-DEFAULT" type="AR:BOOLEAN">
            <xsd:annotation>
               <xsd:documentation>This attribute denotes if the current ReferenceBase is the default. Note that there can only be one default reference base within a package.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ReferenceBase.isDefault";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="IS-GLOBAL" type="AR:BOOLEAN">
            <xsd:annotation>
               <xsd:documentation>This indicates that the target of the applicable reference can be resolved via the non-qualified shortName. This requires that the shortName of the target is unique within the package referenced in the reference base.

The default is false.

Note that the reference base also maintains a list of elements which may be referenced using a "global Reference".</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ReferenceBase.isGlobal";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="25"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="BASE-IS-THIS-PACKAGE" type="AR:BOOLEAN">
            <xsd:annotation>
               <xsd:documentation>This indicates that this base is established by the current package. In this case  the association "package" can be derived as the qualified shortName of the enclosing package. 

If  the value of baseIsThisPackage is set to true then one of the following must be true:

* target of the association "package" must be the enclosing package.
* association "package" is omitted.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ReferenceBase.baseIsThisPackage";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="28"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="GLOBAL-IN-PACKAGE-REFS">
            <xsd:annotation>
               <xsd:documentation>This represents the ability to express that global elements live in various packages which do not have a common ancestor package. Packages mentioned by  ReferenceBase.globalInPackage are used in addition to the one in ReferenceBase.package.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ReferenceBase.globalInPackage";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.sequenceOffset="28"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="GLOBAL-IN-PACKAGE-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:AR-PACKAGE--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="GLOBAL-ELEMENTS">
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="GLOBAL-ELEMENT" type="AR:REFERRABLE--SUBTYPES-ENUM">
                     <xsd:annotation>
                        <xsd:documentation>This attribute represents a meta-class for which the global referencing is supported via this reference base.</xsd:documentation>
                        <xsd:appinfo source="tags">mmt.qualifiedName="ReferenceBase.globalElement";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.sequenceOffset="29"</xsd:appinfo>
                     </xsd:annotation>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="PACKAGE-REF">
            <xsd:annotation>
               <xsd:documentation>This association specifies the basis of all relative references with the base equals shortLabel.

This association must exist unless the value of baseIsThisPackage is set to true.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ReferenceBase.package";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:AR-PACKAGE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ARPackage::ReferenceBase -->
   <xsd:complexType abstract="false" mixed="false" name="REFERENCE-BASE">
      <xsd:annotation>
         <xsd:documentation>This meta-class establishes a basis for relative references. Reference bases are identified by the shortLabel which must be unique in the current package.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ReferenceBase"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERENCE-BASE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>

<!-- element group for class ECUCParameterDefTemplate::EcucModuleDef -->
   <xsd:group name="ECUC-MODULE-DEF">
      <xsd:annotation>
         <xsd:documentation>Used as the top-level element for configuration definition for Software Modules, including BSW and RTE as well as ECU Infrastructure.</xsd:documentation>
         <xsd:appinfo source="tags">atp.recommendedPackage="EcucModuleDefs";mmt.qualifiedName="EcucModuleDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="API-SERVICE-PREFIX" type="AR:C-IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>For CDD modules this attribute holds the apiServicePrefix.

The shortName of the module definition of a Complex Driver is always "Cdd". Therefore for CDD modules the module apiServicePrefix is described with this attribute.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucModuleDef.apiServicePrefix";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="POST-BUILD-VARIANT-SUPPORT" type="AR:BOOLEAN">
            <xsd:annotation>
               <xsd:documentation>Indicates if a module supports different post-build variants (previously known as post-build selectable configuration sets). TRUE means yes, FALSE means no.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucModuleDef.postBuildVariantSupport";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="REFINED-MODULE-DEF-REF">
            <xsd:annotation>
               <xsd:documentation>Optional reference from the Vendor Specific Module Definition to the Standardized Module Definition it refines. 
In case this EcucModuleDef has the category STANDARDIZED_MODULE_DEFINITION 
this reference shall not be provided. In case this EcucModuleDef has the category VENDOR_SPECIFIC_MODULE_DEFINITION this reference is mandatory.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucModuleDef.refinedModuleDef";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpUriDef</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:ECUC-MODULE-DEF--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SUPPORTED-CONFIG-VARIANTS">
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="SUPPORTED-CONFIG-VARIANT" type="AR:ECUC-CONFIGURATION-VARIANT-ENUM">
                     <xsd:annotation>
                        <xsd:documentation>Specifies which ConfigurationVariants are supported by this software module. 
This attribute is optional if the EcucModuleDef has the category STANDARDIZED_MODULE_DEFINITION. If the category attribute of the EcucModuleDef is set to VENDOR_SPECIFIC_MODULE_DEFINITION then this attribute is mandatory.</xsd:documentation>
                        <xsd:appinfo source="tags">mmt.qualifiedName="EcucModuleDef.supportedConfigVariant";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
                     </xsd:annotation>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="CONTAINERS">
            <xsd:annotation>
               <xsd:documentation>Aggregates the top-level container definitions of this specific module definition.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName";mmt.qualifiedName="EcucModuleDef.container";pureMM.maxOccurs="-1";pureMM.minOccurs="1";xml.sequenceOffset="11"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ECUC-CHOICE-CONTAINER-DEF" type="AR:ECUC-CHOICE-CONTAINER-DEF"/>
                  <xsd:element name="ECUC-PARAM-CONF-CONTAINER-DEF" type="AR:ECUC-PARAM-CONF-CONTAINER-DEF"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucModuleDef -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-MODULE-DEF">
      <xsd:annotation>
         <xsd:documentation>Used as the top-level element for configuration definition for Software MoANNOTATIONdules, including BSW and RTE as well as ECU Infrastructure.</xsd:documentation>
         <xsd:appinfo source="tags">atp.recommendedPackage="EcucModuleDefs";mmt.qualifiedName="EcucModuleDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:COLLECTABLE-ELEMENT"/>
         <xsd:group ref="AR:PACKAGEABLE-ELEMENT"/>
         <xsd:group ref="AR:AR-ELEMENT"/>
         <xsd:group ref="AR:ECUC-DEFINITION-ELEMENT"/>
         <xsd:group ref="AR:ECUC-MODULE-DEF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class ARPackage::PackageableElement -->
   <xsd:group name="PACKAGEABLE-ELEMENT">
      <xsd:annotation>
         <xsd:documentation>This meta-class specifies the ability to be a member of an AUTOSAR package.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PackageableElement"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="PackageableElement.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
<!-- element group for class ECUCParameterDefTemplate::EcucDefinitionElement -->
   <xsd:group name="ECUC-DEFINITION-ELEMENT">
      <xsd:annotation>
         <xsd:documentation>Common class used to express the commonalities of configuration parameters, references and containers.
If not stated otherwise the default multiplicity is exactly one mandatory occurrence of the specified element.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucDefinitionElement"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="RELATED-TRACE-ITEM-REF">
            <xsd:annotation>
               <xsd:documentation>This contains a sloppy reference to the Autosar compatible identifier of the element (EcucId).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucDefinitionElement.relatedTraceItem";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="-10"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpUriDef</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:TRACEABLE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ECUC-VALIDATION-CONDS">
            <xsd:annotation>
               <xsd:documentation>Collection of validation conditions which all need to evaluate to true in order to indicate a valid validation condition of the EcucDefinitionElement.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucDefinitionElement.ecucValidationCond";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ECUC-VALIDATION-CONDITION" type="AR:ECUC-VALIDATION-CONDITION"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ECUC-COND" type="AR:ECUC-CONDITION-SPECIFICATION">
            <xsd:annotation>
               <xsd:documentation>If it evaluates to true the Ecu Parameter definition shall be processed as specified. Otherwise the parameter definition shall be ignored.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucDefinitionElement.ecucCond";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="100"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="LOWER-MULTIPLICITY" type="AR:POSITIVE-INTEGER-VALUE-VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>The lower multiplicity of the specified element.
0: optional
1: at least one occurrence
n: at least n occurrences

atpVariation: [RS_ECUC_00082]</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucDefinitionElement.lowerMultiplicity";pureMM.maxOccurs="1";pureMM.minOccurs="1";vh.latestBindingTime="codeGenerationTime";xml.sequenceOffset="110"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="UPPER-MULTIPLICITY" type="AR:POSITIVE-INTEGER-VALUE-VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>The upper multiplicity of the specified element.
0: no occurrence (used for VSMD)
1: at most one occurrence
m: at most m occurrences

If upperMultiplicity is set than upperMultiplicityInfinite shall not be used. 

atpVariation: [RS_ECUC_00082]</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucDefinitionElement.upperMultiplicity";pureMM.maxOccurs="1";pureMM.minOccurs="0";vh.latestBindingTime="codeGenerationTime";xml.sequenceOffset="120"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="UPPER-MULTIPLICITY-INFINITE" type="AR:BOOLEAN-VALUE-VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>To express an infinite number of occurrences of this element this attribute has to be set to true. 

If upperMultiplicityInfinite is set than upperMultiplicity shall not be used.

atpVariation: [RS_ECUC_00082]</xsd:documentation>
<xsd:appinfo source="tags">mmt.qualifiedName="EcucDefinitionElement.upperMultiplicityInfinite";pureMM.maxOccurs="1";pureMM.minOccurs="0";vh.latestBindingTime="codeGenerationTime";xml.sequenceOffset="130"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SCOPE" type="AR:ECUC-SCOPE-ENUM">
            <xsd:annotation>
               <xsd:documentation>Specifies the scope of this configuration element.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucDefinitionElement.scope";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="150"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>

               
<xsd:complexType name="IDENTIFIER">
      <xsd:annotation>
         <xsd:documentation>An Identifier is a string with a number of constraints on its appearance, satisfying the requirements typical programming languages define for their Identifiers.

This datatype represents a string, that can be used as a c-Identifier.

It shall start with a letter, may consist of letters, digits and underscores.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Identifier";xml.xsd.customType="IDENTIFIER";xml.xsd.maxLength="128";xml.xsd.pattern="[a-zA-Z][a-zA-Z0-9_]*";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject,primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:IDENTIFIER--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
            <xsd:attributeGroup ref="AR:IDENTIFIER"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <!-- attribute group for class IDENTIFIER -->
   <xsd:attributeGroup name="IDENTIFIER">
      <xsd:annotation/>
      <xsd:attribute name="NAME-PATTERN" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute represents a pattern which shall be used to define the value of the identifier if the identifier in question is part of a blueprint. 

For more details refer to TPS_StandardizationTemplate.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Identifier.namePattern";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
  <xsd:simpleType name="IDENTIFIER--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:maxLength value="128"/>
         <xsd:pattern value="[a-zA-Z][a-zA-Z0-9_]*"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:group name="SHORT-NAME-FRAGMENT">
      <xsd:annotation>
         <xsd:documentation>This class describes how the Referrable.shortName is composed of several shortNameFragments.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ShortNameFragment"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ROLE" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>This specifies the role of fragment to define e.g. the order of the fragments.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ShortNameFragment.role";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="10"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="FRAGMENT" type="AR:IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>This specifies a single shortName (fragment) which is part of the composed shortName.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ShortNameFragment.fragment";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Identifiable::ShortNameFragment -->
   <xsd:complexType abstract="false" mixed="false" name="SHORT-NAME-FRAGMENT">
      <xsd:annotation>
         <xsd:documentation>This class describes how the Referrable.shortName is composed of several shortNameFragments.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ShortNameFragment"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SHORT-NAME-FRAGMENT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class MultilanguageData::MultilanguageLongName -->
   <xsd:group name="MULTILANGUAGE-LONG-NAME">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to specify a long name which acts in the role of a headline. It is intended for human readers. Per language it should be around max 80 characters.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MultilanguageLongName"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="L-4" type="AR:L-LONG-NAME">
            <xsd:annotation>
               <xsd:documentation>This is the long name in one particular language.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MultilanguageLongName.l4";pureMM.maxOccurs="-1";pureMM.minOccurs="1";xml.roleElement="true";xml.roleWrapperElement="false";xml.sequenceOffset="20";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class MultilanguageData::MultilanguageLongName -->
   <xsd:complexType abstract="false" mixed="false" name="MULTILANGUAGE-LONG-NAME">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to specify a long name which acts in the role of a headline. It is intended for human readers. Per language it should be around max 80 characters.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MultilanguageLongName"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:MULTILANGUAGE-LONG-NAME"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
  <!-- element group for class MultilanguageData::MultiLanguageOverviewParagraph -->
   <xsd:group name="MULTI-LANGUAGE-OVERVIEW-PARAGRAPH">
      <xsd:annotation>
         <xsd:documentation>This is the content of a multilingual paragraph in an overview item.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MultiLanguageOverviewParagraph"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="L-2" type="AR:L-OVERVIEW-PARAGRAPH">
            <xsd:annotation>
               <xsd:documentation>This represents the text in one particular language.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MultiLanguageOverviewParagraph.l2";pureMM.maxOccurs="-1";pureMM.minOccurs="1";xml.roleElement="true";xml.roleWrapperElement="false";xml.sequenceOffset="20";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class MultilanguageData::MultiLanguageOverviewParagraph -->
   <xsd:complexType abstract="false" mixed="false" name="MULTI-LANGUAGE-OVERVIEW-PARAGRAPH">
      <xsd:annotation>
         <xsd:documentation>This is the content of a multilingual paragraph in an overview item.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MultiLanguageOverviewParagraph"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:MULTI-LANGUAGE-OVERVIEW-PARAGRAPH"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
   <!-- element group for class MultilanguageData::MultiLanguageParagraph -->
   <xsd:group name="MULTI-LANGUAGE-PARAGRAPH">
      <xsd:annotation>
         <xsd:documentation>This is the content model of a multilingual paragraph in a documentation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MultiLanguageParagraph"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="L-1" type="AR:L-PARAGRAPH">
            <xsd:annotation>
               <xsd:documentation>This is the paragraph content in one partiucular language.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MultiLanguageParagraph.l1";pureMM.maxOccurs="-1";pureMM.minOccurs="1";xml.roleElement="true";xml.roleWrapperElement="false";xml.sequenceOffset="20";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MultiLanguageParagraph.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- attribute group for class MultilanguageData::MultiLanguageParagraph -->
   <xsd:attributeGroup name="MULTI-LANGUAGE-PARAGRAPH">
      <xsd:annotation>
         <xsd:documentation>This is the content model of a multilingual paragraph in a documentation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MultiLanguageParagraph"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="HELP-ENTRY" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This specifies an entry point in an online help system to be linked with the parent class. The syntax must be defined by the applied help system respectively help system generator.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="MultiLanguageParagraph.helpEntry";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class MultilanguageData::MultiLanguageParagraph -->
   <xsd:complexType abstract="false" mixed="false" name="MULTI-LANGUAGE-PARAGRAPH">
      <xsd:annotation>
         <xsd:documentation>This is the content model of a multilingual paragraph in a documentation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MultiLanguageParagraph"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
         <xsd:group ref="AR:PAGINATEABLE"/>
         <xsd:group ref="AR:MULTI-LANGUAGE-PARAGRAPH"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
      <xsd:attributeGroup ref="AR:PAGINATEABLE"/>
      <xsd:attributeGroup ref="AR:MULTI-LANGUAGE-PARAGRAPH"/>
   </xsd:complexType>
   <!-- element group for class MultilanguageData::MultiLanguagePlainText -->
   <xsd:group name="MULTI-LANGUAGE-PLAIN-TEXT">
      <xsd:annotation>
         <xsd:documentation>This is a multilingual plaint Text.It is intended to be rendered as a paragraph.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MultiLanguagePlainText"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="L-10" type="AR:L-PLAIN-TEXT">
            <xsd:annotation>
               <xsd:documentation>This is the plain text in one particular language.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MultiLanguagePlainText.l10";pureMM.maxOccurs="-1";pureMM.minOccurs="1";xml.roleElement="true";xml.roleWrapperElement="false";xml.sequenceOffset="20";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class MultilanguageData::MultiLanguagePlainText -->
   <xsd:complexType abstract="false" mixed="false" name="MULTI-LANGUAGE-PLAIN-TEXT">
      <xsd:annotation>
         <xsd:documentation>This is a multilingual plaint Text.It is intended to be rendered as a paragraph.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MultiLanguagePlainText"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:MULTI-LANGUAGE-PLAIN-TEXT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
   <!-- element group for class MultilanguageData::MultiLanguageVerbatim -->
   <xsd:group name="MULTI-LANGUAGE-VERBATIM">
      <xsd:annotation>
         <xsd:documentation>This class represents multilingual Verbatim. Verbatim means, that white-space is maintained. When Verbatim is rendered in PDF or Online media, white-space is obeyed. Blanks are rendered as well as newline characters.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MultiLanguageVerbatim"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="L-5" type="AR:L-VERBATIM">
            <xsd:annotation>
               <xsd:documentation>This the text in one particular language.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MultiLanguageVerbatim.l5";pureMM.maxOccurs="-1";pureMM.minOccurs="1";xml.roleElement="true";xml.roleWrapperElement="false";xml.sequenceOffset="20";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MultiLanguageVerbatim.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- attribute group for class MultilanguageData::MultiLanguageVerbatim -->
   <xsd:attributeGroup name="MULTI-LANGUAGE-VERBATIM">
      <xsd:annotation>
         <xsd:documentation>This class represents multilingual Verbatim. Verbatim means, that white-space is maintained. When Verbatim is rendered in PDF or Online media, white-space is obeyed. Blanks are rendered as well as newline characters.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MultiLanguageVerbatim"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="ALLOW-BREAK" type="AR:NMTOKEN-STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This indicates if the verbatim text might be split on multiple pages. Default is "1".</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="MultiLanguageVerbatim.allowBreak";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="FLOAT" type="AR:FLOAT-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicate whether it is allowed to break the element. The following values are allowed:</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="MultiLanguageVerbatim.float";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="HELP-ENTRY" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This specifies an entry point in an online help system to be linked with the parent class. The syntax must be defined by the applied help system respectively help system generator.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="MultiLanguageVerbatim.helpEntry";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="PGWIDE" type="AR:PGWIDE-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Used to indicate wether the figure should take the complete page width (value = "pgwide") or not (value = "noPgwide").</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="MultiLanguageVerbatim.pgwide";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class MultilanguageData::MultiLanguageVerbatim -->
   <xsd:complexType abstract="false" mixed="false" name="MULTI-LANGUAGE-VERBATIM">
      <xsd:annotation>
         <xsd:documentation>This class represents multilingual Verbatim. Verbatim means, that white-space is maintained. When Verbatim is rendered in PDF or Online media, white-space is obeyed. Blanks are rendered as well as newline characters.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MultiLanguageVerbatim"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
         <xsd:group ref="AR:PAGINATEABLE"/>
         <xsd:group ref="AR:MULTI-LANGUAGE-VERBATIM"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
      <xsd:attributeGroup ref="AR:PAGINATEABLE"/>
      <xsd:attributeGroup ref="AR:MULTI-LANGUAGE-VERBATIM"/>
   </xsd:complexType>
<!-- element group for class AdminData::DocRevision -->
   <xsd:group name="DOC-REVISION">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to maintain information which relates to revision management of documents or objects.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DocRevision";xml.sequenceOffset="20"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="REVISION-LABEL" type="AR:REVISION-LABEL-STRING">
            <xsd:annotation>
               <xsd:documentation>This attribute represents the version number of the object.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="DocRevision.revisionLabel";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="REVISION-LABEL-P-1" type="AR:REVISION-LABEL-STRING">
            <xsd:annotation>
               <xsd:documentation>This attribute represents the version number of the first predecessor  of the object.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="DocRevision.revisionLabelP1";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="REVISION-LABEL-P-2" type="AR:REVISION-LABEL-STRING">
            <xsd:annotation>
               <xsd:documentation>This attribute represents the version number of the second predecessor of the object.

This attribute is used if the object is the result of a merge process in which two branches are merged in to one new revision.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="DocRevision.revisionLabelP2";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="40"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="STATE" type="AR:NMTOKEN-STRING">
            <xsd:annotation>
               <xsd:documentation>The attribute state represents the current state of the current file according to the configuration management plan. It is a NameToken until possible states are  standardized.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="DocRevision.state";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="50"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ISSUED-BY" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>This is the name of an individual or an organization who issued the current revision of the document or document fragment.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="DocRevision.issuedBy";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="60"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="DATE" type="AR:DATE">
            <xsd:annotation>
               <xsd:documentation>This specifies the date and time, when the object in question was released</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="DocRevision.date";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="80"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MODIFICATIONS">
            <xsd:annotation>
               <xsd:documentation>This property represents one particular modification in comparison to its predecessor.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="DocRevision.modification";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.roleElement="true";xml.roleWrapperElement="true";xml.sequenceOffset="100";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="MODIFICATION" type="AR:MODIFICATION"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class AdminData::DocRevision -->
   <xsd:complexType abstract="false" mixed="false" name="DOC-REVISION">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to maintain information which relates to revision management of documents or objects.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DocRevision";xml.sequenceOffset="20"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:DOC-REVISION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
   <!-- element group for class PaginationAndView::DocumentViewSelectable -->
   <xsd:group name="DOCUMENT-VIEW-SELECTABLE">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to be dedicated to a particular audience or document view.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DocumentViewSelectable"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- attribute group for class PaginationAndView::DocumentViewSelectable -->
   <xsd:attributeGroup name="DOCUMENT-VIEW-SELECTABLE">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to be dedicated to a particular audience or document view.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DocumentViewSelectable"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="SI" type="AR:NMTOKENS-STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute allows to denote a semantic information which is used to identify documentation objects to be selected in customizable document views. It shall be defined in agreement between the involved parties.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="DocumentViewSelectable.si";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="VIEW" type="AR:VIEW-TOKENS--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute lists the document views in which the object shall appear. If it is missing, the object appears in all document views.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="DocumentViewSelectable.view";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- element group for class DocumentationOnM1::Documentation -->
   <xsd:group name="DOCUMENTATION">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to handle a so called standalone documentation. Standalone means, that such a documentation is not embedded in another ARElement or identifiable object.  The standalone documentation is an entity of its own which denotes its context by reference to other objects and instances.</xsd:documentation>
         <xsd:appinfo source="tags">atp.recommendedPackage="Documentations";mmt.qualifiedName="Documentation"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="CONTEXTS">
            <xsd:annotation>
               <xsd:documentation>This is the context of the particular documentation.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Documentation.context";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="DOCUMENTATION-CONTEXT" type="AR:DOCUMENTATION-CONTEXT"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="DOCUMENTATION-CONTENT" type="AR:PREDEFINED-CHAPTER">
            <xsd:annotation>
               <xsd:documentation>This is the content of the documentation related to the specified contexts.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Documentation.documentationContent";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="200"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class DocumentationOnM1::Documentation -->
   <xsd:complexType abstract="false" mixed="false" name="DOCUMENTATION">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to handle a so called standalone documentation. Standalone means, that such a documentation is not embedded in another ARElement or identifiable object.  The standalone documentation is an entity of its own which denotes its context by reference to other objects and instances.</xsd:documentation>
         <xsd:appinfo source="tags">atp.recommendedPackage="Documentations";mmt.qualifiedName="Documentation"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:COLLECTABLE-ELEMENT"/>
         <xsd:group ref="AR:PACKAGEABLE-ELEMENT"/>
         <xsd:group ref="AR:AR-ELEMENT"/>
         <xsd:group ref="AR:DOCUMENTATION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
   <!-- element group for class BlockElements::DocumentationBlock -->
   <xsd:group name="DOCUMENTATION-BLOCK">
      <xsd:annotation>
         <xsd:documentation>This class represents a documentation block. It is made of basic text structure elements which can be displayed in a table cell.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DocumentationBlock"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixed,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="MSR-QUERY-P-2" type="AR:MSR-QUERY-P-2">
               <xsd:annotation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="DocumentationBlock.msrQueryP2";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="P" type="AR:MULTI-LANGUAGE-PARAGRAPH">
               <xsd:annotation>
                  <xsd:documentation>This is one particular paragraph.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="DocumentationBlock.p";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="postBuild";xml.sequenceOffset="10"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="VERBATIM" type="AR:MULTI-LANGUAGE-VERBATIM">
               <xsd:annotation>
                  <xsd:documentation>This represents one particular verbatim text.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="DocumentationBlock.verbatim";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="postBuild";xml.sequenceOffset="20"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="LIST" type="AR:LIST">
               <xsd:annotation>
                  <xsd:documentation>This represents numbered or unnumbered list. 
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="DocumentationBlock.list";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="postBuild";xml.sequenceOffset="30"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="DEF-LIST" type="AR:DEF-LIST">
               <xsd:annotation>
                  <xsd:documentation>This represents a definition list in the documentation block.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="DocumentationBlock.defList";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="postBuild";xml.sequenceOffset="40"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="LABELED-LIST" type="AR:LABELED-LIST">
               <xsd:annotation>
                  <xsd:documentation>This represents a labeled list.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="DocumentationBlock.labeledList";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="postBuild";xml.sequenceOffset="50"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="FORMULA" type="AR:ML-FORMULA">
               <xsd:annotation>
                  <xsd:documentation>This is a formula in the definition block.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="DocumentationBlock.formula";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="postBuild";xml.sequenceOffset="60"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="FIGURE" type="AR:ML-FIGURE">
               <xsd:annotation>
                  <xsd:documentation>This represents a figure in the documentation block.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="DocumentationBlock.figure";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="postBuild";xml.sequenceOffset="70"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="NOTE" type="AR:NOTE">
               <xsd:annotation>
                  <xsd:documentation>This represents a note in the text flow.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="DocumentationBlock.note";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="postBuild";xml.sequenceOffset="80"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="TRACE" type="AR:TRACEABLE-TEXT">
               <xsd:annotation>
                  <xsd:documentation>This represents traceable text in the documentation block. This allows to specify requirements/constraints in any documentation block.

The kind of the trace is specified in the category.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="DocumentationBlock.trace";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="postBuild";xml.sequenceOffset="90"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="STRUCTURED-REQ" type="AR:STRUCTURED-REQ">
               <xsd:annotation>
                  <xsd:documentation>This aggregation supports structured requirements embedded in a documentation block.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="DocumentationBlock.structuredReq";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="postBuild";xml.sequenceOffset="100"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
         </xsd:choice>
      </xsd:choice>
   </xsd:group>
   <!-- complex type for class BlockElements::DocumentationBlock -->
   <xsd:complexType abstract="false" mixed="false" name="DOCUMENTATION-BLOCK">
      <xsd:annotation>
         <xsd:documentation>This class represents a documentation block. It is made of basic text structure elements which can be displayed in a table cell.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DocumentationBlock"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixed,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:DOCUMENTATION-BLOCK"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
   <!-- element group for class DocumentationOnM1::DocumentationContext -->
   <xsd:group name="DOCUMENTATION-CONTEXT">
      <xsd:annotation>
         <xsd:documentation>This class represents the ability to denote a context of a so called standalone  documentation. Note that this is an &lt;&lt;atpMixed&gt;&gt;. The contents needs to be considered as ordered.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DocumentationContext"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="FEATURE-IREF" type="AR:ANY-INSTANCE-REF">
            <xsd:annotation>
               <xsd:documentation>This refers to a particular  feature (instance in the M0 model) to which is the context of the documentation.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="DocumentationContext.feature";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="IDENTIFIABLE-REF">
            <xsd:annotation>
               <xsd:documentation>This is an identifiable object which is part of the context of the documentation.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="DocumentationContext.identifiable";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:IDENTIFIABLE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class DocumentationOnM1::DocumentationContext -->
   <xsd:complexType abstract="false" mixed="false" name="DOCUMENTATION-CONTEXT">
      <xsd:annotation>
         <xsd:documentation>This class represents the ability to denote a context of a so called standalone  documentation. Note that this is an &lt;&lt;atpMixed&gt;&gt;. The contents needs to be considered as ordered.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DocumentationContext"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:DOCUMENTATION-CONTEXT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class PaginationAndView::Paginateable -->
   <xsd:group name="PAGINATEABLE">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to control the pagination policy when creating documents.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Paginateable"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- attribute group for class PaginationAndView::Paginateable -->
   <xsd:attributeGroup name="PAGINATEABLE">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to control the pagination policy when creating documents.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Paginateable"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="BREAK" type="AR:CHAPTER-ENUM-BREAK--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attributes allows to specify a forced page break.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Paginateable.break";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="KEEP-WITH-PREVIOUS" type="AR:KEEP-WITH-PREVIOUS-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute denotes the pagination policy. In particular it defines if the containing text block shall be kept together with the previous block.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Paginateable.keepWithPrevious";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
<!-- element group for class Identifiable::MultilanguageReferrable -->
   <xsd:group name="MULTILANGUAGE-REFERRABLE">
      <xsd:annotation>
         <xsd:documentation>Instances of this class can be referred to by their identifier (while adhering to namespace borders). They also may have a longName. But they are not considered to contribute substantially to the overall structure of an AUTOSAR description. In particular it does not contain other Referrables.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MultilanguageReferrable"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="LONG-NAME" type="AR:MULTILANGUAGE-LONG-NAME">
            <xsd:annotation>
               <xsd:documentation>This specifies the long name of the object. Long name is targeted to human readers and acts like a headline.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MultilanguageReferrable.longName";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>

   <!-- element group for class SpecialData::Sdg -->
   <xsd:group name="SDG">
      <xsd:annotation>
         <xsd:documentation>Sdg (SpecialDataGroup) is a generic model which can be used to keep arbitrary information which is not explicitly modeled in the meta-model. 

Sdg can have various contents as defined by sdgContentsType. Special Data should only be used moderately since all elements should be defined in the meta-model. 

Thereby SDG should be considered as a temporary solution when no explicit model is available. If an sdgCaption is available, it is possible to establish a reference to the sdg structure.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Sdg"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="SDG-CAPTION" type="AR:SDG-CAPTION">
            <xsd:annotation>
               <xsd:documentation>This aggregation allows to assign the properties of Identifiable to the sdg. By this, a shortName etc. can be assigned to the Sdg.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Sdg.sdgCaption";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SDG-CAPTION-REF">
            <xsd:annotation>
               <xsd:documentation>This association allows to reuse an already existing caption.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Sdg.sdgCaptionRef";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.name="SDG-CAPTION-REF";xml.sequenceOffset="25"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:SDG-CAPTION--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:choice maxOccurs="1" minOccurs="0">
            <xsd:group ref="AR:SDG-CONTENTS"/>
         </xsd:choice>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Sdg.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- attribute group for class SpecialData::Sdg -->
   <xsd:attributeGroup name="SDG">
      <xsd:annotation>
         <xsd:documentation>Sdg (SpecialDataGroup) is a generic model which can be used to keep arbitrary information which is not explicitly modeled in the meta-model. 

Sdg can have various contents as defined by sdgContentsType. Special Data should only be used moderately since all elements should be defined in the meta-model. 

Thereby SDG should be considered as a temporary solution when no explicit model is available. If an sdgCaption is available, it is possible to establish a reference to the sdg structure.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Sdg"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="GID" type="AR:NMTOKEN-STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attributes specifies an identifier. Gid comes from the SGML/XML-Term "Generic Identifier" which is the element name in XML. The role of this attribute is the same as the name of an XML - element.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Sdg.gid";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class SpecialData::Sdg -->
   <xsd:complexType abstract="false" mixed="false" name="SDG">
      <xsd:annotation>
         <xsd:documentation>Sdg (SpecialDataGroup) is a generic model which can be used to keep arbitrary information which is not explicitly modeled in the meta-model. 

Sdg can have various contents as defined by sdgContentsType. Special Data should only be used moderately since all elements should be defined in the meta-model. 

Thereby SDG should be considered as a temporary solution when no explicit model is available. If an sdgCaption is available, it is possible to establish a reference to the sdg structure.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Sdg"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SDG"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:SDG"/>
   </xsd:complexType>
   <!-- element group for class SpecialData::SdgCaption -->
   <xsd:group name="SDG-CAPTION">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the caption of a special data group. This allows to have some parts of special data as identifiable.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SdgCaption"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="DESC" type="AR:MULTI-LANGUAGE-OVERVIEW-PARAGRAPH">
            <xsd:annotation>
               <xsd:documentation>This represents a general but brief (one paragraph) description what the special data in question is about. It is only one paragraph! Desc is intended to be collected into overview tables. This property helps a human reader to identify the special data in question.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SdgCaption.desc";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class SpecialData::SdgCaption -->
   <xsd:complexType abstract="false" mixed="false" name="SDG-CAPTION">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the caption of a special data group. This allows to have some parts of special data as identifiable.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SdgCaption"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:SDG-CAPTION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
   <xsd:simpleType name="SDG-CAPTION--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="SDG-CAPTION"/>
      </xsd:restriction>
   </xsd:simpleType>
   <!-- element group for class SpecialData::SdgContents -->
   <xsd:group name="SDG-CONTENTS">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the possible contents of a special data group. It can be an arbitrary mix of references, of primitive special data and nested special data groups.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SdgContents"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixed,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="SDX-REF">
               <xsd:annotation>
                  <xsd:documentation>Reference to any identifiable element. This allows to use Sdg even to establish arbitrary relationships.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="SdgContents.sdx";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
               </xsd:annotation>
               <xsd:complexType>
                  <xsd:simpleContent>
                     <xsd:extension base="AR:REF">
                        <xsd:attribute name="DEST" type="AR:REFERRABLE--SUBTYPES-ENUM" use="required"/>
                     </xsd:extension>
                  </xsd:simpleContent>
               </xsd:complexType>
            </xsd:element>
            <xsd:element name="SDXF" type="AR:REFERRABLE-REF-CONDITIONAL">
               <xsd:annotation>
                  <xsd:documentation>Additional reference with variant support.
This property was modified due to atpVariation (DirectedAssociationPattern).</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="SdgContents.sdxf";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="postBuild"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="SD" type="AR:SD">
               <xsd:annotation>
                  <xsd:documentation>This is one particular special data element.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="SdgContents.sd";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="40"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="SDG" type="AR:SDG">
               <xsd:annotation>
                  <xsd:documentation>This aggregation allows to express nested special data groups. By this, any structure can be represented in SpeicalData.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="SdgContents.sdg";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="postBuild";xml.sequenceOffset="50"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="SDF" type="AR:SDF">
               <xsd:annotation>
                  <xsd:documentation>This is one particular special data element.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="SdgContents.sdf";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="60"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
         </xsd:choice>
      </xsd:choice>
   </xsd:group>
   <!-- complex type for class SpecialData::SdgContents -->
   <xsd:complexType abstract="false" mixed="false" name="SDG-CONTENTS">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the possible contents of a special data group. It can be an arbitrary mix of references, of primitive special data and nested special data groups.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SdgContents"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixed,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SDG-CONTENTS"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
   <!-- element group for class MemorySectionUsage::SectionNamePrefix -->
   <xsd:group name="SECTION-NAME-PREFIX">
      <xsd:annotation>
         <xsd:documentation>A prefix to be used for generated code artifacts defining a memory section name in the source code of the using module.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SectionNamePrefix"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="IMPLEMENTED-IN-REF">
            <xsd:annotation>
               <xsd:documentation>Optional reference that allows to Indicate the code artifact (header file) containing the preprocessor implementation of memory sections with this prefix.

The usage of this link supersedes the usage of a memory mapping header with the default name (derived from the BswModuleDescription's shortName).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SectionNamePrefix.implementedIn";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:DEPENDENCY-ON-ARTIFACT--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SectionNamePrefix.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
<xsd:complexType name="REF">
      <xsd:annotation>
         <xsd:documentation>This primitive denotes a name based reference. For detailed syntax see the xsd.pattern.

* first slash (relative or absolute reference) [optional]
* Identifier  [required]
* a sequence of slashes and Identifiers [optional]

This primitive is used by the meta-model tools to create the references.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Ref";xml.xsd.customType="REF";xml.xsd.pattern="/?[a-zA-Z][a-zA-Z0-9_]{0,127}(/[a-zA-Z][a-zA-Z0-9_]{0,127})*";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject,primitive</xsd:appinfo>
         <xsd:appinfo source="constraint_2552">Index attribute is only valid for arrays ⌈The index attribute in references is valid only if the reference target is an ApplicationArrayElement or if the reference target is an ImplementationDataTypeElement owned by an ImplementationDataType/ImplementationDataTypeElement of category ARRAY and has an attribute maxNumberOfElements/arraySize.⌋</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:REF--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
            <xsd:attributeGroup ref="AR:REF"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <!-- attribute group for class REF -->
   <xsd:attributeGroup name="REF">
      <xsd:annotation/>
      <xsd:attribute name="BASE" type="AR:IDENTIFIER--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute reflects the base to be used for this reference.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Ref.base";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
	<xsd:attribute name="INDEX" type="AR:POSITIVE-INTEGER--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute supports the use case to point on specific elements in an array. This is in particular required if arrays are used to implement particular data objects.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Ref.index";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <xsd:simpleType name="REF--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="/?[a-zA-Z][a-zA-Z0-9_]{0,127}(/[a-zA-Z][a-zA-Z0-9_]{0,127})*"/>
      </xsd:restriction>
   </xsd:simpleType>
 <!-- element group for class SpecialData::Sdf -->
   <xsd:group name="SDF">
      <xsd:annotation>
         <xsd:documentation>This class represents a numerical value in a special data group which may be subject to variability.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Sdf"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="VALUE" type="AR:NUMERICAL-VALUE-VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This is the value of the special data.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Sdf.value";pureMM.maxOccurs="1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- attribute group for class SpecialData::Sdf -->
   <xsd:attributeGroup name="SDF">
      <xsd:annotation>
         <xsd:documentation>This class represents a numerical value in a special data group which may be subject to variability.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Sdf"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="GID" type="AR:NMTOKEN-STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attributes specifies an identifier. Gid comes from the SGML/XML-Term "Generic Identifier" which is the element name in XML. The role of this attribute is the same as the name of an XML - element.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Sdf.gid";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class SpecialData::Sdf -->
   <xsd:complexType abstract="false" mixed="false" name="SDF">
      <xsd:annotation>
         <xsd:documentation>This class represents a numerical value in a special data group which may be subject to variability.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Sdf"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SDF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:SDF"/>
   </xsd:complexType>
<!-- element group for class GeneralAnnotation::GeneralAnnotation -->
   <xsd:group name="GENERAL-ANNOTATION">
      <xsd:annotation>
         <xsd:documentation>This class represents textual comments (called annotations) which relate to the object in which it is aggregated. These annotations are intended for use during the development process for transferring information from one step of the development process to the next one. 

The approach is similar to the "yellow pads" ...

This abstract class can be specialized in order to add some further formal properties.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="GeneralAnnotation"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="LABEL" type="AR:MULTILANGUAGE-LONG-NAME">
            <xsd:annotation>
               <xsd:documentation>This is the headline for the annotation.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GeneralAnnotation.label";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ANNOTATION-ORIGIN" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>This attribute identifies the origin of the annotation. It is an arbitrary string since it can be an individual's name as well as the name of a tool or even the name of a process step.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GeneralAnnotation.annotationOrigin";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ANNOTATION-TEXT" type="AR:DOCUMENTATION-BLOCK">
            <xsd:annotation>
               <xsd:documentation>This is the text of the annotation.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GeneralAnnotation.annotationText";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="40"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>

   <xsd:simpleType name="ECUC-MODULE-DEF--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ECUC-MODULE-DEF"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:complexType name="ECUC-CONFIGURATION-VARIANT-ENUM">
      <xsd:annotation>
         <xsd:documentation>Specifies the possible Configuration Variants used for AUTOSAR BSW Modules.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucConfigurationVariantEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ECUC-CONFIGURATION-VARIANT-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="ECUC-CONFIGURATION-VARIANT-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="PRECONFIGURED-CONFIGURATION">
            <xsd:annotation>
               <xsd:documentation>Preconfigured (i.e. fixed) configuration which cannot be changed.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucConfigurationVariantEnum.PreconfiguredConfiguration"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RECOMMENDED-CONFIGURATION">
            <xsd:annotation>
               <xsd:documentation>Recommended configuration for a module.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucConfigurationVariantEnum.RecommendedConfiguration"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VARIANT-LINK-TIME">
            <xsd:annotation>
               <xsd:documentation>Specifies that the BSW Module implementation may use PreCompileTime and LinkTime configuration parameters.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucConfigurationVariantEnum.VariantLinkTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VARIANT-POST-BUILD">
            <xsd:annotation>
               <xsd:documentation>Specifies that the BSW Module implementation may use PreCompileTime, LinkTime and PostBuild configuration parameters.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucConfigurationVariantEnum.VariantPostBuild"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VARIANT-POST-BUILD-LOADABLE">
            <xsd:annotation>
               <xsd:documentation>Specifies that the BSW Module implementation may use PreCompileTime, LinkTime and PostBuild loadable configuration parameters (supported in the VSMD).

This attribute is removed from the specifications and shall not be used.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="EcucConfigurationVariantEnum.VariantPostBuildLoadable"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VARIANT-POST-BUILD-SELECTABLE">
            <xsd:annotation>
               <xsd:documentation>Specifies that the BSW Module implementation may use PreCompileTime, LinkTime and PostBuild selectable configuration parameters (supported in the VSMD).

This attribute is removed from the specifications and shall not be used.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="EcucConfigurationVariantEnum.VariantPostBuildSelectable"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VARIANT-PRE-COMPILE">
            <xsd:annotation>
               <xsd:documentation>Specifies that the BSW Module implementation uses only PreCompileTime configuration parameters.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucConfigurationVariantEnum.VariantPreCompile"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class ECUCParameterDefTemplate::EcucChoiceContainerDef -->
   <xsd:group name="ECUC-CHOICE-CONTAINER-DEF">
      <xsd:annotation>
         <xsd:documentation>Used to define configuration containers that provide a choice between several EcucParamConfContainerDef. But in the actual ECU Configuration Values only one instance from the choice list will be present.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucChoiceContainerDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="CHOICES">
            <xsd:annotation>
               <xsd:documentation>The choices available in a EcucChoiceContainerDef.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName";mmt.qualifiedName="EcucChoiceContainerDef.choice";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ECUC-PARAM-CONF-CONTAINER-DEF" type="AR:ECUC-PARAM-CONF-CONTAINER-DEF"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucChoiceContainerDef -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-CHOICE-CONTAINER-DEF">
      <xsd:annotation>
         <xsd:documentation>Used to define configuration containers that provide a choice between several EcucParamConfContainerDef. But in the actual ECU Configuration Values only one instance from the choice list will be present.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucChoiceContainerDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ECUC-DEFINITION-ELEMENT"/>
         <xsd:group ref="AR:ECUC-CONTAINER-DEF"/>
         <xsd:group ref="AR:ECUC-CHOICE-CONTAINER-DEF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class ECUCParameterDefTemplate::EcucParamConfContainerDef -->
   <xsd:group name="ECUC-PARAM-CONF-CONTAINER-DEF">
      <xsd:annotation>
         <xsd:documentation>Used to define configuration containers that can hierarchically contain other containers and/or parameter definitions.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucParamConfContainerDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="MULTIPLE-CONFIGURATION-CONTAINER" type="AR:BOOLEAN">
            <xsd:annotation>
               <xsd:documentation>Specifies whether this container is used to define multiple configuration sets. Only one container in the whole EcucModuleDef shall have this enabled.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="EcucParamConfContainerDef.multipleConfigurationContainer";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="PARAMETERS">
            <xsd:annotation>
               <xsd:documentation>The parameters defined within the EcucParamConfContainerDef.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName";mmt.qualifiedName="EcucParamConfContainerDef.parameter";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ECUC-ADD-INFO-PARAM-DEF" type="AR:ECUC-ADD-INFO-PARAM-DEF"/>
                  <xsd:element name="ECUC-BOOLEAN-PARAM-DEF" type="AR:ECUC-BOOLEAN-PARAM-DEF"/>
                  <xsd:element name="ECUC-ENUMERATION-PARAM-DEF" type="AR:ECUC-ENUMERATION-PARAM-DEF"/>
                  <xsd:element name="ECUC-FLOAT-PARAM-DEF" type="AR:ECUC-FLOAT-PARAM-DEF"/>
                  <xsd:element name="ECUC-FUNCTION-NAME-DEF" type="AR:ECUC-FUNCTION-NAME-DEF"/>
                  <xsd:element name="ECUC-INTEGER-PARAM-DEF" type="AR:ECUC-INTEGER-PARAM-DEF"/>
                  <xsd:element name="ECUC-LINKER-SYMBOL-DEF" type="AR:ECUC-LINKER-SYMBOL-DEF"/>
                  <xsd:element name="ECUC-MULTILINE-STRING-PARAM-DEF" type="AR:ECUC-MULTILINE-STRING-PARAM-DEF"/>
                  <xsd:element name="ECUC-STRING-PARAM-DEF" type="AR:ECUC-STRING-PARAM-DEF"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="REFERENCES">
            <xsd:annotation>
               <xsd:documentation>The references defined within the EcucParamConfContainerDef.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName";mmt.qualifiedName="EcucParamConfContainerDef.reference";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ECUC-CHOICE-REFERENCE-DEF" type="AR:ECUC-CHOICE-REFERENCE-DEF"/>
                  <xsd:element name="ECUC-FOREIGN-REFERENCE-DEF" type="AR:ECUC-FOREIGN-REFERENCE-DEF"/>
                  <xsd:element name="ECUC-INSTANCE-REFERENCE-DEF" type="AR:ECUC-INSTANCE-REFERENCE-DEF"/>
                  <xsd:element name="ECUC-REFERENCE-DEF" type="AR:ECUC-REFERENCE-DEF"/>
                  <xsd:element name="ECUC-SYMBOLIC-NAME-REFERENCE-DEF" type="AR:ECUC-SYMBOLIC-NAME-REFERENCE-DEF"/>
                  <xsd:element name="ECUC-URI-REFERENCE-DEF" type="AR:ECUC-URI-REFERENCE-DEF"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SUB-CONTAINERS">
            <xsd:annotation>
               <xsd:documentation>The containers defined within the EcucParamConfContainerDef.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName";mmt.qualifiedName="EcucParamConfContainerDef.subContainer";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ECUC-CHOICE-CONTAINER-DEF" type="AR:ECUC-CHOICE-CONTAINER-DEF"/>
                  <xsd:element name="ECUC-PARAM-CONF-CONTAINER-DEF" type="AR:ECUC-PARAM-CONF-CONTAINER-DEF"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucParamConfContainerDef -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-PARAM-CONF-CONTAINER-DEF">
      <xsd:annotation>
         <xsd:documentation>Used to define configuration containers that can hierarchically contain other containers and/or parameter definitions.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucParamConfContainerDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ECUC-DEFINITION-ELEMENT"/>
         <xsd:group ref="AR:ECUC-CONTAINER-DEF"/>
         <xsd:group ref="AR:ECUC-PARAM-CONF-CONTAINER-DEF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
   <xsd:simpleType name="ECUC-PARAM-CONF-CONTAINER-DEF--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ECUC-PARAM-CONF-CONTAINER-DEF"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="TRACEABLE--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="AGE-CONSTRAINT"/>
         <xsd:enumeration value="ARBITRARY-EVENT-TRIGGERING"/>
         <xsd:enumeration value="BURST-PATTERN-EVENT-TRIGGERING"/>
         <xsd:enumeration value="CONCRETE-PATTERN-EVENT-TRIGGERING"/>
         <xsd:enumeration value="EVENT-TRIGGERING-CONSTRAINT"/>
         <xsd:enumeration value="EXECUTION-ORDER-CONSTRAINT"/>
         <xsd:enumeration value="EXECUTION-TIME-CONSTRAINT"/>
         <xsd:enumeration value="LATENCY-TIMING-CONSTRAINT"/>
         <xsd:enumeration value="OFFSET-TIMING-CONSTRAINT"/>
         <xsd:enumeration value="PERIODIC-EVENT-TRIGGERING"/>
         <xsd:enumeration value="SPORADIC-EVENT-TRIGGERING"/>
         <xsd:enumeration value="STRUCTURED-REQ"/>
         <xsd:enumeration value="SYNCHRONIZATION-TIMING-CONSTRAINT"/>
         <xsd:enumeration value="TIMING-CONSTRAINT"/>
         <xsd:enumeration value="TRACEABLE"/>
         <xsd:enumeration value="TRACEABLE-TEXT"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class ECUCParameterDefTemplate::EcucValidationCondition -->
   <xsd:group name="ECUC-VALIDATION-CONDITION">
      <xsd:annotation>
         <xsd:documentation>Validation condition to perform a formula calculation based on EcucQueries.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucValidationCondition"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ECUC-QUERYS">
            <xsd:annotation>
               <xsd:documentation>Query to the ECU Configuration Description.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucValidationCondition.ecucQuery";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ECUC-QUERY" type="AR:ECUC-QUERY"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VALIDATION-FORMULA" type="AR:ECUC-CONDITION-FORMULA">
            <xsd:annotation>
               <xsd:documentation>Definition of the formula used to define validation condition.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucValidationCondition.validationFormula";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucValidationCondition -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-VALIDATION-CONDITION">
      <xsd:annotation>
         <xsd:documentation>Validation condition to perform a formula calculation based on EcucQueries.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucValidationCondition"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ECUC-VALIDATION-CONDITION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class ECUCParameterDefTemplate::EcucConditionSpecification -->
   <xsd:group name="ECUC-CONDITION-SPECIFICATION">
      <xsd:annotation>
         <xsd:documentation>Allows to define existence dependencies based on the value of  parameter values.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucConditionSpecification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="CONDITION-FORMULA" type="AR:ECUC-CONDITION-FORMULA">
            <xsd:annotation>
               <xsd:documentation>Definition of the formula used to define existence dependencies.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucConditionSpecification.conditionFormula";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ECUC-QUERYS">
            <xsd:annotation>
               <xsd:documentation>Query to the ECU Configuration Description.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucConditionSpecification.ecucQuery";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ECUC-QUERY" type="AR:ECUC-QUERY"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="INFORMAL-FORMULA" type="AR:ML-FORMULA">
            <xsd:annotation>
               <xsd:documentation>Informal description of the condition used to to define existence dependencies.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucConditionSpecification.informalFormula";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucConditionSpecification -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-CONDITION-SPECIFICATION">
      <xsd:annotation>
         <xsd:documentation>Allows to define existence dependencies based on the value of  parameter values.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucConditionSpecification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ECUC-CONDITION-SPECIFICATION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:group name="POSITIVE-INTEGER-VALUE-VARIATION-POINT">
      <xsd:annotation>
         <xsd:documentation>This class represents an attribute value variation point for positive Integer attributes.

Note that this class might be used in the extended meta-model only.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PositiveIntegerValueVariationPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class AttributeValueVariationPoints::PositiveIntegerValueVariationPoint -->
   <xsd:complexType abstract="false" mixed="true" name="POSITIVE-INTEGER-VALUE-VARIATION-POINT">
      <xsd:annotation>
         <xsd:documentation>This class represents an attribute value variation point for positive Integer attributes.

Note that this class might be used in the extended meta-model only.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PositiveIntegerValueVariationPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:FORMULA-EXPRESSION"/>
         <xsd:group ref="AR:SW-SYSTEMCONST-DEPENDENT-FORMULA"/>
         <xsd:group ref="AR:ATTRIBUTE-VALUE-VARIATION-POINT"/>
         <xsd:group ref="AR:POSITIVE-INTEGER-VALUE-VARIATION-POINT"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:ATTRIBUTE-VALUE-VARIATION-POINT"/>
   </xsd:complexType>
<!-- element group for class AttributeValueVariationPoints::BooleanValueVariationPoint -->
   <xsd:group name="BOOLEAN-VALUE-VARIATION-POINT">
      <xsd:annotation>
         <xsd:documentation>This class represents an attribute value variation point for Boolean attributes.

Note that this class might be used in the extended meta-model on</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BooleanValueVariationPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class AttributeValueVariationPoints::BooleanValueVariationPoint -->
   <xsd:complexType abstract="false" mixed="true" name="BOOLEAN-VALUE-VARIATION-POINT">
      <xsd:annotation>
         <xsd:documentation>This class represents an attribute value variation point for Boolean attributes.

Note that this class might be used in the extended meta-model on</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BooleanValueVariationPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:FORMULA-EXPRESSION"/>
         <xsd:group ref="AR:SW-SYSTEMCONST-DEPENDENT-FORMULA"/>
         <xsd:group ref="AR:ATTRIBUTE-VALUE-VARIATION-POINT"/>
         <xsd:group ref="AR:BOOLEAN-VALUE-VARIATION-POINT"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:ATTRIBUTE-VALUE-VARIATION-POINT"/>
   </xsd:complexType>
<xsd:complexType name="ECUC-SCOPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Possible scope settings for a configuration element.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucScopeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ECUC-SCOPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="ECUC-SCOPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ECU">
            <xsd:annotation>
               <xsd:documentation>An element may be shared with other modules.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucScopeEnum.ECU"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LOCAL">
            <xsd:annotation>
               <xsd:documentation>An element is only be applicable for the module it is defined in.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucScopeEnum.local"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:complexType name="STRING">
      <xsd:annotation>
         <xsd:documentation>This represents a String in which white-space must be normalized before processing. For example: in order to compare two Strings:

* leading and trailing white-space needs to be removed
* consecutive white-space (blank, cr, lf, tab) needs to be replaced by one blank.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="String";xml.xsd.customType="STRING";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="STRING--SIMPLE">
      <xsd:restriction base="xsd:string"/>
   </xsd:simpleType>
<!-- element group for class LanguageDataModel::LLongName -->
   <xsd:group name="L-LONG-NAME">
      <xsd:annotation>
         <xsd:documentation>MixedContentForLongNames  in one particular language. The language is denoted in the attribute l.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LLongName"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class LanguageDataModel::LLongName -->
   <xsd:complexType abstract="false" mixed="true" name="L-LONG-NAME">
      <xsd:annotation>
         <xsd:documentation>MixedContentForLongNames  in one particular language. The language is denoted in the attribute l.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LLongName"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:LANGUAGE-SPECIFIC"/>
         <xsd:group ref="AR:MIXED-CONTENT-FOR-LONG-NAME"/>
         <xsd:group ref="AR:L-LONG-NAME"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:LANGUAGE-SPECIFIC"/>
   </xsd:complexType>
<!-- element group for class LanguageDataModel::LOverviewParagraph -->
   <xsd:group name="L-OVERVIEW-PARAGRAPH">
      <xsd:annotation>
         <xsd:documentation>MixedContentForOverviewParagraph in one particular language. The language is denoted in the attribute l.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LOverviewParagraph"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class LanguageDataModel::LOverviewParagraph -->
   <xsd:complexType abstract="false" mixed="true" name="L-OVERVIEW-PARAGRAPH">
      <xsd:annotation>
         <xsd:documentation>MixedContentForOverviewParagraph in one particular language. The language is denoted in the attribute l.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LOverviewParagraph"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:LANGUAGE-SPECIFIC"/>
         <xsd:group ref="AR:MIXED-CONTENT-FOR-OVERVIEW-PARAGRAPH"/>
         <xsd:group ref="AR:L-OVERVIEW-PARAGRAPH"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:LANGUAGE-SPECIFIC"/>
   </xsd:complexType>
   <!-- element group for class LanguageDataModel::LParagraph -->
   <xsd:group name="L-PARAGRAPH">
      <xsd:annotation>
         <xsd:documentation>This is the text for a paragraph in one particular language. The language is denoted in the attribute l.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LParagraph"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class LanguageDataModel::LParagraph -->
   <xsd:complexType abstract="false" mixed="true" name="L-PARAGRAPH">
      <xsd:annotation>
         <xsd:documentation>This is the text for a paragraph in one particular language. The language is denoted in the attribute l.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LParagraph"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:LANGUAGE-SPECIFIC"/>
         <xsd:group ref="AR:MIXED-CONTENT-FOR-PARAGRAPH"/>
         <xsd:group ref="AR:L-PARAGRAPH"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:LANGUAGE-SPECIFIC"/>
   </xsd:complexType>
   <!-- element group for class LanguageDataModel::LPlainText -->
   <xsd:group name="L-PLAIN-TEXT">
      <xsd:annotation>
         <xsd:documentation>This represents plain string in one particular language. The language is denoted in the attribute l.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LPlainText"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class LanguageDataModel::LPlainText -->
   <xsd:complexType abstract="false" mixed="true" name="L-PLAIN-TEXT">
      <xsd:annotation>
         <xsd:documentation>This represents plain string in one particular language. The language is denoted in the attribute l.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LPlainText"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:LANGUAGE-SPECIFIC"/>
         <xsd:group ref="AR:WHITESPACE-CONTROLLED"/>
         <xsd:group ref="AR:MIXED-CONTENT-FOR-PLAIN-TEXT"/>
         <xsd:group ref="AR:L-PLAIN-TEXT"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:LANGUAGE-SPECIFIC"/>
      <xsd:attributeGroup ref="AR:WHITESPACE-CONTROLLED"/>
   </xsd:complexType>
<!-- element group for class ECUCParameterDefTemplate::EcucContainerDef -->
   <xsd:group name="ECUC-CONTAINER-DEF">
      <xsd:annotation>
         <xsd:documentation>Base class used to gather common attributes of configuration container definitions.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucContainerDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="DESTINATION-URI-REFS">
            <xsd:annotation>
               <xsd:documentation>Several destinationUris can be defined for an EcucContainerDef. With such destinationUris an EcucContainerDef is applicable for several EcucUriReferenceDefs.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucContainerDef.destinationUri";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpUriDef</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="DESTINATION-URI-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:ECUC-DESTINATION-URI-DEF--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MULTIPLICITY-CONFIG-CLASSES">
            <xsd:annotation>
               <xsd:documentation>Specifies which MultiplicityConfigurationClass this container is available for which ConfigurationVariant. This aggregation is optional if the surrounding EcucModuleDef has the Category STANDARDIZED_MODULE_DEFINITION. If the category attribute of the EcucModuleDef is set to VENDOR_SPECIFIC_MODULE_DEFINITION, then this aggregation is mandatory.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucContainerDef.multiplicityConfigClass";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.namePlural="MULTIPLICITY-CONFIG-CLASSES"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ECUC-MULTIPLICITY-CONFIGURATION-CLASS" type="AR:ECUC-MULTIPLICITY-CONFIGURATION-CLASS"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="POST-BUILD-CHANGEABLE" type="AR:BOOLEAN">
            <xsd:annotation>
               <xsd:documentation>Specifies if the number of instances of this container may be changed in post-build selectable and post-build loadable time in the ECU Configuration Value Description.

This attribute is only applicable to containers which may appear multiple times in the configuration set, i.e. their upperMultiplicity is greater than lowerMultiplicity and their upperMultiplicity is greater than 1.

If a value of this attribute is not defined in the EcucModuleDef with category STANDARDIZED_MODULE_DEFINITION, it shall be defined in the EcucModuleDef with category VENDOR_SPECIFIC_MODULE_DEFINITION for all containers with upperMultiplicity greater than lowerMultiplicity and upperMultiplicity greater than 1.

This attribute is removed from the specifications and shall not be used.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="EcucContainerDef.postBuildChangeable";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="POST-BUILD-VARIANT-MULTIPLICITY" type="AR:BOOLEAN">
            <xsd:annotation>
               <xsd:documentation>Indicates if a container may have different number of instances in different post-build variants (previously known as post-build selectable configuration sets). TRUE means yes, FALSE means no.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucContainerDef.postBuildVariantMultiplicity";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="REQUIRES-INDEX" type="AR:BOOLEAN">
            <xsd:annotation>
               <xsd:documentation>Used to define whether the value element for this definition shall be provided with an index.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucContainerDef.requiresIndex";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <xsd:simpleType name="ECUC-CONTAINER-DEF--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ECUC-CHOICE-CONTAINER-DEF"/>
         <xsd:enumeration value="ECUC-CONTAINER-DEF"/>
         <xsd:enumeration value="ECUC-PARAM-CONF-CONTAINER-DEF"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class FormulaLanguage::FormulaExpression -->
   <xsd:group name="FORMULA-EXPRESSION">
      <xsd:annotation>
         <xsd:documentation>This class represents the syntax of the formula language. The class is modeled as an abstract class in order to be specialized into particular use cases. For each use case the referable objects might be specified in the specialization.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="FormulaExpression"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
<!-- element group for class VariantHandling::SwSystemconstDependentFormula -->
   <xsd:group name="SW-SYSTEMCONST-DEPENDENT-FORMULA">
      <xsd:annotation>
         <xsd:documentation>This class represents an expression depending on system constants.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwSystemconstDependentFormula"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="SYSC-STRING-REF">
               <xsd:annotation>
                  <xsd:documentation>syscString indicates that the referenced system constant shall be evaluated as a string according to [TPS_SWCT_01431].</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="SwSystemconstDependentFormula.syscString";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
               </xsd:annotation>
               <xsd:complexType>
                  <xsd:simpleContent>
                     <xsd:extension base="AR:REF">
                        <xsd:attribute name="DEST" type="AR:SW-SYSTEMCONST--SUBTYPES-ENUM" use="required"/>
                     </xsd:extension>
                  </xsd:simpleContent>
               </xsd:complexType>
            </xsd:element>
            <xsd:element name="SYSC-REF">
               <xsd:annotation>
                  <xsd:documentation>This refers to a system constant. The internal (coded) value of the system constant shall be used.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="SwSystemconstDependentFormula.sysc";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="50"</xsd:appinfo>
               </xsd:annotation>
               <xsd:complexType>
                  <xsd:simpleContent>
                     <xsd:extension base="AR:REF">
                        <xsd:attribute name="DEST" type="AR:SW-SYSTEMCONST--SUBTYPES-ENUM" use="required"/>
                     </xsd:extension>
                  </xsd:simpleContent>
               </xsd:complexType>
            </xsd:element>
         </xsd:choice>
      </xsd:choice>
   </xsd:group>
 <!-- element group for class AttributeValueVariationPoints::AttributeValueVariationPoint -->
   <xsd:group name="ATTRIBUTE-VALUE-VARIATION-POINT">
      <xsd:annotation>
         <xsd:documentation>This class represents the ability to derive the value of the Attribute from a system constant (by SwSystemconstDependentFormula). It also provides a bindingTime.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AttributeValueVariationPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- attribute group for class AttributeValueVariationPoints::AttributeValueVariationPoint -->
   <xsd:attributeGroup name="ATTRIBUTE-VALUE-VARIATION-POINT">
      <xsd:annotation>
         <xsd:documentation>This class represents the ability to derive the value of the Attribute from a system constant (by SwSystemconstDependentFormula). It also provides a bindingTime.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AttributeValueVariationPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="BINDING-TIME" type="AR:BINDING-TIME-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This is the binding time in which the attribute value needs to be bound.

If this attribute is missing, the attribute is not a variation point. In particular this means that It needs to be a single value according to the type specified in the pure model. It is an error if it is still a formula.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="AttributeValueVariationPoint.bindingTime";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="BLUEPRINT-VALUE" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This represents a description that documents how the value shall be defined when deriving objects from the blueprint.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="AttributeValueVariationPoint.blueprintValue";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="SD" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This special data is provided to allow synchronization of Attribute value variation points with variant management systems. The usage is subject of agreement between the involved parties.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="AttributeValueVariationPoint.sd";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="SHORT-LABEL" type="AR:PRIMITIVE-IDENTIFIER--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This allows to identify the variation point. It is also intended to allow RTE support for CompileTime Variation points.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="AttributeValueVariationPoint.shortLabel";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>

<!-- element group for class LanguageDataModel::LanguageSpecific -->
   <xsd:group name="LANGUAGE-SPECIFIC">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to denote a particular language for which an object is applicable.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LanguageSpecific"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- attribute group for class LanguageDataModel::LanguageSpecific -->
   <xsd:attributeGroup name="LANGUAGE-SPECIFIC">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to denote a particular language for which an object is applicable.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LanguageSpecific"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="L" type="AR:L-ENUM--SIMPLE" use="required">
         <xsd:annotation>
            <xsd:documentation>'This attribute denotes the language in which the language specific document entity is given. Note that "FOR-ALL" means, that the entity is applicable to all languages. It is language neutral.

It follows ISO 639-1:2002 and is specified in upper case.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="LanguageSpecific.l";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.attribute="true";xml.enforceMinMultiplicity="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
<!-- element group for class InlineTextModel::MixedContentForLongName -->
   <xsd:group name="MIXED-CONTENT-FOR-LONG-NAME">
      <xsd:annotation>
         <xsd:documentation>This is the model for titles and long-names. It allows some emphasis and index entries but no reference target (which is provided by the identifiable in question). It is intended that the content model can also be rendered as plain text.

The abstract class can be used for single language as well as for multi language elements.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForLongName"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="TT" type="AR:TT">
               <xsd:annotation>
                  <xsd:documentation>This is a technical term.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForLongName.tt";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="30"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="E" type="AR:EMPHASIS-TEXT">
               <xsd:annotation>
                  <xsd:documentation>This is emphasized text</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForLongName.e";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="40"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="SUP" type="AR:SUPSCRIPT">
               <xsd:annotation>
                  <xsd:documentation>This is superscript text.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForLongName.sup";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="50"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="SUB" type="AR:SUPSCRIPT">
               <xsd:annotation>
                  <xsd:documentation>This is subscript text.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForLongName.sub";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="60"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="IE" type="AR:INDEX-ENTRY">
               <xsd:annotation>
                  <xsd:documentation>This is an index entry.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForLongName.ie";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="70"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
         </xsd:choice>
      </xsd:choice>
   </xsd:group>
<!-- element group for class InlineTextModel::MixedContentForOverviewParagraph -->
   <xsd:group name="MIXED-CONTENT-FOR-OVERVIEW-PARAGRAPH">
      <xsd:annotation>
         <xsd:documentation>This is the text model of a restricted paragraph item within a documentation. Such restricted paragraphs are used mainly for overview items, e.g. desc.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForOverviewParagraph"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="BR" type="AR:BR">
               <xsd:annotation>
                  <xsd:documentation>This element is the same as function here as in a HTML document i.e. it forces a line break.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForOverviewParagraph.br";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="FT" type="AR:L-OVERVIEW-PARAGRAPH">
               <xsd:annotation>
                  <xsd:documentation>This is a footnote within a parapgraph.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForOverviewParagraph.ft";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="TRACE-REF">
               <xsd:annotation>
                  <xsd:documentation>This allows to place an arbitrary reference to a traceable object in documentation.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForOverviewParagraph.trace";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
               </xsd:annotation>
               <xsd:complexType>
                  <xsd:simpleContent>
                     <xsd:extension base="AR:REF">
                        <xsd:attribute name="DEST" type="AR:TRACEABLE--SUBTYPES-ENUM" use="required"/>
                     </xsd:extension>
                  </xsd:simpleContent>
               </xsd:complexType>
            </xsd:element>
            <xsd:element name="TT" type="AR:TT">
               <xsd:annotation>
                  <xsd:documentation>This is a technical term.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForOverviewParagraph.tt";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="30"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="XREF" type="AR:XREF">
               <xsd:annotation>
                  <xsd:documentation>This is a cross reference.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForOverviewParagraph.xref";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="40"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="XREF-TARGET" type="AR:XREF-TARGET">
               <xsd:annotation>
                  <xsd:documentation>This element specifies a reference target which can be scattered throughout the text.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForOverviewParagraph.xrefTarget";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="50"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="E" type="AR:EMPHASIS-TEXT">
               <xsd:annotation>
                  <xsd:documentation>This is emphasis text.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForOverviewParagraph.e";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="60"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="SUP" type="AR:SUPSCRIPT">
               <xsd:annotation>
                  <xsd:documentation>This is subscript text.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForOverviewParagraph.sup";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="80"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="SUB" type="AR:SUPSCRIPT">
               <xsd:annotation>
                  <xsd:documentation>This is superscript text.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForOverviewParagraph.sub";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="90"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="IE" type="AR:INDEX-ENTRY">
               <xsd:annotation>
                  <xsd:documentation>This is an index entry.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForOverviewParagraph.ie";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="100"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
         </xsd:choice>
      </xsd:choice>
   </xsd:group>
   <!-- element group for class InlineTextModel::MixedContentForParagraph -->
   <xsd:group name="MIXED-CONTENT-FOR-PARAGRAPH">
      <xsd:annotation>
         <xsd:documentation>This mainly represents the text model of a full blown paragraph within a documentation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForParagraph"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="FT" type="AR:L-PARAGRAPH">
               <xsd:annotation>
                  <xsd:documentation>This is a footnote within a parapgraph.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForParagraph.ft";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="TRACE-REF">
               <xsd:annotation>
                  <xsd:documentation>This allows to place an arbitrary reference to a traceable object in documentation.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForParagraph.trace";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
               </xsd:annotation>
               <xsd:complexType>
                  <xsd:simpleContent>
                     <xsd:extension base="AR:REF">
                        <xsd:attribute name="DEST" type="AR:TRACEABLE--SUBTYPES-ENUM" use="required"/>
                     </xsd:extension>
                  </xsd:simpleContent>
               </xsd:complexType>
            </xsd:element>
            <xsd:element name="TT" type="AR:TT">
               <xsd:annotation>
                  <xsd:documentation>This is a technical term.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForParagraph.tt";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="30"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="BR" type="AR:BR">
               <xsd:annotation>
                  <xsd:documentation>This element is the same as function here as in a HTML document i.e. it forces a line break.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForParagraph.br";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="40"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="XREF" type="AR:XREF">
               <xsd:annotation>
                  <xsd:documentation>This is a cross reference.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForParagraph.xref";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="50"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="XREF-TARGET" type="AR:XREF-TARGET">
               <xsd:annotation>
                  <xsd:documentation>This element specifies a reference target which can be scattered throughout the text.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForParagraph.xrefTarget";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="60"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="E" type="AR:EMPHASIS-TEXT">
               <xsd:annotation>
                  <xsd:documentation>This is emphasized text.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForParagraph.e";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="70"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="SUP" type="AR:SUPSCRIPT">
               <xsd:annotation>
                  <xsd:documentation>This is superscript text.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForParagraph.sup";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="90"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="SUB" type="AR:SUPSCRIPT">
               <xsd:annotation>
                  <xsd:documentation>This is subscript text.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForParagraph.sub";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="100"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="IE" type="AR:INDEX-ENTRY">
               <xsd:annotation>
                  <xsd:documentation>This is an index entry.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForParagraph.ie";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="110"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="STD" type="AR:STD">
               <xsd:annotation>
                  <xsd:documentation>This is a refeernce to a standard.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForParagraph.std";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="120"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="XDOC" type="AR:XDOC">
               <xsd:annotation>
                  <xsd:documentation>This is a reference to a printable external document.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForParagraph.xdoc";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="130"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="XFILE" type="AR:XFILE">
               <xsd:annotation>
                  <xsd:documentation>This represents a reference to an external file which usually cannot be printed.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForParagraph.xfile";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="140"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
         </xsd:choice>
      </xsd:choice>
   </xsd:group>
   <!-- element group for class InlineTextModel::MixedContentForPlainText -->
   <xsd:group name="MIXED-CONTENT-FOR-PLAIN-TEXT">
      <xsd:annotation>
         <xsd:documentation>This represents a plain text which conceptually is handled as mixed contents. It is modeled as such for symmetry reasons.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForPlainText"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- element group for class InlineTextModel::MixedContentForUnitNames -->
   <xsd:group name="MIXED-CONTENT-FOR-UNIT-NAMES">
      <xsd:annotation>
         <xsd:documentation>This is the text model for items with subscript and superscripts such as measurement unit designations. It is intended, that such models can easily be transcribed to a plain text model either by using appropriate characters or by transcribing like m^2.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForUnitNames"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="SUP" type="AR:SUPSCRIPT">
               <xsd:annotation>
                  <xsd:documentation>This is superscript text.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForUnitNames.sup";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="30"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="SUB" type="AR:SUPSCRIPT">
               <xsd:annotation>
                  <xsd:documentation>This is subscript text.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForUnitNames.sub";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="40"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
         </xsd:choice>
      </xsd:choice>
   </xsd:group>
   <!-- element group for class InlineTextModel::MixedContentForVerbatim -->
   <xsd:group name="MIXED-CONTENT-FOR-VERBATIM">
      <xsd:annotation>
         <xsd:documentation>This is the text model for preformatted (verbatim) text. It mainly consists of attributes which do not change the length on rendering.

This class represents multilingual verbatim. Verbatim, sometimes called preformatted text, means that white-space is maintained. When verbatim is rendered in PDF or Online media, it is rendered using a monospaced font while white-space is obeyed. Blanks are rendered as well as newline characters.

Even if there are inline elements, the length of the data must not be influenced by formatting.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForVerbatim"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="TT" type="AR:TT">
               <xsd:annotation>
                  <xsd:documentation>This represents a technical term in verbatim. Note that it's the responibility of the user not to take a tt that would add additional character to the text (such as SgmlElement).</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForVerbatim.tt";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="E" type="AR:EMPHASIS-TEXT">
               <xsd:annotation>
                  <xsd:documentation>This is emphsized text. Note that in verbatim, the attribute font should not be considered since verbatim is always rendered as monospace font.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForVerbatim.e";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="30"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="XREF" type="AR:XREF">
               <xsd:annotation>
                  <xsd:documentation>This is a crossreference within a verbatim text. The attributes may disturb the arrangement of the text. It is subject to the author to keep this under control.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForVerbatim.xref";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="40"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="BR" type="AR:BR">
               <xsd:annotation>
                  <xsd:documentation>This element is the same as function here as in a HTML document i.e. it forces a line break.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="MixedContentForVerbatim.br";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="50"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
         </xsd:choice>
      </xsd:choice>
   </xsd:group>

   <!-- element group for class ECUCParameterDefTemplate::EcucStringParamDefConditional -->
   <xsd:group name="ECUC-STRING-PARAM-DEF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucStringParamDefConditional"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucStringParamDefConditional.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucStringParamDefConditional -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-STRING-PARAM-DEF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucStringParamDefConditional"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ECUC-ABSTRACT-STRING-PARAM-DEF-CONTENT"/>
         <xsd:group ref="AR:ECUC-STRING-PARAM-DEF-CONTENT"/>
         <xsd:group ref="AR:ECUC-STRING-PARAM-DEF-CONDITIONAL"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
   <!-- element group for class ECUCParameterDefTemplate::EcucStringParamDefContent -->
   <xsd:group name="ECUC-STRING-PARAM-DEF-CONTENT">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucStringParamDefContent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- element group for class ECUCParameterDefTemplate::EcucSymbolicNameReferenceDef -->
   <xsd:group name="ECUC-SYMBOLIC-NAME-REFERENCE-DEF">
      <xsd:annotation>
         <xsd:documentation>This meta-class specifies that the implementation of the reference is done using a symbolic name defined by the referenced Container's shortName.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucSymbolicNameReferenceDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="DESTINATION-REF">
            <xsd:annotation>
               <xsd:documentation>Exactly one reference to a parameter container is allowed as destination.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucSymbolicNameReferenceDef.destination";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpUriDef</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:ECUC-PARAM-CONF-CONTAINER-DEF--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucSymbolicNameReferenceDef -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-SYMBOLIC-NAME-REFERENCE-DEF">
      <xsd:annotation>
         <xsd:documentation>This meta-class specifies that the implementation of the reference is done using a symbolic name defined by the referenced Container's shortName.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucSymbolicNameReferenceDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ECUC-DEFINITION-ELEMENT"/>
         <xsd:group ref="AR:ECUC-COMMON-ATTRIBUTES"/>
         <xsd:group ref="AR:ECUC-ABSTRACT-REFERENCE-DEF"/>
         <xsd:group ref="AR:ECUC-SYMBOLIC-NAME-REFERENCE-DEF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
   <!-- element group for class ECUCDescriptionTemplate::EcucTextualParamValue -->
   <xsd:group name="ECUC-TEXTUAL-PARAM-VALUE">
      <xsd:annotation>
         <xsd:documentation>Holding a value which is not subject to variation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucTextualParamValue"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="VALUE" type="AR:VERBATIM-STRING">
            <xsd:annotation>
               <xsd:documentation>Value of the parameter, not subject to variant handling.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucTextualParamValue.value";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCDescriptionTemplate::EcucTextualParamValue -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-TEXTUAL-PARAM-VALUE">
      <xsd:annotation>
         <xsd:documentation>Holding a value which is not subject to variation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucTextualParamValue"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ECUC-INDEXABLE-VALUE"/>
         <xsd:group ref="AR:ECUC-PARAMETER-VALUE"/>
         <xsd:group ref="AR:ECUC-TEXTUAL-PARAM-VALUE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
   <!-- element group for class ECUCParameterDefTemplate::EcucUriReferenceDef -->
   <xsd:group name="ECUC-URI-REFERENCE-DEF">
      <xsd:annotation>
         <xsd:documentation>Definition of reference with a destination that is specified via a destinationUri. With such a reference it is possible to define a reference to a EcucContainerDef in a different module independent from the concrete definition of the target container.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucUriReferenceDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="DESTINATION-URI-REF">
            <xsd:annotation>
               <xsd:documentation>Any EcucContainerDef with a destinationUri that is identical to the destinationUri that is referenced here defines a valid target.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucUriReferenceDef.destinationUri";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpUriDef</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:ECUC-DESTINATION-URI-DEF--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucUriReferenceDef -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-URI-REFERENCE-DEF">
      <xsd:annotation>
         <xsd:documentation>Definition of reference with a destination that is specified via a destinationUri. With such a reference it is possible to define a reference to a EcucContainerDef in a different module independent from the concrete definition of the target container.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucUriReferenceDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ECUC-DEFINITION-ELEMENT"/>
         <xsd:group ref="AR:ECUC-COMMON-ATTRIBUTES"/>
         <xsd:group ref="AR:ECUC-ABSTRACT-REFERENCE-DEF"/>
         <xsd:group ref="AR:ECUC-URI-REFERENCE-DEF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
  
   <!-- element group for class ECUCDescriptionTemplate::EcucValueCollection -->
   <xsd:group name="ECUC-VALUE-COLLECTION">
      <xsd:annotation>
         <xsd:documentation>This represents the anchor point of the ECU configuration description.</xsd:documentation>
         <xsd:appinfo source="tags">atp.recommendedPackage="EcucValueCollections";mmt.qualifiedName="EcucValueCollection"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ECU-EXTRACT-REF">
            <xsd:annotation>
               <xsd:documentation>Represents the extract of the System Configuration that is relevant for the ECU configured with that ECU Configuration Description.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucValueCollection.ecuExtract";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:SYSTEM--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ECUC-VALUES">
            <xsd:annotation>
               <xsd:documentation>References to the configuration of individual software modules that are present on this ECU.

atpVariation: [RS_ECUC_0079]
This property was modified due to atpVariation (DirectedAssociationPattern).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucValueCollection.ecucValue";pureMM.maxOccurs="-1";pureMM.minOccurs="1";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ECUC-MODULE-CONFIGURATION-VALUES-REF-CONDITIONAL" type="AR:ECUC-MODULE-CONFIGURATION-VALUES-REF-CONDITIONAL"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCDescriptionTemplate::EcucValueCollection -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-VALUE-COLLECTION">
      <xsd:annotation>
         <xsd:documentation>This represents the anchor point of the ECU configuration description.</xsd:documentation>
         <xsd:appinfo source="tags">atp.recommendedPackage="EcucValueCollections";mmt.qualifiedName="EcucValueCollection"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:COLLECTABLE-ELEMENT"/>
         <xsd:group ref="AR:PACKAGEABLE-ELEMENT"/>
         <xsd:group ref="AR:AR-ELEMENT"/>
         <xsd:group ref="AR:ECUC-VALUE-COLLECTION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
   <xsd:simpleType name="ECUC-VALUE-COLLECTION--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ECUC-VALUE-COLLECTION"/>
      </xsd:restriction>
   </xsd:simpleType>
   <!-- element group for class ECUCParameterDefTemplate::EcucValueConfigurationClass -->
   <xsd:group name="ECUC-VALUE-CONFIGURATION-CLASS">
      <xsd:annotation>
         <xsd:documentation>Specifies the ValueConfigurationClass of a parameter/reference for each ConfigurationVariant of the EcucModuleDef.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucValueConfigurationClass"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucValueConfigurationClass -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-VALUE-CONFIGURATION-CLASS">
      <xsd:annotation>
         <xsd:documentation>Specifies the ValueConfigurationClass of a parameter/reference for each ConfigurationVariant of the EcucModuleDef.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucValueConfigurationClass"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ECUC-ABSTRACT-CONFIGURATION-CLASS"/>
         <xsd:group ref="AR:ECUC-VALUE-CONFIGURATION-CLASS"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class AnyInstanceRef::AnyInstanceRef -->
   <xsd:group name="ANY-INSTANCE-REF">
      <xsd:annotation>
         <xsd:documentation>Describes a reference to any instance in an AUTOSAR model. This is the most generic form of an instance ref. Refer to the superclass notes for more details.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AnyInstanceRef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject,instanceRef</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <!-- Association <<atpDerived>>base skipped -->
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="CONTEXT-ELEMENT-REF">
            <xsd:annotation>
               <xsd:documentation>This is one step in the navigation path specified by the instance ref.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AnyInstanceRef.contextElement";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:ATP-FEATURE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TARGET-REF">
            <xsd:annotation>
               <xsd:documentation>This is the target of the instance ref.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AnyInstanceRef.target";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:ATP-FEATURE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AnyInstanceRef.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class AnyInstanceRef::AnyInstanceRef -->
   <xsd:complexType abstract="false" mixed="false" name="ANY-INSTANCE-REF">
      <xsd:annotation>
         <xsd:documentation>Describes a reference to any instance in an AUTOSAR model. This is the most generic form of an instance ref. Refer to the superclass notes for more details.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AnyInstanceRef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject,instanceRef</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ATP-INSTANCE-REF"/>
         <xsd:group ref="AR:ANY-INSTANCE-REF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class RequirementsTracing::StructuredReq -->
   <xsd:group name="STRUCTURED-REQ">
      <xsd:annotation>
         <xsd:documentation>This represents a structured requirement. This is intended for a case where specific requirements for features are collected.

Note that this can be rendered as a labeled list.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="StructuredReq"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="DATE" type="AR:DATE">
            <xsd:annotation>
               <xsd:documentation>This represents the date when the requirement was initiated.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="StructuredReq.date";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="5"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ISSUED-BY" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>This represents the person, organization or authority which issued the requirement.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="StructuredReq.issuedBy";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="6"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TYPE" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>This attribute allows to denote the type of requirement to denote for example is it an "enhancement", "new feature" etc.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="StructuredReq.type";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="7"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="IMPORTANCE" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>This allows to represent the importance of the requirement.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="StructuredReq.importance";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="8"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="DESCRIPTION" type="AR:DOCUMENTATION-BLOCK">
            <xsd:annotation>
               <xsd:documentation>Ths represents the general description of the requirement.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="StructuredReq.description";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="RATIONALE" type="AR:DOCUMENTATION-BLOCK">
            <xsd:annotation>
               <xsd:documentation>This represents the rationale of the requirement.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="StructuredReq.rationale";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="DEPENDENCIES" type="AR:DOCUMENTATION-BLOCK">
            <xsd:annotation>
               <xsd:documentation>This represents an informal specifiaction of dependencies. Note that upstream tracing should be formalized in the property trace provided by the superclass Traceable.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="StructuredReq.dependencies";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="USE-CASE" type="AR:DOCUMENTATION-BLOCK">
            <xsd:annotation>
               <xsd:documentation>This describes the relevant use cases. Note that formal references to use cases should be done in the trace relation.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="StructuredReq.useCase";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="35"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="CONFLICTS" type="AR:DOCUMENTATION-BLOCK">
            <xsd:annotation>
               <xsd:documentation>This represents an informal specification of conflicts.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="StructuredReq.conflicts";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="40"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SUPPORTING-MATERIAL" type="AR:DOCUMENTATION-BLOCK">
            <xsd:annotation>
               <xsd:documentation>This represents an informal specifiaction of the supporting material.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="StructuredReq.supportingMaterial";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="50"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="REMARK" type="AR:DOCUMENTATION-BLOCK">
            <xsd:annotation>
               <xsd:documentation>This represents an informal remark. Note that this is not modeled as annotation, since these remark is still essential part of the requirement.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="StructuredReq.remark";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="60"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TESTED-ITEM-REFS">
            <xsd:annotation>
               <xsd:documentation>This assocation represents the ability to trace on the same specification level. This supports for example the of acceptance tests.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="StructuredReq.testedItem";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.sequenceOffset="70"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="TESTED-ITEM-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:TRACEABLE--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="StructuredReq.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class RequirementsTracing::StructuredReq -->
   <xsd:complexType abstract="false" mixed="false" name="STRUCTURED-REQ">
      <xsd:annotation>
         <xsd:documentation>This represents a structured requirement. This is intended for a case where specific requirements for features are collected.

Note that this can be rendered as a labeled list.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="StructuredReq"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
         <xsd:group ref="AR:PAGINATEABLE"/>
         <xsd:group ref="AR:TRACEABLE"/>
         <xsd:group ref="AR:STRUCTURED-REQ"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
      <xsd:attributeGroup ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
      <xsd:attributeGroup ref="AR:PAGINATEABLE"/>
   </xsd:complexType>

 <!-- element group for class RequirementsTracing::TraceableText -->
   <xsd:group name="TRACEABLE-TEXT">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to denote a traceable text item such as requirements etc.

The following approach appliles:

* '''shortName''' represents the tag for tracing
* '''longName''' represents the head line
* '''category''' represents the kind of the tagged text</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TraceableText"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:choice maxOccurs="1" minOccurs="0">
            <xsd:group ref="AR:DOCUMENTATION-BLOCK"/>
         </xsd:choice>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="TraceableText.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class RequirementsTracing::TraceableText -->
   <xsd:complexType abstract="false" mixed="false" name="TRACEABLE-TEXT">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to denote a traceable text item such as requirements etc.

The following approach appliles:

* '''shortName''' represents the tag for tracing
* '''longName''' represents the head line
* '''category''' represents the kind of the tagged text</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TraceableText"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
         <xsd:group ref="AR:PAGINATEABLE"/>
         <xsd:group ref="AR:TRACEABLE"/>
         <xsd:group ref="AR:TRACEABLE-TEXT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
      <xsd:attributeGroup ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
      <xsd:attributeGroup ref="AR:PAGINATEABLE"/>
   </xsd:complexType>
<!-- element group for class Note::Note -->
   <xsd:group name="NOTE">
      <xsd:annotation>
         <xsd:documentation>This represents a note in a documentation, which may be used to highlight specific issues such as hints or caution notes.

N.B., Documentation notes can be nested recursively, even if this is not really intended. In case of nested notes e.g. the note icon of inner notes might be omitted while rendering the note.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Note"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="LABEL" type="AR:MULTILANGUAGE-LONG-NAME">
            <xsd:annotation>
               <xsd:documentation>This label can be used to superseed the default label specified by the noteType attribute. It is in particular useful for noteType="other".</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Note.label";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:choice maxOccurs="1" minOccurs="0">
            <xsd:group ref="AR:DOCUMENTATION-BLOCK"/>
         </xsd:choice>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Note.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
<!-- attribute group for class Note::Note -->
   <xsd:attributeGroup name="NOTE">
      <xsd:annotation>
         <xsd:documentation>This represents a note in a documentation, which may be used to highlight specific issues such as hints or caution notes.

N.B., Documentation notes can be nested recursively, even if this is not really intended. In case of nested notes e.g. the note icon of inner notes might be omitted while rendering the note.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Note"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="NOTE-TYPE" type="AR:NOTE-TYPE-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Type of the Note. Default is "HINT"</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Note.noteType";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class Note::Note -->
   <xsd:complexType abstract="false" mixed="false" name="NOTE">
      <xsd:annotation>
         <xsd:documentation>This represents a note in a documentation, which may be used to highlight specific issues such as hints or caution notes.

N.B., Documentation notes can be nested recursively, even if this is not really intended. In case of nested notes e.g. the note icon of inner notes might be omitted while rendering the note.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Note"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
         <xsd:group ref="AR:PAGINATEABLE"/>
         <xsd:group ref="AR:NOTE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
      <xsd:attributeGroup ref="AR:PAGINATEABLE"/>
      <xsd:attributeGroup ref="AR:NOTE"/>
   </xsd:complexType>

 <!-- element group for class Figure::MlFigure -->
   <xsd:group name="ML-FIGURE">
      <xsd:annotation>
         <xsd:documentation>This metaclass represents the ability to embed a figure.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MlFigure"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="FIGURE-CAPTION" type="AR:CAPTION">
            <xsd:annotation>
               <xsd:documentation>This element specifies the title of an illustration.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MlFigure.figureCaption";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset=""</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="L-GRAPHIC" type="AR:L-GRAPHIC"/>
         </xsd:choice>
         <xsd:element maxOccurs="1" minOccurs="0" name="VERBATIM" type="AR:MULTI-LANGUAGE-VERBATIM">
            <xsd:annotation>
               <xsd:documentation>&lt;verbatim&gt; is a paragraph in which white-space (in particular blanks and line feeds) is obeyed. This enables basic preformatting to be carried out, which can even be displayed on simple devices. Behavior is the same as PRE in HTML .</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MlFigure.verbatim";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="50"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MlFigure.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- attribute group for class Figure::MlFigure -->
   <xsd:attributeGroup name="ML-FIGURE">
      <xsd:annotation>
         <xsd:documentation>This metaclass represents the ability to embed a figure.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MlFigure"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="FRAME" type="AR:FRAME-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Used to defined the frame line around a figure. It can assume the following values:

* TOP - Border at the top of the figure
* BOTTOM - Border at the bottom of the figure
* TOPBOT - Borders at the top and bottom of  the figure
* ALL - Borders all around the figure
* SIDES - Borders at the sides of the figure
* NONE - No borders around the figure</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="MlFigure.frame";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="HELP-ENTRY" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This specifies an entry point in an online help system to be linked with the parent class. The syntax must be defined by the applied help system respectively help system generator.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="MlFigure.helpEntry";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="PGWIDE" type="AR:PGWIDE-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Used to indicate wether the figure should take the complete page width (value = "pgwide") or not (value = "noPgwide").</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="MlFigure.pgwide";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class Figure::MlFigure -->
   <xsd:complexType abstract="false" mixed="false" name="ML-FIGURE">
      <xsd:annotation>
         <xsd:documentation>This metaclass represents the ability to embed a figure.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MlFigure"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
         <xsd:group ref="AR:PAGINATEABLE"/>
         <xsd:group ref="AR:ML-FIGURE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
      <xsd:attributeGroup ref="AR:PAGINATEABLE"/>
      <xsd:attributeGroup ref="AR:ML-FIGURE"/>
   </xsd:complexType>
<!-- element group for class Formula::MlFormula -->
   <xsd:group name="ML-FORMULA">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to express a formula in a documentation. The formula can be expressed by various means. If more than one representation is available, they need to be consistent. The rendering system can use the representation which is most appropriate.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MlFormula"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="FORMULA-CAPTION" type="AR:CAPTION">
            <xsd:annotation>
               <xsd:documentation>This element specifies the identification or heading of a formula.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MlFormula.formulaCaption";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="L-GRAPHIC" type="AR:L-GRAPHIC"/>
         </xsd:choice>
         <xsd:element maxOccurs="1" minOccurs="0" name="VERBATIM" type="AR:MULTI-LANGUAGE-VERBATIM">
            <xsd:annotation>
               <xsd:documentation>this represents a formula using only text and white-space. It can be used to denote the formula in a kind of pseudo code or whatever appears approprate.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MlFormula.verbatim";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="50"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TEX-MATH" type="AR:MULTI-LANGUAGE-PLAIN-TEXT">
            <xsd:annotation>
               <xsd:documentation>this is the TeX representation of TeX formula. A TeX formula can be processed by a TeX or a LaTeX processor.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MlFormula.texMath";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="60"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="GENERIC-MATH" type="AR:MULTI-LANGUAGE-PLAIN-TEXT">
            <xsd:annotation>
               <xsd:documentation>this rpresents the semantic and mathematical descriptions which are processed by a math-processor.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MlFormula.genericMath";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="80"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MlFormula.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Formula::MlFormula -->
   <xsd:complexType abstract="false" mixed="false" name="ML-FORMULA">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to express a formula in a documentation. The formula can be expressed by various means. If more than one representation is available, they need to be consistent. The rendering system can use the representation which is most appropriate.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MlFormula"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
         <xsd:group ref="AR:PAGINATEABLE"/>
         <xsd:group ref="AR:ML-FORMULA"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
      <xsd:attributeGroup ref="AR:PAGINATEABLE"/>
   </xsd:complexType>
<!-- element group for class ListElements::LabeledList -->
   <xsd:group name="LABELED-LIST">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents a labeled list, in which items have a label and a content. The policy how to render such items is specified in the labeled list.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LabeledList"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="INDENT-SAMPLE" type="AR:INDENT-SAMPLE">
            <xsd:annotation>
               <xsd:documentation>This is a sample item. This sample is used by a rendering system to measure out the width of indentation. Since this depends on the particular fontsize etc. the indentation cannot be specified e.g. in mm.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LabeledList.indentSample";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="LABELED-ITEM" type="AR:LABELED-ITEM">
            <xsd:annotation>
               <xsd:documentation>This represents one particular item in the labeled list.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LabeledList.labeledItem";pureMM.maxOccurs="-1";pureMM.minOccurs="1";vh.latestBindingTime="postBuild";xml.roleElement="true";xml.roleWrapperElement="false";xml.sequenceOffset="30";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LabeledList.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ListElements::LabeledList -->
   <xsd:complexType abstract="false" mixed="false" name="LABELED-LIST">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents a labeled list, in which items have a label and a content. The policy how to render such items is specified in the labeled list.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LabeledList"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
         <xsd:group ref="AR:PAGINATEABLE"/>
         <xsd:group ref="AR:LABELED-LIST"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
      <xsd:attributeGroup ref="AR:PAGINATEABLE"/>
   </xsd:complexType>
<!-- element group for class ListElements::DefList -->
   <xsd:group name="DEF-LIST">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to express a list of definitions. Note that a definition list might be rendered similar to a labeled list but has a particular semantics to denote definitions.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DefList"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="DEF-ITEM" type="AR:DEF-ITEM">
            <xsd:annotation>
               <xsd:documentation>This is one entry in the definition list.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="DefList.defItem";pureMM.maxOccurs="-1";pureMM.minOccurs="1";vh.latestBindingTime="postBuild";xml.roleElement="true";xml.roleWrapperElement="false";xml.sequenceOffset="20";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="DefList.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ListElements::DefList -->
   <xsd:complexType abstract="false" mixed="false" name="DEF-LIST">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to express a list of definitions. Note that a definition list might be rendered similar to a labeled list but has a particular semantics to denote definitions.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DefList"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
         <xsd:group ref="AR:PAGINATEABLE"/>
         <xsd:group ref="AR:DEF-LIST"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
      <xsd:attributeGroup ref="AR:PAGINATEABLE"/>
   </xsd:complexType>
<!-- element group for class ListElements::List -->
   <xsd:group name="LIST">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to express a list. The kind of list is specified in the attribute.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="List"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="ITEM" type="AR:ITEM">
            <xsd:annotation>
               <xsd:documentation>this represents a particular list item. Note that this is again a documentation block.Therefore lists can be arbitrarily nested. It is discouraged to have a very deep nesting.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="List.item";pureMM.maxOccurs="-1";pureMM.minOccurs="1";vh.latestBindingTime="postBuild";xml.roleElement="true";xml.roleWrapperElement="false";xml.sequenceOffset="20";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="List.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- attribute group for class ListElements::List -->
   <xsd:attributeGroup name="LIST">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to express a list. The kind of list is specified in the attribute.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="List"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="TYPE" type="AR:LIST-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The type of the list. Default is "UNNUMBER"</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="List.type";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class ListElements::List -->
   <xsd:complexType abstract="false" mixed="false" name="LIST">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to express a list. The kind of list is specified in the attribute.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="List"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
         <xsd:group ref="AR:PAGINATEABLE"/>
         <xsd:group ref="AR:LIST"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
      <xsd:attributeGroup ref="AR:PAGINATEABLE"/>
      <xsd:attributeGroup ref="AR:LIST"/>
   </xsd:complexType>
<!-- element group for class MsrQuery::MsrQueryP2 -->
   <xsd:group name="MSR-QUERY-P-2">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to express a query which yields the content of a DocumentationBlock as a result.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryP2"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="MSR-QUERY-PROPS" type="AR:MSR-QUERY-PROPS">
            <xsd:annotation>
               <xsd:documentation>This is argument and properties of the DocumentationBlock query.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryP2.msrQueryProps";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MSR-QUERY-RESULT-P-2" type="AR:DOCUMENTATION-BLOCK">
            <xsd:annotation>
               <xsd:documentation>This represents the result of the query.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryP2.msrQueryResultP2";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class MsrQuery::MsrQueryP2 -->
   <xsd:complexType abstract="false" mixed="false" name="MSR-QUERY-P-2">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to express a query which yields the content of a DocumentationBlock as a result.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryP2"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:MSR-QUERY-P-2"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class Chapters::PredefinedChapter -->
   <xsd:group name="PREDEFINED-CHAPTER">
      <xsd:annotation>
         <xsd:documentation>This represents a predefined chapter.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PredefinedChapter"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:choice maxOccurs="1" minOccurs="0">
            <xsd:group ref="AR:CHAPTER-MODEL"/>
         </xsd:choice>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Chapters::PredefinedChapter -->
   <xsd:complexType abstract="false" mixed="false" name="PREDEFINED-CHAPTER">
      <xsd:annotation>
         <xsd:documentation>This represents a predefined chapter.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PredefinedChapter"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:PREDEFINED-CHAPTER"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class AdminData::Modification -->
   <xsd:group name="MODIFICATION">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability  to record what has changed in a document in comparison to its predecessor.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Modification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="CHANGE" type="AR:MULTI-LANGUAGE-OVERVIEW-PARAGRAPH">
            <xsd:annotation>
               <xsd:documentation>This property denotes the one particular change which was performed on the object.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Modification.change";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="REASON" type="AR:MULTI-LANGUAGE-OVERVIEW-PARAGRAPH">
            <xsd:annotation>
               <xsd:documentation>This property represents the rationale for the particular change.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Modification.reason";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class AdminData::Modification -->
   <xsd:complexType abstract="false" mixed="false" name="MODIFICATION">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability  to record what has changed in a document in comparison to its predecessor.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Modification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:MODIFICATION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:complexType name="DATE">
      <xsd:annotation>
         <xsd:documentation>A datatype representing a timestamp. The smallest granularity is 1 second.

This datatype represents a timestamp in the format yyyy-mm-dd followed by an optional time. The lead-in character for the time is "T" and the format is hh:mm:ss. In addition, a time zone designator must be specified. The time zone designator can either be "Z" (for UTC) or the time offset to UTC, i.e. (+|-)hh:mm.

Examples:

2009-07-23

2009-07-23T14:38:00+01:00

2009-07-23T13:38:00Z</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DateTime";xml.xsd.customType="DATE";xml.xsd.pattern="([0-9]{4}-[0-9]{2}-[0-9]{2})(T[0-9]{2}:[0-9]{2}:[0-9]{2}(Z|([+\-][0-9]{2}:[0-9]{2})))?";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DATE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
<!-- element group for class LanguageDataModel::LVerbatim -->
   <xsd:group name="L-VERBATIM">
      <xsd:annotation>
         <xsd:documentation>MixedContentForVerbatim in one particular language. The language is denoted in the attribute l.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LVerbatim"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class LanguageDataModel::LVerbatim -->
   <xsd:complexType abstract="false" mixed="true" name="L-VERBATIM">
      <xsd:annotation>
         <xsd:documentation>MixedContentForVerbatim in one particular language. The language is denoted in the attribute l.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LVerbatim"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:LANGUAGE-SPECIFIC"/>
         <xsd:group ref="AR:WHITESPACE-CONTROLLED"/>
         <xsd:group ref="AR:MIXED-CONTENT-FOR-VERBATIM"/>
         <xsd:group ref="AR:L-VERBATIM"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:LANGUAGE-SPECIFIC"/>
      <xsd:attributeGroup ref="AR:WHITESPACE-CONTROLLED"/>
   </xsd:complexType>





































<xsd:simpleType name="IDENTIFIABLE--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
	</xsd:restriction>
</xsd:simpleType>


<xsd:simpleType name="REFERRABLE--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
      </xsd:restriction>
   </xsd:simpleType>
 <!-- element group for class AbstractStructure::AtpPrototype -->
   <xsd:group name="ATP-PROTOTYPE">
      <xsd:annotation>
         <xsd:documentation>A prototype is a typed feature. A prototype in a classifier indicates that instances of that classifier will have a feature, and the structure of that feature is given by the its type. An instance of that type will play the role indicated by the feature in the owning classifier.

A feature is not an instance but an indication of an instance-to-be.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AtpPrototype"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <!-- Association <<atpDerived>>atpType skipped -->
      </xsd:sequence>
   </xsd:group>
   <xsd:simpleType name="ATP-PROTOTYPE--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ABSTRACT-PROVIDED-PORT-PROTOTYPE"/>
         <xsd:enumeration value="ABSTRACT-REQUIRED-PORT-PROTOTYPE"/>
         <xsd:enumeration value="APPLICATION-ARRAY-ELEMENT"/>
         <xsd:enumeration value="APPLICATION-COMPOSITE-ELEMENT-DATA-PROTOTYPE"/>
         <xsd:enumeration value="APPLICATION-RECORD-ELEMENT"/>
         <xsd:enumeration value="ARGUMENT-DATA-PROTOTYPE"/>
         <xsd:enumeration value="ATP-PROTOTYPE"/>
         <xsd:enumeration value="AUTOSAR-DATA-PROTOTYPE"/>
         <xsd:enumeration value="DATA-PROTOTYPE"/>
         <xsd:enumeration value="MODE-DECLARATION-GROUP-PROTOTYPE"/>
         <xsd:enumeration value="P-PORT-PROTOTYPE"/>
         <xsd:enumeration value="PR-PORT-PROTOTYPE"/>
         <xsd:enumeration value="PARAMETER-DATA-PROTOTYPE"/>
         <xsd:enumeration value="PORT-PROTOTYPE"/>
         <xsd:enumeration value="R-PORT-PROTOTYPE"/>
         <xsd:enumeration value="ROOT-SW-COMPOSITION-PROTOTYPE"/>
         <xsd:enumeration value="SW-COMPONENT-PROTOTYPE"/>
         <xsd:enumeration value="VARIABLE-DATA-PROTOTYPE"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class TriggerDeclaration::Trigger -->
   <xsd:group name="TRIGGER">
      <xsd:annotation>
         <xsd:documentation>A trigger which is provided (i.e. released) or required (i.e. used to activate something) in the given context.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Trigger"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-IMPL-POLICY" type="AR:SW-IMPL-POLICY-ENUM">
            <xsd:annotation>
               <xsd:documentation>This attribute, when set to value queued, allows for a queued processing of Triggers.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Trigger.swImplPolicy";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TRIGGER-PERIOD" type="AR:MULTIDIMENSIONAL-TIME">
            <xsd:annotation>
               <xsd:documentation>Optional definition of a period in case of a periodically (time or angle) driven external trigger.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Trigger.triggerPeriod";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Trigger.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class TriggerDeclaration::Trigger -->
   <xsd:complexType abstract="false" mixed="false" name="TRIGGER">
      <xsd:annotation>
         <xsd:documentation>A trigger which is provided (i.e. released) or required (i.e. used to activate something) in the given context.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Trigger"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ATP-CLASSIFIER"/>
         <xsd:group ref="AR:ATP-FEATURE"/>
         <xsd:group ref="AR:ATP-STRUCTURE-ELEMENT"/>
         <xsd:group ref="AR:TRIGGER"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
   <xsd:simpleType name="TRIGGER--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="TRIGGER"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class BswInterfaces::BswModuleClientServerEntry -->
   <xsd:group name="BSW-MODULE-CLIENT-SERVER-ENTRY">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents a single API entry into the BSW module or cluster that has the ability to be called in client-server fashion via the BSW Scheduler.

In this regard it is more special than BswModuleEntry and can be seen as a wrapper around the BswModuleEntry to which it refers (property encapsulatedEntry).</xsd:documentation>
         <xsd:appinfo source="tags">atp.recommendedPackage="BswModuleEntrys";mmt.qualifiedName="BswModuleClientServerEntry"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ENCAPSULATED-ENTRY-REF">
            <xsd:annotation>
               <xsd:documentation>The underlying BswModuleEntry.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleClientServerEntry.encapsulatedEntry";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="5"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:BSW-MODULE-ENTRY--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="IS-REENTRANT" type="AR:BOOLEAN">
            <xsd:annotation>
               <xsd:documentation>Reentrancy from the viewpoint of clients invoking the service via the BSW Scheduler:

* True: Enables the service to be invoked again, before the service has finished. 

* False: It is prohibited to invoke the service again before is has finished.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleClientServerEntry.isReentrant";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="IS-SYNCHRONOUS" type="AR:BOOLEAN">
            <xsd:annotation>
               <xsd:documentation>Synchronicity from the viewpoint of clients invoking the service via the BSW Scheduler:

* True: This calls a synchronous service, i.e. the service is completed when the call returns.

* False: The service (on semantical level) may not be complete when the call returns.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleClientServerEntry.isSynchronous";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="15"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleClientServerEntry.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswInterfaces::BswModuleClientServerEntry -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-MODULE-CLIENT-SERVER-ENTRY">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents a single API entry into the BSW module or cluster that has the ability to be called in client-server fashion via the BSW Scheduler.

In this regard it is more special than BswModuleEntry and can be seen as a wrapper around the BswModuleEntry to which it refers (property encapsulatedEntry).</xsd:documentation>
         <xsd:appinfo source="tags">atp.recommendedPackage="BswModuleEntrys";mmt.qualifiedName="BswModuleClientServerEntry"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:BSW-MODULE-CLIENT-SERVER-ENTRY"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
   <xsd:simpleType name="BSW-MODULE-CLIENT-SERVER-ENTRY--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BSW-MODULE-CLIENT-SERVER-ENTRY"/>
      </xsd:restriction>
   </xsd:simpleType>

<xsd:complexType name="ECUC-CONFIGURATION-CLASS-ENUM">
      <xsd:annotation>
         <xsd:documentation>Possible configuration classes for the AUTOSAR configuration parameters.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucConfigurationClassEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ECUC-CONFIGURATION-CLASS-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="ECUC-CONFIGURATION-CLASS-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="LINK">
            <xsd:annotation>
               <xsd:documentation>Link Time: parts of configuration are delivered from another object code file</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucConfigurationClassEnum.Link"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="POST-BUILD">
            <xsd:annotation>
               <xsd:documentation>PostBuildTime: after compilation a configuration parameter can be changed.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucConfigurationClassEnum.PostBuild"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PRE-COMPILE">
            <xsd:annotation>
               <xsd:documentation>PreCompile Time: after compilation a configuration parameter can not be changed any more.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucConfigurationClassEnum.PreCompile"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PUBLISHED-INFORMATION">
            <xsd:annotation>
               <xsd:documentation>PublishedInformation is used to specify the fact that certain 
information is fixed even before the pre-compile stage.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucConfigurationClassEnum.PublishedInformation"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:complexType name="BOOLEAN">
      <xsd:annotation>
         <xsd:documentation>A Boolean value denotes a logical condition that is either 'true' or 'false'.
It can be one of "0", "1", "true", "false"</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Boolean";xml.xsd.customType="BOOLEAN";xml.xsd.pattern="0|1|true|false";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:BOOLEAN--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="BOOLEAN--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="0|1|true|false"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="POSITIVE-INTEGER--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[1-9][0-9]*|0x[0-9a-f]+|0[0-7]*|0b[0-1]+"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="POSITIVE-UNLIMITED-INTEGER">
      <xsd:annotation>
         <xsd:documentation>This is a positive unlimited integer which can be denoted in decimal, octal and hexadecimal.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PositiveUnlimitedInteger";xml.xsd.customType="POSITIVE-UNLIMITED-INTEGER";xml.xsd.pattern="[1-9][0-9]*|0x[0-9a-f]+|0[0-7]*|0b[0-1]+";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:POSITIVE-UNLIMITED-INTEGER--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="POSITIVE-UNLIMITED-INTEGER--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[1-9][0-9]*|0x[0-9a-f]+|0[0-7]*|0b[0-1]+"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:complexType name="L-ENUM">
      <xsd:annotation>
         <xsd:documentation>This denotes the possible language designators according to the two letter code of ISO 693.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:L-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="L-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="AA">
            <xsd:annotation>
               <xsd:documentation>Afar</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.aa"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="AB">
            <xsd:annotation>
               <xsd:documentation>Abkhazian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ab"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="AF">
            <xsd:annotation>
               <xsd:documentation>Afrikaans</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.af"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="AM">
            <xsd:annotation>
               <xsd:documentation>Amharic</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.am"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="AR">
            <xsd:annotation>
               <xsd:documentation>Arabic</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ar"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="AS">
            <xsd:annotation>
               <xsd:documentation>Assamese</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.as"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="AY">
            <xsd:annotation>
               <xsd:documentation>Aymara</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ay"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="AZ">
            <xsd:annotation>
               <xsd:documentation>Azerbaijani</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.az"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BA">
            <xsd:annotation>
               <xsd:documentation>Bashkir</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ba"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BE">
            <xsd:annotation>
               <xsd:documentation>Byelorussian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.be"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BG">
            <xsd:annotation>
               <xsd:documentation>Bulgarian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.bg"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BH">
            <xsd:annotation>
               <xsd:documentation>Bihari</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.bh"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BI">
            <xsd:annotation>
               <xsd:documentation>Bislama</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.bi"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BN">
            <xsd:annotation>
               <xsd:documentation>Bengali</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.bn"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BO">
            <xsd:annotation>
               <xsd:documentation>Tibetian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.bo"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BR">
            <xsd:annotation>
               <xsd:documentation>Breton</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.br"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CA">
            <xsd:annotation>
               <xsd:documentation>Catalan</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ca"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CO">
            <xsd:annotation>
               <xsd:documentation>Corsican</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.co"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CS">
            <xsd:annotation>
               <xsd:documentation>Czech</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.cs"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CY">
            <xsd:annotation>
               <xsd:documentation>Welsh</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.cy"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DA">
            <xsd:annotation>
               <xsd:documentation>Danish</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.da"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DE">
            <xsd:annotation>
               <xsd:documentation>German</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.de"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DZ">
            <xsd:annotation>
               <xsd:documentation>Bhutani</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.dz"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EL">
            <xsd:annotation>
               <xsd:documentation>Greek</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.el"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EN">
            <xsd:annotation>
               <xsd:documentation>English</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.en"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EO">
            <xsd:annotation>
               <xsd:documentation>Esperanto</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.eo"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ES">
            <xsd:annotation>
               <xsd:documentation>Spanish</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.es"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ET">
            <xsd:annotation>
               <xsd:documentation>Estonian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.et"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EU">
            <xsd:annotation>
               <xsd:documentation>Basque</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.eu"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FA">
            <xsd:annotation>
               <xsd:documentation>Persian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.fa"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FI">
            <xsd:annotation>
               <xsd:documentation>Finnish</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.fi"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FJ">
            <xsd:annotation>
               <xsd:documentation>Fiji</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.fj"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FO">
            <xsd:annotation>
               <xsd:documentation>Faeroese</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.fo"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FOR-ALL">
            <xsd:annotation>
               <xsd:documentation>The content applies to all languages</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.forAll"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FR">
            <xsd:annotation>
               <xsd:documentation>French</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.fr"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FY">
            <xsd:annotation>
               <xsd:documentation>Frisian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.fy"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="GA">
            <xsd:annotation>
               <xsd:documentation>Irish</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ga"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="GD">
            <xsd:annotation>
               <xsd:documentation>Scots Gaelic</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.gd"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="GL">
            <xsd:annotation>
               <xsd:documentation>Galician</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.gl"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="GN">
            <xsd:annotation>
               <xsd:documentation>Guarani</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.gn"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="GU">
            <xsd:annotation>
               <xsd:documentation>Gjarati</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.gu"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="HA">
            <xsd:annotation>
               <xsd:documentation>Hausa</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ha"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="HI">
            <xsd:annotation>
               <xsd:documentation>Hindi</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.hi"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="HR">
            <xsd:annotation>
               <xsd:documentation>Croatian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.hr"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="HU">
            <xsd:annotation>
               <xsd:documentation>Hungarian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.hu"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="HY">
            <xsd:annotation>
               <xsd:documentation>Armenian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.hy"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IA">
            <xsd:annotation>
               <xsd:documentation>Interlingua</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ia"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IE">
            <xsd:annotation>
               <xsd:documentation>Interlingue</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ie"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IK">
            <xsd:annotation>
               <xsd:documentation>Inupiak</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ik"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IN">
            <xsd:annotation>
               <xsd:documentation>Indonesian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.in"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IS">
            <xsd:annotation>
               <xsd:documentation>Icelandic</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.is"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IT">
            <xsd:annotation>
               <xsd:documentation>Italian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.it"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IW">
            <xsd:annotation>
               <xsd:documentation>Hebrew</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.iw"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="JA">
            <xsd:annotation>
               <xsd:documentation>Japanese</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ja"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="JI">
            <xsd:annotation>
               <xsd:documentation>Yiddish</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ji"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="JW">
            <xsd:annotation>
               <xsd:documentation>Javanese</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.jw"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="KA">
            <xsd:annotation>
               <xsd:documentation>Georgian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ka"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="KK">
            <xsd:annotation>
               <xsd:documentation>Kazakh</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.kk"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="KL">
            <xsd:annotation>
               <xsd:documentation>Greenlandic</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.kl"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="KM">
            <xsd:annotation>
               <xsd:documentation>Cambodian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.km"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="KN">
            <xsd:annotation>
               <xsd:documentation>Kannada</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.kn"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="KO">
            <xsd:annotation>
               <xsd:documentation>Korean</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ko"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="KS">
            <xsd:annotation>
               <xsd:documentation>Kashmiri</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ks"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="KU">
            <xsd:annotation>
               <xsd:documentation>Kurdish</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ku"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="KY">
            <xsd:annotation>
               <xsd:documentation>Kirghiz</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ky"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LA">
            <xsd:annotation>
               <xsd:documentation>Latin</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.la"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LN">
            <xsd:annotation>
               <xsd:documentation>Lingala</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ln"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LO">
            <xsd:annotation>
               <xsd:documentation>Laothian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.lo"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LT">
            <xsd:annotation>
               <xsd:documentation>Lithuanian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.lt"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LV">
            <xsd:annotation>
               <xsd:documentation>Lavian, Lettish</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.lv"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MG">
            <xsd:annotation>
               <xsd:documentation>Malagasy</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.mg"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MI">
            <xsd:annotation>
               <xsd:documentation>Maori</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.mi"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MK">
            <xsd:annotation>
               <xsd:documentation>Macedonian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.mk"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ML">
            <xsd:annotation>
               <xsd:documentation>Malayalam</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ml"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MN">
            <xsd:annotation>
               <xsd:documentation>Mongolian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.mn"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MO">
            <xsd:annotation>
               <xsd:documentation>Moldavian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.mo"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MR">
            <xsd:annotation>
               <xsd:documentation>Marathi</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.mr"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MS">
            <xsd:annotation>
               <xsd:documentation>Malay</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ms"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MT">
            <xsd:annotation>
               <xsd:documentation>Maltese</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.mt"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MY">
            <xsd:annotation>
               <xsd:documentation>Burmese</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.my"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NA">
            <xsd:annotation>
               <xsd:documentation>Nauru</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.na"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NE">
            <xsd:annotation>
               <xsd:documentation>Nepali</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ne"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NL">
            <xsd:annotation>
               <xsd:documentation>Dutch</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.nl"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NO">
            <xsd:annotation>
               <xsd:documentation>Norwegian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.no"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OC">
            <xsd:annotation>
               <xsd:documentation>Occitan</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.oc"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OM">
            <xsd:annotation>
               <xsd:documentation>(Afan) Oromo</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.om"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OR">
            <xsd:annotation>
               <xsd:documentation>Oriya</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.or"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PA">
            <xsd:annotation>
               <xsd:documentation>Punjabi</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.pa"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PL">
            <xsd:annotation>
               <xsd:documentation>Polish</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.pl"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PS">
            <xsd:annotation>
               <xsd:documentation>Pashto, Pushto</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ps"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PT">
            <xsd:annotation>
               <xsd:documentation>Portuguese</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.pt"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="QU">
            <xsd:annotation>
               <xsd:documentation>Quechua</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.qu"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RM">
            <xsd:annotation>
               <xsd:documentation>Rhaeto-Romance</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.rm"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RN">
            <xsd:annotation>
               <xsd:documentation>Kirundi</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.rn"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RO">
            <xsd:annotation>
               <xsd:documentation>Romanian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ro"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RU">
            <xsd:annotation>
               <xsd:documentation>Russian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ru"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RW">
            <xsd:annotation>
               <xsd:documentation>Kinyarwanda</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.rw"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SA">
            <xsd:annotation>
               <xsd:documentation>Sanskrit</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.sa"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SD">
            <xsd:annotation>
               <xsd:documentation>Sindhi</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.sd"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SG">
            <xsd:annotation>
               <xsd:documentation>Sangro</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.sg"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SH">
            <xsd:annotation>
               <xsd:documentation>Serbo-Croatian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.sh"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SI">
            <xsd:annotation>
               <xsd:documentation>Singhalese</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.si"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SK">
            <xsd:annotation>
               <xsd:documentation>Slovak</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.sk"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SL">
            <xsd:annotation>
               <xsd:documentation>Slovenian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.sl"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SM">
            <xsd:annotation>
               <xsd:documentation>Samoan</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.sm"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SN">
            <xsd:annotation>
               <xsd:documentation>Shona</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.sn"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SO">
            <xsd:annotation>
               <xsd:documentation>Somali</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.so"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SQ">
            <xsd:annotation>
               <xsd:documentation>Albanian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.sq"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SR">
            <xsd:annotation>
               <xsd:documentation>Serbian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.sr"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SS">
            <xsd:annotation>
               <xsd:documentation>Siswati</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ss"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ST">
            <xsd:annotation>
               <xsd:documentation>Sesotho</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.st"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SU">
            <xsd:annotation>
               <xsd:documentation>Sundanese</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.su"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SV">
            <xsd:annotation>
               <xsd:documentation>Swedish</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.sv"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SW">
            <xsd:annotation>
               <xsd:documentation>Swahili</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.sw"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TA">
            <xsd:annotation>
               <xsd:documentation>Tamil</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ta"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TE">
            <xsd:annotation>
               <xsd:documentation>Tegulu</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.te"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TG">
            <xsd:annotation>
               <xsd:documentation>Tajik</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.tg"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TH">
            <xsd:annotation>
               <xsd:documentation>Thai</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.th"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TI">
            <xsd:annotation>
               <xsd:documentation>Tigrinya</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ti"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TK">
            <xsd:annotation>
               <xsd:documentation>Turkmen</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.tk"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TL">
            <xsd:annotation>
               <xsd:documentation>Tagalog</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.tl"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TN">
            <xsd:annotation>
               <xsd:documentation>Setswana</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.tn"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TO">
            <xsd:annotation>
               <xsd:documentation>Tonga</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.to"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TR">
            <xsd:annotation>
               <xsd:documentation>Turkish</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.tr"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TS">
            <xsd:annotation>
               <xsd:documentation>Tsonga</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ts"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TT">
            <xsd:annotation>
               <xsd:documentation>Tatar</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.tt"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TW">
            <xsd:annotation>
               <xsd:documentation>Twi</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.tw"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="UK">
            <xsd:annotation>
               <xsd:documentation>Ukrainian</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.uk"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="UR">
            <xsd:annotation>
               <xsd:documentation>Urdu</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.ur"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="UZ">
            <xsd:annotation>
               <xsd:documentation>Uzbek</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.uz"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VI">
            <xsd:annotation>
               <xsd:documentation>Vietnamese</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.vi"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VO">
            <xsd:annotation>
               <xsd:documentation>Volapuk</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.vo"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="WO">
            <xsd:annotation>
               <xsd:documentation>Wolof</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.wo"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="XH">
            <xsd:annotation>
               <xsd:documentation>Xhosa</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.xh"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="YO">
            <xsd:annotation>
               <xsd:documentation>Yoruba</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.yo"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ZH">
            <xsd:annotation>
               <xsd:documentation>Chinese</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.zh"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ZU">
            <xsd:annotation>
               <xsd:documentation>Zulu</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LEnum.zu"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class Annotation::Annotation -->
   <xsd:group name="ANNOTATION">
      <xsd:annotation>
         <xsd:documentation>This is a plain annotation which does not have further formal data.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Annotation"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class Annotation::Annotation -->
   <xsd:complexType abstract="false" mixed="false" name="ANNOTATION">
      <xsd:annotation>
         <xsd:documentation>This is a plain annotation which does not have further formal data.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Annotation"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:GENERAL-ANNOTATION"/>
         <xsd:group ref="AR:ANNOTATION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:complexType name="CATEGORY-STRING">
      <xsd:annotation>
         <xsd:documentation>This represents the pattern applicable to categories.

It is basically the same as Identifier but has a different semantics. Therefore it is modeled as a primitive of its own.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CategoryString";xml.xsd.customType="CATEGORY-STRING";xml.xsd.pattern="[a-zA-Z][a-zA-Z0-9_]*";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:CATEGORY-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="CATEGORY-STRING--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[a-zA-Z][a-zA-Z0-9_]*"/>
      </xsd:restriction>
   </xsd:simpleType>
 <!-- element group for class VariantHandling::VariationPoint -->
   <xsd:group name="VARIATION-POINT">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to express a "structural variation point". The container of the variation point is part of the selected variant if swSyscond evaluates to true and each postBuildVariantCriterion is fulfilled.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="VariationPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="SHORT-LABEL" type="AR:IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>This provides a name to the particular variation point to support the RTE generator. It is necessary for supporting splitable aggregations and if binding time is later than codeGenerationTime, as well as some RTE conditions. It needs to be unique with in the enclosing Identifiables with the same ShortName.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="VariationPoint.shortLabel";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="DESC" type="AR:MULTI-LANGUAGE-OVERVIEW-PARAGRAPH">
            <xsd:annotation>
               <xsd:documentation>This allows to describe shortly the purpose of the variation point.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="VariationPoint.desc";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="BLUEPRINT-CONDITION" type="AR:DOCUMENTATION-BLOCK">
            <xsd:annotation>
               <xsd:documentation>This represents a description that documents how the variation point shall be resolved when deriving objects from the blueprint.

Note that variationPoints are not allowed within a blueprintCondition.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="VariationPoint.blueprintCondition";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="28"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="FORMAL-BLUEPRINT-CONDITION" type="AR:BLUEPRINT-FORMULA">
            <xsd:annotation>
               <xsd:documentation>This denotes a formal blueprintCondition. This shall be not in contradiction with blueprintCondition. It is recommanded only to use one of the two.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="VariationPoint.formalBlueprintCondition";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="29"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-SYSCOND" type="AR:CONDITION-BY-FORMULA">
            <xsd:annotation>
               <xsd:documentation>This condition acts as Binding Function for the VariationPoint.
Note that the mulitplicity is 0..1 in order to support pure postBuild variants.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="VariationPoint.swSyscond";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="POST-BUILD-VARIANT-CONDITIONS">
            <xsd:annotation>
               <xsd:documentation>This is the set of post build variant conditions which all  shall be fulfilled in order to (postbuild) bind the variation point.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="VariationPoint.postBuildVariantCondition";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.sequenceOffset="40"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="POST-BUILD-VARIANT-CONDITION" type="AR:POST-BUILD-VARIANT-CONDITION"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SDG" type="AR:SDG">
            <xsd:annotation>
               <xsd:documentation>An optional special data group is attached to every variation point. These data can be used by external software systems to attach application specific data. For example, a variant management system might add an identifier, an URL or a specific classifier.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="VariationPoint.sdg";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="50"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class VariantHandling::VariationPoint -->
   <xsd:complexType abstract="false" mixed="false" name="VARIATION-POINT">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to express a "structural variation point". The container of the variation point is part of the selected variant if swSyscond evaluates to true and each postBuildVariantCriterion is fulfilled.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="VariationPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:VARIATION-POINT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
   <!-- element group for class VariantHandling::VariationPointProxy -->
   <xsd:group name="VARIATION-POINT-PROXY">
      <xsd:annotation>
         <xsd:documentation>The VariationPointProxy represents variation points of the C/C++ implementation. In case of bindingTime = compileTime the RTE provides defines which can be used for Pre Processor directives to implement compileTime variability.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="VariationPointProxy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="CONDITION-ACCESS" type="AR:CONDITION-BY-FORMULA">
            <xsd:annotation>
               <xsd:documentation>This condition acts as Binding Function for the VariationPoint.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="VariationPointProxy.conditionAccess";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="IMPLEMENTATION-DATA-TYPE-REF">
            <xsd:annotation>
               <xsd:documentation>This association to ImplementationDataType shall be taken as an implementation hint by the RTE generator.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="VariationPointProxy.implementationDataType";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:IMPLEMENTATION-DATA-TYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="POST-BUILD-VALUE-ACCESS-REF">
            <xsd:annotation>
               <xsd:documentation>This represents the applicable PostBuildVariantCriterion in the context of a VariationPointProxy.

Note that the technical details how to access the particular postBuildValueAccess are still considered internal to the RTE and are consequently not standardized.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="VariationPointProxy.postBuildValueAccess";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:POST-BUILD-VARIANT-CRITERION--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="POST-BUILD-VARIANT-CONDITIONS">
            <xsd:annotation>
               <xsd:documentation>This represents that applicable PostBuoldVariantCondition in the context of aVariationPointProxy.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="VariationPointProxy.postBuildVariantCondition";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="POST-BUILD-VARIANT-CONDITION" type="AR:POST-BUILD-VARIANT-CONDITION"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VALUE-ACCESS">
            <xsd:annotation>
               <xsd:documentation>This value acts as Binding Function for the VariationPoint.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="VariationPointProxy.valueAccess";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="1" minOccurs="0">
                  <xsd:element name="BOOLEAN-VALUE-VARIATION-POINT" type="AR:BOOLEAN-VALUE-VARIATION-POINT"/>
                  <xsd:element name="FLOAT-VALUE-VARIATION-POINT" type="AR:FLOAT-VALUE-VARIATION-POINT"/>
                  <xsd:element name="INTEGER-VALUE-VARIATION-POINT" type="AR:INTEGER-VALUE-VARIATION-POINT"/>
                  <xsd:element name="LIMIT" type="AR:LIMIT"/>
                  <xsd:element name="NUMERICAL-VALUE-VARIATION-POINT" type="AR:NUMERICAL-VALUE-VARIATION-POINT"/>
                  <xsd:element name="POSITIVE-INTEGER-VALUE-VARIATION-POINT" type="AR:POSITIVE-INTEGER-VALUE-VARIATION-POINT"/>
                  <xsd:element name="UNLIMITED-INTEGER-VALUE-VARIATION-POINT" type="AR:UNLIMITED-INTEGER-VALUE-VARIATION-POINT"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class VariantHandling::VariationPointProxy -->
   <xsd:complexType abstract="false" mixed="false" name="VARIATION-POINT-PROXY">
      <xsd:annotation>
         <xsd:documentation>The VariationPointProxy represents variation points of the C/C++ implementation. In case of bindingTime = compileTime the RTE provides defines which can be used for Pre Processor directives to implement compileTime variability.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="VariationPointProxy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:VARIATION-POINT-PROXY"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>

<xsd:complexType name="NMTOKEN-STRING">
      <xsd:annotation>
         <xsd:documentation>This is an identifier as used in xml, e.g. xml-names. Basic difference to Identifier is the fact that it can contain "-".</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="NameToken";xml.xsd.customType="NMTOKEN-STRING";xml.xsd.type="NMTOKEN"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:NMTOKEN-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="NMTOKEN-STRING--SIMPLE">
      <xsd:restriction base="xsd:NMTOKEN"/>
   </xsd:simpleType>
   <xsd:complexType name="NMTOKENS-STRING">
      <xsd:annotation>
         <xsd:documentation>This is a white-space separated list of name tokens.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="NameTokens";xml.xsd.customType="NMTOKENS-STRING";xml.xsd.type="NMTOKENS"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:NMTOKENS-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="NMTOKENS-STRING--SIMPLE">
      <xsd:restriction base="xsd:NMTOKENS"/>
   </xsd:simpleType>
   <xsd:simpleType name="REVISION-LABEL-STRING--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[0-9]+\.[0-9]+\.[0-9]+([\._;].*)?"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:simpleType name="FLOAT-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="FLOAT">
            <xsd:annotation>
               <xsd:documentation>This indicates that a page formatter is allowed to float the table to optimize the pagination. This is for example supported by TeX.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="FloatEnum.float"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NO-FLOAT">
            <xsd:annotation>
               <xsd:documentation>This indicates that a page formatter is not allowed to float the object to optimize the pagination.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="FloatEnum.noFloat"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
    
   <xsd:simpleType name="DATE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="([0-9]{4}-[0-9]{2}-[0-9]{2})(T[0-9]{2}:[0-9]{2}:[0-9]{2}(Z|([+\-][0-9]{2}:[0-9]{2})))?"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="PGWIDE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-PGWIDE">
            <xsd:annotation>
               <xsd:documentation>This indicates that the table shall be fit in the current text flow.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="PgwideEnum.noPgwide"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PGWIDE">
            <xsd:annotation>
               <xsd:documentation>This indicates that the table may use the entire page width. This is in particular important in case of so called "side-head layouts" but also if the table is in a list or in a note.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="PgwideEnum.pgwide"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:simpleType name="VIEW-TOKENS--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="(-?[a-zA-Z_]+)(( )+-?[a-zA-Z_]+)*"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="CHAPTER-ENUM-BREAK">
      <xsd:annotation>
         <xsd:documentation>This allows to specify the page break policy of a paginatable element.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ChapterEnumBreak"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:CHAPTER-ENUM-BREAK--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="CHAPTER-ENUM-BREAK--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BREAK">
            <xsd:annotation>
               <xsd:documentation>This indicates the a page break shall be applied before the current block.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ChapterEnumBreak.break"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NO-BREAK">
            <xsd:annotation>
               <xsd:documentation>This indicates that there is no need to force a page break before this block.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ChapterEnumBreak.noBreak"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="KEEP-WITH-PREVIOUS-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies a page break policy by controlling blocks which shall be kept together.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="KeepWithPreviousEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:KEEP-WITH-PREVIOUS-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="KEEP-WITH-PREVIOUS-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="KEEP">
            <xsd:annotation>
               <xsd:documentation>This indicates that the block shall be kept together with the previous block.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="KeepWithPreviousEnum.keep"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NO-KEEP">
            <xsd:annotation>
               <xsd:documentation>This indicates that there is no need to keep the block with the previous one. This is the same as if the attribute itself is missing.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="KeepWithPreviousEnum.noKeep"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
  <xsd:simpleType name="BINDING-TIME-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CODE-GENERATION-TIME">
            <xsd:annotation>
               <xsd:documentation>* Coding by hand, based on requirements document.
* Tool based code generation, e.g. from a model.
* The model may contain variants.
* Only code for the selected variant(s) is actually generated.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BindingTimeEnum.codeGenerationTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LINK-TIME">
            <xsd:annotation>
               <xsd:documentation>Configure what is included in object code, and what is omitted
Based on which variant(s) are selected
E.g. for modules that are delivered as object code (as opposed to those that are delivered as source code)</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BindingTimeEnum.linkTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PRE-COMPILE-TIME">
            <xsd:annotation>
               <xsd:documentation>This is typically the C-Preprocessor.
Exclude parts of the code from the compilation process, e.g.,
because they are not required for the selected variant,
because they are incompatible with the selected variant,
because they require resources that are not present in the selected variant.
Object code is only generated for the selected variant(s).
The code that is excluded at this stage code will not be available at later stages.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BindingTimeEnum.preCompileTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SYSTEM-DESIGN-TIME">
            <xsd:annotation>
               <xsd:documentation>* Designing the VFB.
* Software Component types (PortInterfaces).
* SWC Prototypes and the Connections between SWCprototypes.
* Designing the Topology
* ECUs and interconnecting Networks
* Designing the Communication Matrix and Data Mapping</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BindingTimeEnum.systemDesignTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
  <xsd:simpleType name="PRIMITIVE-IDENTIFIER--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:maxLength value="128"/>
         <xsd:pattern value="[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?"/>
      </xsd:restriction>
   </xsd:simpleType>
  <!-- element group for class LanguageDataModel::WhitespaceControlled -->
   <xsd:group name="WHITESPACE-CONTROLLED">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to control the white-space handling  e.g. in xml serialization. This is implemented by adding the attribute "space".</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="WhitespaceControlled"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- attribute group for class LanguageDataModel::WhitespaceControlled -->
   <xsd:attributeGroup name="WHITESPACE-CONTROLLED">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to control the white-space handling  e.g. in xml serialization. This is implemented by adding the attribute "space".</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="WhitespaceControlled"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute ref="xml:space" use="required">
         <xsd:annotation>
            <xsd:documentation>This attribute is used to signal an intention that in that element, white space should be preserved by applications. It is defined according to xml:space as declared by W3C.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="WhitespaceControlled.xmlSpace";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.attribute="true";xml.attributeRef="true";xml.enforceMinMultiplicity="true";xml.name="space";xml.nsPrefix="xml"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
 
<!-- element group for class ECUCParameterDefTemplate::EcucParameterDef -->
   <xsd:group name="ECUC-PARAMETER-DEF">
      <xsd:annotation>
         <xsd:documentation>Abstract class used to define the similarities of all ECU Configuration Parameter types defined as subclasses.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucParameterDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="DERIVATION" type="AR:ECUC-DERIVATION-SPECIFICATION">
            <xsd:annotation>
               <xsd:documentation>A derivation of a Configuration Parameter value can be specified by an informal Calculation Formula or by a formal language that can be used to specify the computational rules.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucParameterDef.derivation";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SYMBOLIC-NAME-VALUE" type="AR:BOOLEAN">
            <xsd:annotation>
               <xsd:documentation>Specifies that this parameter's value is used, together with the aggregating container, to derive a symbolic name definition. See chapter "Representation of Symbolic Names" in Ecuc specification for more details.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucParameterDef.symbolicNameValue";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="WITH-AUTO" type="AR:BOOLEAN">
            <xsd:annotation>
               <xsd:documentation>Specifies whether it shall be allowed on the value side to specify this parameter value as "AUTO".

If withAuto is "true" it shall be possible to set the "isAutoValue" attribute of the respective parameter to "true". This means that the actual value will not be considered during ECU Configuration but will be (re-)calculated by the code generator and stored in the value attribute afterwards. These implicit updated values might require a re-generation of other modules which reference these values.

If withAuto is "false" it shall not be possible to set the "isAutoValue" attribute of the respective parameter to "true".

If withAuto is not present the default is "false".</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucParameterDef.withAuto";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
<!-- element group for class ECUCParameterDefTemplate::EcucAbstractStringParamDef -->
   <xsd:group name="ECUC-ABSTRACT-STRING-PARAM-DEF">
      <xsd:annotation>
         <xsd:documentation>Abstract class that is used to collect the common properties for StringParamDefs, LinkerSymbolDef, FunctionNameDef and MultilineStringParamDefs. 

atpVariation: [RS_ECUC_0083]</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucAbstractStringParamDef";vh.latestBindingTime="codeGenerationTime"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
<!-- element group for class ECUCParameterDefTemplate::EcucStringParamDef -->
   <xsd:group name="ECUC-STRING-PARAM-DEF">
      <xsd:annotation>
         <xsd:documentation>Configuration parameter type for String.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucStringParamDef";xml.sequenceOffset="0"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ECUC-STRING-PARAM-DEF-VARIANTS">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucStringParamDef.EcucStringParamDefVariant";pureMM.maxOccurs="-1";pureMM.minOccurs="1";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ECUC-STRING-PARAM-DEF-CONDITIONAL" type="AR:ECUC-STRING-PARAM-DEF-CONDITIONAL"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucStringParamDef -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-STRING-PARAM-DEF">
      <xsd:annotation>
         <xsd:documentation>Configuration parameter type for String.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucStringParamDef";xml.sequenceOffset="0"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ECUC-DEFINITION-ELEMENT"/>
         <xsd:group ref="AR:ECUC-COMMON-ATTRIBUTES"/>
         <xsd:group ref="AR:ECUC-PARAMETER-DEF"/>
         <xsd:group ref="AR:ECUC-ABSTRACT-STRING-PARAM-DEF"/>
         <xsd:group ref="AR:ECUC-STRING-PARAM-DEF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class ECUCParameterDefTemplate::EcucAbstractStringParamDefContent -->
   <xsd:group name="ECUC-ABSTRACT-STRING-PARAM-DEF-CONTENT">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucAbstractStringParamDefContent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="DEFAULT-VALUE" type="AR:VERBATIM-STRING">
            <xsd:annotation>
               <xsd:documentation>Default value of the string configuration parameter.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucAbstractStringParamDef.defaultValue";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MAX-LENGTH" type="AR:POSITIVE-INTEGER">
            <xsd:annotation>
               <xsd:documentation>Max length allowed for this string.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucAbstractStringParamDef.maxLength";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MIN-LENGTH" type="AR:POSITIVE-INTEGER">
            <xsd:annotation>
               <xsd:documentation>Min length allowed for this string.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucAbstractStringParamDef.minLength";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="REGULAR-EXPRESSION" type="AR:REGULAR-EXPRESSION">
            <xsd:annotation>
               <xsd:documentation>This represents the regular expression which shall be used to validate the string parameter value.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucAbstractStringParamDef.regularExpression";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
<!-- element group for class ECUCParameterDefTemplate::EcucCommonAttributes -->
   <xsd:group name="ECUC-COMMON-ATTRIBUTES">
      <xsd:annotation>
         <xsd:documentation>Attributes used by Configuration Parameters as well as References.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucCommonAttributes"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="CONFIGURATION-CLASS-AFFECTION" type="AR:ECUC-CONFIGURATION-CLASS-AFFECTION">
            <xsd:annotation>
               <xsd:documentation>Specifies whether changes on this parameter have some affection on other parameters.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="EcucCommonAttributes.configurationClassAffection";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="IMPLEMENTATION-CONFIG-CLASSES">
            <xsd:annotation>
               <xsd:documentation>Specifies in which ConfigurationClass this parameter or reference is available for which ConfigurationVariant. 
This aggregation is optional if the surrounding EcucModuleDef has the category STANDARDIZED_MODULE_DEFINITION. If the category attribute of the EcucModuleDef is set to VENDOR_SPECIFIC_MODULE_DEFINITION then this aggregation is mandatory.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="EcucCommonAttributes.implementationConfigClass";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.namePlural="IMPLEMENTATION-CONFIG-CLASSES"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ECUC-IMPLEMENTATION-CONFIGURATION-CLASS" type="AR:ECUC-IMPLEMENTATION-CONFIGURATION-CLASS"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MULTIPLICITY-CONFIG-CLASSES">
            <xsd:annotation>
               <xsd:documentation>Specifies in which MultiplicityConfigurationClass this parameter or reference is available in a particular ConfigurationVariant. This aggregation is optional if the surrounding EcucModuleDef has the Category STANDARDIZED_MODULE_DEFINITION. If the category attribute of the EcucModuleDef is set to VENDOR_SPECIFIC_MODULE_DEFINITION, then this aggregation is mandatory.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucCommonAttributes.multiplicityConfigClass";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.namePlural="MULTIPLICITY-CONFIG-CLASSES"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ECUC-MULTIPLICITY-CONFIGURATION-CLASS" type="AR:ECUC-MULTIPLICITY-CONFIGURATION-CLASS"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ORIGIN" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>String specifying if this configuration parameter is an AUTOSAR standardized configuration parameter or if the parameter is hardware- or vendor-specific.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucCommonAttributes.origin";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="POST-BUILD-VARIANT-MULTIPLICITY" type="AR:BOOLEAN">
            <xsd:annotation>
               <xsd:documentation>Indicates if a parameter or a reference may have different number of instances in different post-build variants (previously known as post-build selectable configuration sets). TRUE means yes, FALSE means no.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucCommonAttributes.postBuildVariantMultiplicity";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="POST-BUILD-VARIANT-VALUE" type="AR:BOOLEAN">
            <xsd:annotation>
               <xsd:documentation>Indicates if a parameter or a reference may have different value in different post-build variants (previously known as post-build selectable configuration sets). TRUE means yes, FALSE means no.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucCommonAttributes.postBuildVariantValue";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="REQUIRES-INDEX" type="AR:BOOLEAN">
            <xsd:annotation>
               <xsd:documentation>Used to define whether the value element for this definition shall be provided with an index.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucCommonAttributes.requiresIndex";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VALUE-CONFIG-CLASSES">
            <xsd:annotation>
               <xsd:documentation>Specifies in which ValueConfigurationClass this parameter or reference is available in a particular ConfigurationVariant. This aggregation is optional if the surrounding EcucModuleDef has the Category STANDARDIZED_MODULE_DEFINITION. If the category attribute of the EcucModuleDef is set to VENDOR_SPECIFIC_MODULE_DEFINITION, then this aggregation is mandatory.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucCommonAttributes.valueConfigClass";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.namePlural="VALUE-CONFIG-CLASSES"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ECUC-VALUE-CONFIGURATION-CLASS" type="AR:ECUC-VALUE-CONFIGURATION-CLASS"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
<!-- element group for class ECUCParameterDefTemplate::EcucAbstractReferenceDef -->
   <xsd:group name="ECUC-ABSTRACT-REFERENCE-DEF">
      <xsd:annotation>
         <xsd:documentation>Common class to gather the attributes for the definition of references.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucAbstractReferenceDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <xsd:simpleType name="ECUC-ABSTRACT-REFERENCE-DEF--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ECUC-ABSTRACT-REFERENCE-DEF"/>
         <xsd:enumeration value="ECUC-CHOICE-REFERENCE-DEF"/>
         <xsd:enumeration value="ECUC-FOREIGN-REFERENCE-DEF"/>
         <xsd:enumeration value="ECUC-INSTANCE-REFERENCE-DEF"/>
         <xsd:enumeration value="ECUC-REFERENCE-DEF"/>
         <xsd:enumeration value="ECUC-SYMBOLIC-NAME-REFERENCE-DEF"/>
         <xsd:enumeration value="ECUC-URI-REFERENCE-DEF"/>
      </xsd:restriction>
   </xsd:simpleType>
   <!-- element group for class ECUCDescriptionTemplate::EcucIndexableValue -->
   <xsd:group name="ECUC-INDEXABLE-VALUE">
      <xsd:annotation>
         <xsd:documentation>Used to support the specification of ordering of parameter values.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucIndexableValue"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="INDEX" type="AR:POSITIVE-INTEGER">
            <xsd:annotation>
               <xsd:documentation>Used to support the specification of ordering of parameter values.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucIndexableValue.index";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="-5"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- element group for class ECUCDescriptionTemplate::EcucParameterValue -->
   <xsd:group name="ECUC-PARAMETER-VALUE">
      <xsd:annotation>
         <xsd:documentation>Common class to all types of configuration values.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucParameterValue"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="DEFINITION-REF">
            <xsd:annotation>
               <xsd:documentation>Reference to the definition of this EcucParameterValue subclasses in the ECU Configuration Parameter Definition.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucParameterValue.definition";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="-10"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:ECUC-PARAMETER-DEF--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ANNOTATIONS">
            <xsd:annotation>
               <xsd:documentation>Possibility to provide additional notes while defining the ECU Configuration Parameter Values. These are not intended as documentation but are mere design notes.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucParameterValue.annotation";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.sequenceOffset="10"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ANNOTATION" type="AR:ANNOTATION"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="IS-AUTO-VALUE" type="AR:BOOLEAN">
            <xsd:annotation>
               <xsd:documentation>If withAuto is set to "true" for this parameter definition the isAutoValue can be set to "true".
If isAutoValue is set to "true" the actual value will not be considered during ECU Configuration but will be (re-)calculated by the code generator and stored in the value attribute afterwards. These implicit updated values might require a re-generation of other modules which reference these values.

If isAutoValue is not present the default is "false".</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucParameterValue.isAutoValue";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucParameterValue.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- element group for class ECUCParameterDefTemplate::EcucAbstractConfigurationClass -->
   <xsd:group name="ECUC-ABSTRACT-CONFIGURATION-CLASS">
      <xsd:annotation>
         <xsd:documentation>Specifies the ValueConfigurationClass of a parameter/reference or the MultiplicityConfigurationClass of a parameter/reference or a container for each ConfigurationVariant of the EcucModuleDef.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucAbstractConfigurationClass"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="CONFIG-CLASS" type="AR:ECUC-CONFIGURATION-CLASS-ENUM">
            <xsd:annotation>
               <xsd:documentation>Specifies the ConfigurationClass for the given ConfigurationVariant.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucAbstractConfigurationClass.configClass";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="CONFIG-VARIANT" type="AR:ECUC-CONFIGURATION-VARIANT-ENUM">
            <xsd:annotation>
               <xsd:documentation>Specifies the ConfigurationVariant the ConfigurationClass is specified for.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucAbstractConfigurationClass.configVariant";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
<!-- element group for class RequirementsTracing::Traceable -->
   <xsd:group name="TRACEABLE">
      <xsd:annotation>
         <xsd:documentation>This meta class represents the ability to be subject to tracing within an AUTOSAR model.

Note that it is expected that its subclasses inherit either from MultilanguageReferrable or from Identifiable. Nevertheless it also inherits from MultilanguageReferrable in order to provide a common reference target for all Traceables.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Traceable"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="TRACE-REFS">
            <xsd:annotation>
               <xsd:documentation>This assocation represents the ability to trace to upstream requirements / constraints. This supports for example  the bottom up tracing 

ProjectObjectives &lt;- MainRequirements &lt;- Features &lt;- RequirementSpecs &lt;- BSW/AI</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Traceable.trace";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="TRACE-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:TRACEABLE--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   
<xsd:complexType name="NOTE-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies the type of the note. It can be used to render a note label or even a note icon.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="NoteTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:NOTE-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="NOTE-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CAUTION">
            <xsd:annotation>
               <xsd:documentation>This indicates that the note is an alert which shall be considered carefully.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="NoteTypeEnum.caution"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EXAMPLE">
            <xsd:annotation>
               <xsd:documentation>This indicates that the note represents an example, e.g. a code example etc.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="NoteTypeEnum.example"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EXERCISE">
            <xsd:annotation>
               <xsd:documentation>This indicates that the note represents an exercise for the reader.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="NoteTypeEnum.exercise"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="HINT">
            <xsd:annotation>
               <xsd:documentation>This indicates that the note represents a hint which helps the user for better understanding.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="NoteTypeEnum.hint"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="INSTRUCTION">
            <xsd:annotation>
               <xsd:documentation>This indicates that the note represents an instruction, e.g. a step by step procedure.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="NoteTypeEnum.instruction"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OTHER">
            <xsd:annotation>
               <xsd:documentation>This indicates that the note is something else. The particular type of the note shall then be specified in the label of the note.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="NoteTypeEnum.other"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TIP">
            <xsd:annotation>
               <xsd:documentation>This indicates that the note represents which is good to know. It is similar to a hint, but focuses more to good practice than to better understanding.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="NoteTypeEnum.tip"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="FRAME-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ALL">
            <xsd:annotation>
               <xsd:documentation>Borders all around the table</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="FrameEnum.all"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BOTTOM">
            <xsd:annotation>
               <xsd:documentation>Border at the bottom of the table</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="FrameEnum.bottom"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NONE">
            <xsd:annotation>
               <xsd:documentation>No borders around the table</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="FrameEnum.none"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SIDES">
            <xsd:annotation>
               <xsd:documentation>Borders at the sides of the table</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="FrameEnum.sides"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TOP">
            <xsd:annotation>
               <xsd:documentation>Border at the top of the table</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="FrameEnum.top"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TOPBOT">
            <xsd:annotation>
               <xsd:documentation>Borders at the top and bottom of  the table</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="FrameEnum.topbot"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="LIST-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NUMBER">
            <xsd:annotation>
               <xsd:documentation>This indicates that the list is an numerated list.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ListEnum.number"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="UNNUMBER">
            <xsd:annotation>
               <xsd:documentation>This indicates that it is an enumeration (bulleted list)</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ListEnum.unnumber"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class Chapters::ChapterModel -->
   <xsd:group name="CHAPTER-MODEL">
      <xsd:annotation>
         <xsd:documentation>This is the basic content model of a chapter except the Chapter title. This can be utilized in general chapters as well as in predefined chapters.

A chapter has content on three levels:

1. chapter content

2. topics

3. subchapters</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ChapterModel"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:choice maxOccurs="1" minOccurs="0">
            <xsd:group ref="AR:CHAPTER-CONTENT"/>
         </xsd:choice>
         <xsd:choice maxOccurs="1" minOccurs="0">
            <xsd:group ref="AR:TOPIC-OR-MSR-QUERY"/>
         </xsd:choice>
         <xsd:choice maxOccurs="1" minOccurs="0">
            <xsd:group ref="AR:CHAPTER-OR-MSR-QUERY"/>
         </xsd:choice>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Chapters::ChapterModel -->
   <xsd:complexType abstract="false" mixed="false" name="CHAPTER-MODEL">
      <xsd:annotation>
         <xsd:documentation>This is the basic content model of a chapter except the Chapter title. This can be utilized in general chapters as well as in predefined chapters.

A chapter has content on three levels:

1. chapter content

2. topics

3. subchapters</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ChapterModel"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:CHAPTER-MODEL"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:complexType name="C-IDENTIFIER">
      <xsd:annotation>
         <xsd:documentation>This datatype represents a string, that follows the rules of C-identifiers.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CIdentifier";xml.xsd.customType="C-IDENTIFIER";xml.xsd.pattern="[a-zA-Z_][a-zA-Z0-9_]*";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject,primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:C-IDENTIFIER--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
            <xsd:attributeGroup ref="AR:C-IDENTIFIER"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <!-- attribute group for class C-IDENTIFIER -->
   <xsd:attributeGroup name="C-IDENTIFIER">
      <xsd:annotation/>
      <xsd:attribute name="NAME-PATTERN" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute represents a pattern which shall be used to define the value of the identifier if the CIdentifier in question is part of a blueprint. 

For more details refer to TPS_StandardizationTemplate.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="CIdentifier.namePattern";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <xsd:simpleType name="C-IDENTIFIER--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[a-zA-Z_][a-zA-Z0-9_]*"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class Identifiable::ReferrableRefConditional -->
   <xsd:group name="REFERRABLE-REF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Referrable"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="REFERRABLE-REF">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Referrable";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:REFERRABLE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ReferrableRefConditional.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Identifiable::ReferrableRefConditional -->
   <xsd:complexType abstract="false" mixed="false" name="REFERRABLE-REF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Referrable"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE-REF-CONDITIONAL"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class SpecialData::Sd -->
   <xsd:group name="SD">
      <xsd:annotation>
         <xsd:documentation>This class represents a primitive element in a special data group.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Sd"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="VALUE" type="AR:VERBATIM-STRING-PLAIN--SIMPLE">
            <xsd:annotation>
               <xsd:documentation>This is the value of the special data.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Sd.value";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.roleElement="false";xml.roleWrapperElement="false";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- attribute group for class SpecialData::Sd -->
   <xsd:attributeGroup name="SD">
      <xsd:annotation>
         <xsd:documentation>This class represents a primitive element in a special data group.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Sd"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="GID" type="AR:NMTOKEN-STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attributes specifies an identifier. Gid comes from the SGML/XML-Term "Generic Identifier" which is the element name in XML. The role of this attribute is the same as the name of an XML - element.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Sd.gid";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute ref="xml:space">
         <xsd:annotation>
            <xsd:documentation>This attribute is used to signal an intention that in that element, white space should be preserved by applications. It is defined according to xml:space as declared by W3C.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Sd.xmlSpace";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true";xml.attributeRef="true";xml.enforceMinMultiplicity="true";xml.name="space";xml.nsPrefix="xml"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class SpecialData::Sd -->
   <xsd:complexType name="SD">
      <xsd:annotation>
         <xsd:documentation>This class represents a primitive element in a special data group.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Sd"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:VERBATIM-STRING-PLAIN--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
            <xsd:attributeGroup ref="AR:SD"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
<xsd:simpleType name="DEPENDENCY-ON-ARTIFACT--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DEPENDENCY-ON-ARTIFACT"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class AttributeValueVariationPoints::NumericalValueVariationPoint -->
   <xsd:group name="NUMERICAL-VALUE-VARIATION-POINT">
      <xsd:annotation>
         <xsd:documentation>This class represents an attribute value variation point for Numerical attributes.

Note that this class might be used in the extended meta-model only.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="NumericalValueVariationPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class AttributeValueVariationPoints::NumericalValueVariationPoint -->
   <xsd:complexType abstract="false" mixed="true" name="NUMERICAL-VALUE-VARIATION-POINT">
      <xsd:annotation>
         <xsd:documentation>This class represents an attribute value variation point for Numerical attributes.

Note that this class might be used in the extended meta-model only.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="NumericalValueVariationPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:FORMULA-EXPRESSION"/>
         <xsd:group ref="AR:SW-SYSTEMCONST-DEPENDENT-FORMULA"/>
         <xsd:group ref="AR:ATTRIBUTE-VALUE-VARIATION-POINT"/>
         <xsd:group ref="AR:ABSTRACT-NUMERICAL-VARIATION-POINT"/>
         <xsd:group ref="AR:NUMERICAL-VALUE-VARIATION-POINT"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:ATTRIBUTE-VALUE-VARIATION-POINT"/>
   </xsd:complexType>
<!-- element group for class ECUCParameterDefTemplate::EcucMultiplicityConfigurationClass -->
   <xsd:group name="ECUC-MULTIPLICITY-CONFIGURATION-CLASS">
      <xsd:annotation>
         <xsd:documentation>Specifies the MultiplicityConfigurationClass of a parameter/reference or a container for each ConfigurationVariant of the EcucModuleDef.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucMultiplicityConfigurationClass"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucMultiplicityConfigurationClass -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-MULTIPLICITY-CONFIGURATION-CLASS">
      <xsd:annotation>
         <xsd:documentation>Specifies the MultiplicityConfigurationClass of a parameter/reference or a container for each ConfigurationVariant of the EcucModuleDef.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucMultiplicityConfigurationClass"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ECUC-ABSTRACT-CONFIGURATION-CLASS"/>
         <xsd:group ref="AR:ECUC-MULTIPLICITY-CONFIGURATION-CLASS"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class Chapters::ChapterContent -->
   <xsd:group name="CHAPTER-CONTENT">
      <xsd:annotation>
         <xsd:documentation>This class represents the content which is directly in a chapter. It is basically the same as the one in a Topic but might have additional complex structures (e.g. Synopsis)</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ChapterContent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixed,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:choice maxOccurs="unbounded" minOccurs="0">
               <xsd:group ref="AR:TOPIC-CONTENT-OR-MSR-QUERY"/>
            </xsd:choice>
            <xsd:element name="PRMS" type="AR:PRMS">
               <xsd:annotation>
                  <xsd:documentation>This is a parameter table within a chapter.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="ChapterContent.prms";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="150"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
         </xsd:choice>
      </xsd:choice>
   </xsd:group>
   <!-- complex type for class Chapters::ChapterContent -->
   <xsd:complexType abstract="false" mixed="false" name="CHAPTER-CONTENT">
      <xsd:annotation>
         <xsd:documentation>This class represents the content which is directly in a chapter. It is basically the same as the one in a Topic but might have additional complex structures (e.g. Synopsis)</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ChapterContent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixed,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:CHAPTER-CONTENT"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
  
   <!-- element group for class Chapters::ChapterOrMsrQuery -->
   <xsd:group name="CHAPTER-OR-MSR-QUERY">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to denote a particular chapter or a query returning a chapter.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ChapterOrMsrQuery"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixed,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="CHAPTER" type="AR:CHAPTER">
               <xsd:annotation>
                  <xsd:documentation>This establishes a subschapter.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="ChapterOrMsrQuery.chapter";pureMM.maxOccurs="-1";pureMM.minOccurs="1";vh.latestBindingTime="postBuild";xml.sequenceOffset="210"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="MSR-QUERY-CHAPTER" type="AR:MSR-QUERY-CHAPTER">
               <xsd:annotation>
                  <xsd:documentation>This represents automatically contributed chapters provided by an msrquery.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="ChapterOrMsrQuery.msrQueryChapter";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="220"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
         </xsd:choice>
      </xsd:choice>
   </xsd:group>
   <!-- complex type for class Chapters::ChapterOrMsrQuery -->
   <xsd:complexType abstract="false" mixed="false" name="CHAPTER-OR-MSR-QUERY">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to denote a particular chapter or a query returning a chapter.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ChapterOrMsrQuery"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixed,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:CHAPTER-OR-MSR-QUERY"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class Chapters::TopicOrMsrQuery -->
   <xsd:group name="TOPIC-OR-MSR-QUERY">
      <xsd:annotation>
         <xsd:documentation>This class provides the alternative of a Topic with an MsrQuery which delivers a topic.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TopicOrMsrQuery"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixed,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="TOPIC-1" type="AR:TOPIC-1">
               <xsd:annotation>
                  <xsd:documentation>This is used to create particcular topics within a chapter. A topic is similar to a subchapter, but cannot be nesxted and will not appear in the table of contents of the document.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="TopicOrMsrQuery.topic1";pureMM.maxOccurs="-1";pureMM.minOccurs="1";vh.latestBindingTime="postBuild";xml.sequenceOffset="180"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="MSR-QUERY-TOPIC-1" type="AR:MSR-QUERY-TOPIC-1">
               <xsd:annotation>
                  <xsd:documentation>This represents automatically contributed topics provided by an msrquery.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="TopicOrMsrQuery.msrQueryTopic1";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="190"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
         </xsd:choice>
      </xsd:choice>
   </xsd:group>
   <!-- complex type for class Chapters::TopicOrMsrQuery -->
   <xsd:complexType abstract="false" mixed="false" name="TOPIC-OR-MSR-QUERY">
      <xsd:annotation>
         <xsd:documentation>This class provides the alternative of a Topic with an MsrQuery which delivers a topic.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TopicOrMsrQuery"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixed,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:TOPIC-OR-MSR-QUERY"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:simpleType name="VERBATIM-STRING-PLAIN--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:whiteSpace value="preserve"/>
      </xsd:restriction>
   </xsd:simpleType>
 <!-- element group for class AttributeValueVariationPoints::AbstractNumericalVariationPoint -->
   <xsd:group name="ABSTRACT-NUMERICAL-VARIATION-POINT">
      <xsd:annotation>
         <xsd:documentation>This is an abstract NumericalValueVariationPoint. It is introduced to support the case that additional attributes are required for particular purposes.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AbstractNumericalVariationPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
<!-- element group for class Chapters::TopicContentOrMsrQuery -->
   <xsd:group name="TOPIC-CONTENT-OR-MSR-QUERY">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents a topic or a topic content which is generated using queries.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TopicContentOrMsrQuery"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixed,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="MSR-QUERY-P-1" type="AR:MSR-QUERY-P-1">
               <xsd:annotation>
                  <xsd:documentation>This represents automatically contributed contents provided by an msrquery.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="TopicContentOrMsrQuery.msrQueryP1";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:choice maxOccurs="unbounded" minOccurs="0">
               <xsd:group ref="AR:TOPIC-CONTENT"/>
            </xsd:choice>
         </xsd:choice>
      </xsd:choice>
   </xsd:group>
   <!-- complex type for class Chapters::TopicContentOrMsrQuery -->
   <xsd:complexType abstract="false" mixed="false" name="TOPIC-CONTENT-OR-MSR-QUERY">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents a topic or a topic content which is generated using queries.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TopicContentOrMsrQuery"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixed,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:TOPIC-CONTENT-OR-MSR-QUERY"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:simpleType name="ECUC-DESTINATION-URI-DEF--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ECUC-DESTINATION-URI-DEF"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class ECUCParameterDefTemplate::EcucAddInfoParamDef -->
   <xsd:group name="ECUC-ADD-INFO-PARAM-DEF">
      <xsd:annotation>
         <xsd:documentation>Configuration Parameter Definition for the specification of formatted text in the ECU Configuration Parameter Description.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucAddInfoParamDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucAddInfoParamDef -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-ADD-INFO-PARAM-DEF">
      <xsd:annotation>
         <xsd:documentation>Configuration Parameter Definition for the specification of formatted text in the ECU Configuration Parameter Description.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucAddInfoParamDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ECUC-DEFINITION-ELEMENT"/>
         <xsd:group ref="AR:ECUC-COMMON-ATTRIBUTES"/>
         <xsd:group ref="AR:ECUC-PARAMETER-DEF"/>
         <xsd:group ref="AR:ECUC-ADD-INFO-PARAM-DEF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
 <!-- element group for class ECUCParameterDefTemplate::EcucBooleanParamDef -->
   <xsd:group name="ECUC-BOOLEAN-PARAM-DEF">
      <xsd:annotation>
         <xsd:documentation>Configuration parameter type for Boolean. Allowed values are true and false.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucBooleanParamDef";xml.sequenceOffset="0"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="DEFAULT-VALUE" type="AR:BOOLEAN-VALUE-VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>Default value of the boolean configuration parameter.

atpVariation: [RS_ECUC_00083]</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucBooleanParamDef.defaultValue";pureMM.maxOccurs="1";pureMM.minOccurs="0";vh.latestBindingTime="codeGenerationTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucBooleanParamDef -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-BOOLEAN-PARAM-DEF">
      <xsd:annotation>
         <xsd:documentation>Configuration parameter type for Boolean. Allowed values are true and false.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucBooleanParamDef";xml.sequenceOffset="0"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ECUC-DEFINITION-ELEMENT"/>
         <xsd:group ref="AR:ECUC-COMMON-ATTRIBUTES"/>
         <xsd:group ref="AR:ECUC-PARAMETER-DEF"/>
         <xsd:group ref="AR:ECUC-BOOLEAN-PARAM-DEF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class ECUCParameterDefTemplate::EcucFloatParamDef -->
   <xsd:group name="ECUC-FLOAT-PARAM-DEF">
      <xsd:annotation>
         <xsd:documentation>Configuration parameter type for Float.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucFloatParamDef";xml.sequenceOffset="0"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="DEFAULT-VALUE" type="AR:FLOAT-VALUE-VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>Default value of the float configuration parameter.

atpVariation: [RS_ECUC_00083]</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucFloatParamDef.defaultValue";pureMM.maxOccurs="1";pureMM.minOccurs="0";vh.latestBindingTime="codeGenerationTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MAX" type="AR:LIMIT">
            <xsd:annotation>
               <xsd:documentation>Max value allowed for the parameter defined.

atpVariation: [RS_ECUC_00084]</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucFloatParamDef.max";pureMM.maxOccurs="1";pureMM.minOccurs="0";vh.latestBindingTime="codeGenerationTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MIN" type="AR:LIMIT">
            <xsd:annotation>
               <xsd:documentation>Min value allowed for the parameter defined.

atpVariation: [RS_ECUC_00084]</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucFloatParamDef.min";pureMM.maxOccurs="1";pureMM.minOccurs="0";vh.latestBindingTime="codeGenerationTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucFloatParamDef -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-FLOAT-PARAM-DEF">
      <xsd:annotation>
         <xsd:documentation>Configuration parameter type for Float.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucFloatParamDef";xml.sequenceOffset="0"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ECUC-DEFINITION-ELEMENT"/>
         <xsd:group ref="AR:ECUC-COMMON-ATTRIBUTES"/>
         <xsd:group ref="AR:ECUC-PARAMETER-DEF"/>
         <xsd:group ref="AR:ECUC-FLOAT-PARAM-DEF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
 <!-- element group for class ECUCParameterDefTemplate::EcucFunctionNameDef -->
   <xsd:group name="ECUC-FUNCTION-NAME-DEF">
      <xsd:annotation>
         <xsd:documentation>Configuration parameter type for Function Names like those used to specify callback functions.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucFunctionNameDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ECUC-FUNCTION-NAME-DEF-VARIANTS">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucFunctionNameDef.EcucFunctionNameDefVariant";pureMM.maxOccurs="-1";pureMM.minOccurs="1";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ECUC-FUNCTION-NAME-DEF-CONDITIONAL" type="AR:ECUC-FUNCTION-NAME-DEF-CONDITIONAL"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucFunctionNameDef -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-FUNCTION-NAME-DEF">
      <xsd:annotation>
         <xsd:documentation>Configuration parameter type for Function Names like those used to specify callback functions.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucFunctionNameDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ECUC-DEFINITION-ELEMENT"/>
         <xsd:group ref="AR:ECUC-COMMON-ATTRIBUTES"/>
         <xsd:group ref="AR:ECUC-PARAMETER-DEF"/>
         <xsd:group ref="AR:ECUC-ABSTRACT-STRING-PARAM-DEF"/>
         <xsd:group ref="AR:ECUC-FUNCTION-NAME-DEF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
 <!-- element group for class ECUCParameterDefTemplate::EcucEnumerationParamDef -->
   <xsd:group name="ECUC-ENUMERATION-PARAM-DEF">
      <xsd:annotation>
         <xsd:documentation>Configuration parameter type for Enumeration.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucEnumerationParamDef";xml.sequenceOffset="0"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="DEFAULT-VALUE" type="AR:IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>Default value of the enumeration configuration parameter. This string needs to be one of the literals specified for this enumeration.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucEnumerationParamDef.defaultValue";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="LITERALS">
            <xsd:annotation>
               <xsd:documentation>Aggregation on the literals used to define this enumeration parameter. 
This aggregation is optional if the surrounding EcucModuleDef has the category STANDARDIZED_MODULE_DEFINITION. If the category attribute of the EcucModuleDef is set to VENDOR_SPECIFIC_MODULE_DEFINITION then this aggregation is mandatory.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName";mmt.qualifiedName="EcucEnumerationParamDef.literal";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ECUC-ENUMERATION-LITERAL-DEF" type="AR:ECUC-ENUMERATION-LITERAL-DEF"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucEnumerationParamDef -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-ENUMERATION-PARAM-DEF">
      <xsd:annotation>
         <xsd:documentation>Configuration parameter type for Enumeration.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucEnumerationParamDef";xml.sequenceOffset="0"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ECUC-DEFINITION-ELEMENT"/>
         <xsd:group ref="AR:ECUC-COMMON-ATTRIBUTES"/>
         <xsd:group ref="AR:ECUC-PARAMETER-DEF"/>
         <xsd:group ref="AR:ECUC-ENUMERATION-PARAM-DEF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class ECUCParameterDefTemplate::EcucIntegerParamDef -->
   <xsd:group name="ECUC-INTEGER-PARAM-DEF">
      <xsd:annotation>
         <xsd:documentation>Configuration parameter type for Integer.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucIntegerParamDef";xml.sequenceOffset="0"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="DEFAULT-VALUE" type="AR:UNLIMITED-INTEGER-VALUE-VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>Default value of the integer configuration parameter.

atpVariation: [RS_ECUC_00083]</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucIntegerParamDef.defaultValue";pureMM.maxOccurs="1";pureMM.minOccurs="0";vh.latestBindingTime="codeGenerationTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MAX" type="AR:UNLIMITED-INTEGER-VALUE-VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>Max value allowed for the parameter defined.

atpVariation: [RS_ECUC_00084]</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucIntegerParamDef.max";pureMM.maxOccurs="1";pureMM.minOccurs="0";vh.latestBindingTime="codeGenerationTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MIN" type="AR:UNLIMITED-INTEGER-VALUE-VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>Min value allowed for the parameter defined.

atpVariation: [RS_ECUC_00084]</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucIntegerParamDef.min";pureMM.maxOccurs="1";pureMM.minOccurs="0";vh.latestBindingTime="codeGenerationTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucIntegerParamDef -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-INTEGER-PARAM-DEF">
      <xsd:annotation>
         <xsd:documentation>Configuration parameter type for Integer.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucIntegerParamDef";xml.sequenceOffset="0"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ECUC-DEFINITION-ELEMENT"/>
         <xsd:group ref="AR:ECUC-COMMON-ATTRIBUTES"/>
         <xsd:group ref="AR:ECUC-PARAMETER-DEF"/>
         <xsd:group ref="AR:ECUC-INTEGER-PARAM-DEF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class ECUCParameterDefTemplate::EcucLinkerSymbolDef -->
   <xsd:group name="ECUC-LINKER-SYMBOL-DEF">
      <xsd:annotation>
         <xsd:documentation>Configuration parameter type for Linker Symbol Names like those used to specify memory locations of variables and constants.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucLinkerSymbolDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ECUC-LINKER-SYMBOL-DEF-VARIANTS">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucLinkerSymbolDef.EcucLinkerSymbolDefVariant";pureMM.maxOccurs="-1";pureMM.minOccurs="1";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ECUC-LINKER-SYMBOL-DEF-CONDITIONAL" type="AR:ECUC-LINKER-SYMBOL-DEF-CONDITIONAL"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucLinkerSymbolDef -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-LINKER-SYMBOL-DEF">
      <xsd:annotation>
         <xsd:documentation>Configuration parameter type for Linker Symbol Names like those used to specify memory locations of variables and constants.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucLinkerSymbolDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ECUC-DEFINITION-ELEMENT"/>
         <xsd:group ref="AR:ECUC-COMMON-ATTRIBUTES"/>
         <xsd:group ref="AR:ECUC-PARAMETER-DEF"/>
         <xsd:group ref="AR:ECUC-ABSTRACT-STRING-PARAM-DEF"/>
         <xsd:group ref="AR:ECUC-LINKER-SYMBOL-DEF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
   <!-- element group for class ECUCParameterDefTemplate::EcucLinkerSymbolDefConditional -->
   <xsd:group name="ECUC-LINKER-SYMBOL-DEF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucLinkerSymbolDefConditional"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucLinkerSymbolDefConditional.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucLinkerSymbolDefConditional -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-LINKER-SYMBOL-DEF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucLinkerSymbolDefConditional"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ECUC-ABSTRACT-STRING-PARAM-DEF-CONTENT"/>
         <xsd:group ref="AR:ECUC-LINKER-SYMBOL-DEF-CONTENT"/>
         <xsd:group ref="AR:ECUC-LINKER-SYMBOL-DEF-CONDITIONAL"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
   <!-- element group for class ECUCParameterDefTemplate::EcucLinkerSymbolDefContent -->
   <xsd:group name="ECUC-LINKER-SYMBOL-DEF-CONTENT">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucLinkerSymbolDefContent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>

<!-- element group for class ECUCParameterDefTemplate::EcucMultilineStringParamDef -->
   <xsd:group name="ECUC-MULTILINE-STRING-PARAM-DEF">
      <xsd:annotation>
         <xsd:documentation>Configuration parameter type for multiline Strings (including "carriage return").</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucMultilineStringParamDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ECUC-MULTILINE-STRING-PARAM-DEF-VARIANTS">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucMultilineStringParamDef.EcucMultilineStringParamDefVariant";pureMM.maxOccurs="-1";pureMM.minOccurs="1";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ECUC-MULTILINE-STRING-PARAM-DEF-CONDITIONAL" type="AR:ECUC-MULTILINE-STRING-PARAM-DEF-CONDITIONAL"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucMultilineStringParamDef -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-MULTILINE-STRING-PARAM-DEF">
      <xsd:annotation>
         <xsd:documentation>Configuration parameter type for multiline Strings (including "carriage return").</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucMultilineStringParamDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ECUC-DEFINITION-ELEMENT"/>
         <xsd:group ref="AR:ECUC-COMMON-ATTRIBUTES"/>
         <xsd:group ref="AR:ECUC-PARAMETER-DEF"/>
         <xsd:group ref="AR:ECUC-ABSTRACT-STRING-PARAM-DEF"/>
         <xsd:group ref="AR:ECUC-MULTILINE-STRING-PARAM-DEF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
   <!-- element group for class ECUCParameterDefTemplate::EcucMultilineStringParamDefConditional -->
   <xsd:group name="ECUC-MULTILINE-STRING-PARAM-DEF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucMultilineStringParamDefConditional"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucMultilineStringParamDefConditional.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucMultilineStringParamDefConditional -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-MULTILINE-STRING-PARAM-DEF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucMultilineStringParamDefConditional"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ECUC-ABSTRACT-STRING-PARAM-DEF-CONTENT"/>
         <xsd:group ref="AR:ECUC-MULTILINE-STRING-PARAM-DEF-CONTENT"/>
         <xsd:group ref="AR:ECUC-MULTILINE-STRING-PARAM-DEF-CONDITIONAL"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
   <!-- element group for class ECUCParameterDefTemplate::EcucMultilineStringParamDefContent -->
   <xsd:group name="ECUC-MULTILINE-STRING-PARAM-DEF-CONTENT">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucMultilineStringParamDefContent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
 <!-- element group for class ECUCParameterDefTemplate::EcucChoiceReferenceDef -->
   <xsd:group name="ECUC-CHOICE-REFERENCE-DEF">
      <xsd:annotation>
         <xsd:documentation>Specify alternative references where in the ECU Configuration description only one of the specified references will actually be used.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucChoiceReferenceDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="DESTINATION-REFS">
            <xsd:annotation>
               <xsd:documentation>All the possible parameter containers for the reference are specified.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucChoiceReferenceDef.destination";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpUriDef</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="DESTINATION-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:ECUC-CONTAINER-DEF--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucChoiceReferenceDef -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-CHOICE-REFERENCE-DEF">
      <xsd:annotation>
         <xsd:documentation>Specify alternative references where in the ECU Configuration description only one of the specified references will actually be used.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucChoiceReferenceDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ECUC-DEFINITION-ELEMENT"/>
         <xsd:group ref="AR:ECUC-COMMON-ATTRIBUTES"/>
         <xsd:group ref="AR:ECUC-ABSTRACT-REFERENCE-DEF"/>
         <xsd:group ref="AR:ECUC-CHOICE-REFERENCE-DEF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class ECUCParameterDefTemplate::EcucForeignReferenceDef -->
   <xsd:group name="ECUC-FOREIGN-REFERENCE-DEF">
      <xsd:annotation>
         <xsd:documentation>Specify a reference to an XML description of an entity described in another AUTOSAR template.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucForeignReferenceDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="DESTINATION-TYPE" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>The type in the AUTOSAR Metamodel to which instance this reference is allowed to point to.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucForeignReferenceDef.destinationType";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucForeignReferenceDef -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-FOREIGN-REFERENCE-DEF">
      <xsd:annotation>
         <xsd:documentation>Specify a reference to an XML description of an entity described in another AUTOSAR template.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucForeignReferenceDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ECUC-DEFINITION-ELEMENT"/>
         <xsd:group ref="AR:ECUC-COMMON-ATTRIBUTES"/>
         <xsd:group ref="AR:ECUC-ABSTRACT-REFERENCE-DEF"/>
         <xsd:group ref="AR:ECUC-FOREIGN-REFERENCE-DEF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class Chapters::TopicContent -->
   <xsd:group name="TOPIC-CONTENT">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the content of a topic. It is mainly a documentation block, but can also be a table.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TopicContent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixed,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:choice maxOccurs="unbounded" minOccurs="0">
               <xsd:group ref="AR:DOCUMENTATION-BLOCK"/>
            </xsd:choice>
            <xsd:element name="TABLE" type="AR:TABLE">
               <xsd:annotation>
                  <xsd:documentation>Ths represents a table within a topic.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="TopicContent.table";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="postBuild"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
         </xsd:choice>
      </xsd:choice>
   </xsd:group>
   <!-- complex type for class Chapters::TopicContent -->
   <xsd:complexType abstract="false" mixed="false" name="TOPIC-CONTENT">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the content of a topic. It is mainly a documentation block, but can also be a table.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TopicContent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixed,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:TOPIC-CONTENT"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class ECUCParameterDefTemplate::EcucInstanceReferenceDef -->
   <xsd:group name="ECUC-INSTANCE-REFERENCE-DEF">
      <xsd:annotation>
         <xsd:documentation>Specify a reference to an XML description of an entity described in another AUTOSAR template using the INSTANCE REFERENCE semantics.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucInstanceReferenceDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="DESTINATION-CONTEXT" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>The context in the AUTOSAR Metamodel to which' this reference is allowed to point to.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucInstanceReferenceDef.destinationContext";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="DESTINATION-TYPE" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>The type in the AUTOSAR Metamodel to which' instance this reference is allowed to point to.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucInstanceReferenceDef.destinationType";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucInstanceReferenceDef -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-INSTANCE-REFERENCE-DEF">
      <xsd:annotation>
         <xsd:documentation>Specify a reference to an XML description of an entity described in another AUTOSAR template using the INSTANCE REFERENCE semantics.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucInstanceReferenceDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ECUC-DEFINITION-ELEMENT"/>
         <xsd:group ref="AR:ECUC-COMMON-ATTRIBUTES"/>
         <xsd:group ref="AR:ECUC-ABSTRACT-REFERENCE-DEF"/>
         <xsd:group ref="AR:ECUC-INSTANCE-REFERENCE-DEF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class ECUCParameterDefTemplate::EcucReferenceDef -->
   <xsd:group name="ECUC-REFERENCE-DEF">
      <xsd:annotation>
         <xsd:documentation>Specify references within the ECU Configuration Description between parameter containers.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucReferenceDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="DESTINATION-REF">
            <xsd:annotation>
               <xsd:documentation>Exactly one reference to a parameter container is allowed as destination.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucReferenceDef.destination";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpUriDef</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:ECUC-CONTAINER-DEF--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucReferenceDef -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-REFERENCE-DEF">
      <xsd:annotation>
         <xsd:documentation>Specify references within the ECU Configuration Description between parameter containers.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucReferenceDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ECUC-DEFINITION-ELEMENT"/>
         <xsd:group ref="AR:ECUC-COMMON-ATTRIBUTES"/>
         <xsd:group ref="AR:ECUC-ABSTRACT-REFERENCE-DEF"/>
         <xsd:group ref="AR:ECUC-REFERENCE-DEF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
 <!-- element group for class ECUCParameterDefTemplate::EcucQuery -->
   <xsd:group name="ECUC-QUERY">
      <xsd:annotation>
         <xsd:documentation>Defines a query to the ECUC Description.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucQuery"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ECUC-QUERY-EXPRESSION" type="AR:ECUC-QUERY-EXPRESSION">
            <xsd:annotation>
               <xsd:documentation>This is the EcucQuery used in the calculation formula or the condition formula.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucQuery.ecucQueryExpression";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucQuery -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-QUERY">
      <xsd:annotation>
         <xsd:documentation>Defines a query to the ECUC Description.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucQuery"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ECUC-QUERY"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
   <xsd:simpleType name="ECUC-QUERY--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ECUC-QUERY"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class ECUCParameterDefTemplate::EcucConditionFormula -->
   <xsd:group name="ECUC-CONDITION-FORMULA">
      <xsd:annotation>
         <xsd:documentation>This formula must yield a boolean expression depending on ecuc queries. Note that the EcucConditionFormula is a mixed string. Therefore, the properties have the upper multiplicity 1.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucConditionFormula"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="ECUC-QUERY-REF">
               <xsd:annotation>
                  <xsd:documentation>The EcucQuery serves as a argument for the formula.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="EcucConditionFormula.ecucQuery";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
               </xsd:annotation>
               <xsd:complexType>
                  <xsd:simpleContent>
                     <xsd:extension base="AR:REF">
                        <xsd:attribute name="DEST" type="AR:ECUC-QUERY--SUBTYPES-ENUM" use="required"/>
                     </xsd:extension>
                  </xsd:simpleContent>
               </xsd:complexType>
            </xsd:element>
            <xsd:element name="ECUC-QUERY-STRING-REF">
               <xsd:annotation>
                  <xsd:documentation>This indicates that the referenced query shall return a string.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="EcucConditionFormula.ecucQueryString";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
               </xsd:annotation>
               <xsd:complexType>
                  <xsd:simpleContent>
                     <xsd:extension base="AR:REF">
                        <xsd:attribute name="DEST" type="AR:ECUC-QUERY--SUBTYPES-ENUM" use="required"/>
                     </xsd:extension>
                  </xsd:simpleContent>
               </xsd:complexType>
            </xsd:element>
         </xsd:choice>
      </xsd:choice>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucConditionFormula -->
   <xsd:complexType abstract="false" mixed="true" name="ECUC-CONDITION-FORMULA">
      <xsd:annotation>
         <xsd:documentation>This formula must yield a boolean expression depending on ecuc queries. Note that the EcucConditionFormula is a mixed string. Therefore, the properties have the upper multiplicity 1.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucConditionFormula"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:FORMULA-EXPRESSION"/>
         <xsd:group ref="AR:ECUC-CONDITION-FORMULA"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:simpleType name="SW-SYSTEMCONST--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="SW-SYSTEMCONST"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class InlineTextElements::Tt -->
   <xsd:group name="TT">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to express specific technical terms.  The kind of term is denoted in the attribute "type".</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Tt"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="TERM" type="AR:STRING--SIMPLE">
            <xsd:annotation>
               <xsd:documentation>This is the term itself.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Tt.term";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.roleElement="false";xml.roleWrapperElement="false";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- attribute group for class InlineTextElements::Tt -->
   <xsd:attributeGroup name="TT">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to express specific technical terms.  The kind of term is denoted in the attribute "type".</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Tt"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="TYPE" type="AR:NMTOKEN-STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute specifies the type of the technical term. Values are such as "VARIABLE" "CALPRM". It is no longer an enum in order to support process specific extensions.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Tt.type";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class InlineTextElements::Tt -->
   <xsd:complexType name="TT">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to express specific technical terms.  The kind of term is denoted in the attribute "type".</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Tt"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
            <xsd:attributeGroup ref="AR:TT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
<!-- element group for class InlineTextElements::EmphasisText -->
   <xsd:group name="EMPHASIS-TEXT">
      <xsd:annotation>
         <xsd:documentation>This is an emphasized text. As a compromise it contains some rendering oriented attributes such as color and font.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EmphasisText"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="SUB" type="AR:SUPSCRIPT">
               <xsd:annotation>
                  <xsd:documentation>this is subscript text</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="EmphasisText.sub";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="SUP" type="AR:SUPSCRIPT">
               <xsd:annotation>
                  <xsd:documentation>This is superscript text</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="EmphasisText.sup";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="TT" type="AR:TT">
               <xsd:annotation>
                  <xsd:documentation>This is a technical term.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="EmphasisText.tt";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
         </xsd:choice>
      </xsd:choice>
   </xsd:group>
   <!-- attribute group for class InlineTextElements::EmphasisText -->
   <xsd:attributeGroup name="EMPHASIS-TEXT">
      <xsd:annotation>
         <xsd:documentation>This is an emphasized text. As a compromise it contains some rendering oriented attributes such as color and font.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EmphasisText"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="COLOR" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This allows to recommend a color of the emphasis. It is specified bases on 6 digits RGB hex-code.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="EmphasisText.color";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="FONT" type="AR:E-ENUM-FONT--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This specifies the font style in which the emphasized text shall be rendered.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="EmphasisText.font";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="TYPE" type="AR:E-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicates how the text may be emphasized. Note that this is only a proposal which can be overridden or ignored by particular formatting engines. Default is BOLD.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="EmphasisText.type";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class InlineTextElements::EmphasisText -->
   <xsd:complexType abstract="false" mixed="true" name="EMPHASIS-TEXT">
      <xsd:annotation>
         <xsd:documentation>This is an emphasized text. As a compromise it contains some rendering oriented attributes such as color and font.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EmphasisText"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:EMPHASIS-TEXT"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:EMPHASIS-TEXT"/>
   </xsd:complexType>
<xsd:complexType name="SUPSCRIPT">
      <xsd:annotation>
         <xsd:documentation>This is text which is rendered superscript or subscript depending on the role.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Superscript";xml.xsd.customType="SUPSCRIPT";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SUPSCRIPT--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="SUPSCRIPT--SIMPLE">
      <xsd:restriction base="xsd:string"/>
   </xsd:simpleType>
<!-- element group for class InlineTextElements::IndexEntry -->
   <xsd:group name="INDEX-ENTRY">
      <xsd:annotation>
         <xsd:documentation>This class represents an index entry.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="IndexEntry"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="SUP" type="AR:SUPSCRIPT">
               <xsd:annotation>
                  <xsd:documentation>This is superscript text.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="IndexEntry.sup";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="30"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="SUB" type="AR:SUPSCRIPT">
               <xsd:annotation>
                  <xsd:documentation>This is subscript text.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="IndexEntry.sub";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="40"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
         </xsd:choice>
      </xsd:choice>
   </xsd:group>
   <!-- complex type for class InlineTextElements::IndexEntry -->
   <xsd:complexType abstract="false" mixed="true" name="INDEX-ENTRY">
      <xsd:annotation>
         <xsd:documentation>This class represents an index entry.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="IndexEntry"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:INDEX-ENTRY"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:group name="BR">
      <xsd:annotation>
         <xsd:documentation>This element is the same as function here as in a HTML document i.e. it forces a line break.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Br"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class InlineTextElements::Br -->
   <xsd:complexType abstract="false" mixed="false" name="BR">
      <xsd:annotation>
         <xsd:documentation>This element is the same as function here as in a HTML document i.e. it forces a line break.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Br"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:BR"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class Chapters::Chapter -->
   <xsd:group name="CHAPTER">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents a chapter of a document. Chapters are the primary structuring element in documentation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Chapter"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:choice maxOccurs="1" minOccurs="0">
            <xsd:group ref="AR:CHAPTER-MODEL"/>
         </xsd:choice>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Chapter.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- attribute group for class Chapters::Chapter -->
   <xsd:attributeGroup name="CHAPTER">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents a chapter of a document. Chapters are the primary structuring element in documentation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Chapter"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="HELP-ENTRY" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This specifies an entry point in an online help system to be linked with the parent class. The syntax shall be defined by the applied help system respectively help system generator.

Maybe it is a concatenated Identifier, but as of now we leave it as an arbitrary string.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Chapter.helpEntry";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class Chapters::Chapter -->
   <xsd:complexType abstract="false" mixed="false" name="CHAPTER">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents a chapter of a document. Chapters are the primary structuring element in documentation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Chapter"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
         <xsd:group ref="AR:PAGINATEABLE"/>
         <xsd:group ref="AR:CHAPTER"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
      <xsd:attributeGroup ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
      <xsd:attributeGroup ref="AR:PAGINATEABLE"/>
      <xsd:attributeGroup ref="AR:CHAPTER"/>
   </xsd:complexType>
<!-- element group for class BlueprintFormula::BlueprintFormula -->
   <xsd:group name="BLUEPRINT-FORMULA">
      <xsd:annotation>
         <xsd:documentation>This class express the extension of the Formula Language to provide formalized blueprint-Value resp. blueprintCondition.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BlueprintFormula"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="ECUC-QUERY-REF">
               <xsd:annotation>
                  <xsd:documentation>The EcucQuery serves as a argument for the formula.</xsd:documentation>
                  <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="BlueprintFormula.ecucQuery";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
               </xsd:annotation>
               <xsd:complexType>
                  <xsd:simpleContent>
                     <xsd:extension base="AR:REF">
                        <xsd:attribute name="DEST" type="AR:ECUC-QUERY--SUBTYPES-ENUM" use="required"/>
                     </xsd:extension>
                  </xsd:simpleContent>
               </xsd:complexType>
            </xsd:element>
            <xsd:element name="ECUC-REF">
               <xsd:annotation>
                  <xsd:documentation>The EcucDefinitionElement serves as a argument for the formular.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="BlueprintFormula.ecuc";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
               </xsd:annotation>
               <xsd:complexType>
                  <xsd:simpleContent>
                     <xsd:extension base="AR:REF">
                        <xsd:attribute name="DEST" type="AR:ECUC-DEFINITION-ELEMENT--SUBTYPES-ENUM" use="required"/>
                     </xsd:extension>
                  </xsd:simpleContent>
               </xsd:complexType>
            </xsd:element>
            <xsd:element name="VERBATIM" type="AR:MULTI-LANGUAGE-VERBATIM">
               <xsd:annotation>
                  <xsd:documentation>This represents an informal term in the expression as verbatim text. Note that the result of this is same as formula keyword "undefined".</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="BlueprintFormula.verbatim";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
         </xsd:choice>
      </xsd:choice>
   </xsd:group>
   <!-- complex type for class BlueprintFormula::BlueprintFormula -->
   <xsd:complexType abstract="false" mixed="true" name="BLUEPRINT-FORMULA">
      <xsd:annotation>
         <xsd:documentation>This class express the extension of the Formula Language to provide formalized blueprint-Value resp. blueprintCondition.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BlueprintFormula"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:FORMULA-EXPRESSION"/>
         <xsd:group ref="AR:SW-SYSTEMCONST-DEPENDENT-FORMULA"/>
         <xsd:group ref="AR:BLUEPRINT-FORMULA"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class MsrQuery::MsrQueryChapter -->
   <xsd:group name="MSR-QUERY-CHAPTER">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to express a query which yields a set of chapters as a result.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryChapter"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="MSR-QUERY-PROPS" type="AR:MSR-QUERY-PROPS">
            <xsd:annotation>
               <xsd:documentation>This is argument and properties of the chapter query.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryChapter.msrQueryProps";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MSR-QUERY-RESULT-CHAPTER" type="AR:MSR-QUERY-RESULT-CHAPTER">
            <xsd:annotation>
               <xsd:documentation>This represents the result of the query.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryChapter.msrQueryResultChapter";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class MsrQuery::MsrQueryChapter -->
   <xsd:complexType abstract="false" mixed="false" name="MSR-QUERY-CHAPTER">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to express a query which yields a set of chapters as a result.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryChapter"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
         <xsd:group ref="AR:PAGINATEABLE"/>
         <xsd:group ref="AR:MSR-QUERY-CHAPTER"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
      <xsd:attributeGroup ref="AR:PAGINATEABLE"/>
   </xsd:complexType>
<!-- element group for class MsrQuery::MsrQueryTopic1 -->
   <xsd:group name="MSR-QUERY-TOPIC-1">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to specify a query which yields a set of topics as a result.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryTopic1"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="MSR-QUERY-PROPS" type="AR:MSR-QUERY-PROPS">
            <xsd:annotation>
               <xsd:documentation>This is argument and properties of the topic query.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryTopic1.msrQueryProps";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MSR-QUERY-RESULT-TOPIC-1" type="AR:MSR-QUERY-RESULT-TOPIC-1">
            <xsd:annotation>
               <xsd:documentation>This represents the result of the query.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryTopic1.msrQueryResultTopic1";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class MsrQuery::MsrQueryTopic1 -->
   <xsd:complexType abstract="false" mixed="false" name="MSR-QUERY-TOPIC-1">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to specify a query which yields a set of topics as a result.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryTopic1"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
         <xsd:group ref="AR:PAGINATEABLE"/>
         <xsd:group ref="AR:MSR-QUERY-TOPIC-1"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
      <xsd:attributeGroup ref="AR:PAGINATEABLE"/>
   </xsd:complexType>
<!-- element group for class Chapters::Topic1 -->
   <xsd:group name="TOPIC-1">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents a topic of a documentation. Topics are similar to chapters but they cannot be nested. 

They also do not appear in the table of content. Topics can be used to produce intermediate headlines thus structuring a chapter internally.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Topic1"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:choice maxOccurs="1" minOccurs="0">
            <xsd:group ref="AR:TOPIC-CONTENT-OR-MSR-QUERY"/>
         </xsd:choice>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Topic1.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- attribute group for class Chapters::Topic1 -->
   <xsd:attributeGroup name="TOPIC-1">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents a topic of a documentation. Topics are similar to chapters but they cannot be nested. 

They also do not appear in the table of content. Topics can be used to produce intermediate headlines thus structuring a chapter internally.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Topic1"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="HELP-ENTRY" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This specifies an entry point in an online help system to be linked with the parent class. The syntax must be defined by the applied help system respectively help system generator.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Topic1.helpEntry";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class Chapters::Topic1 -->
   <xsd:complexType abstract="false" mixed="false" name="TOPIC-1">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents a topic of a documentation. Topics are similar to chapters but they cannot be nested. 

They also do not appear in the table of content. Topics can be used to produce intermediate headlines thus structuring a chapter internally.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Topic1"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
         <xsd:group ref="AR:PAGINATEABLE"/>
         <xsd:group ref="AR:TOPIC-1"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
      <xsd:attributeGroup ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
      <xsd:attributeGroup ref="AR:PAGINATEABLE"/>
      <xsd:attributeGroup ref="AR:TOPIC-1"/>
   </xsd:complexType>
<!-- element group for class GerneralParameters::Prms -->
   <xsd:group name="PRMS">
      <xsd:annotation>
         <xsd:documentation>This metaclass represents the ability to specify a parameter table. It can be used e.g. to specify parameter tables in a data sheet.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Prms"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="LABEL" type="AR:MULTILANGUAGE-LONG-NAME">
            <xsd:annotation>
               <xsd:documentation>This represents the caption of the parameter table.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Prms.label";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="PRM" type="AR:GENERAL-PARAMETER">
            <xsd:annotation>
               <xsd:documentation>This represents one particular parameter in the the table.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Prms.prm";pureMM.maxOccurs="-1";pureMM.minOccurs="1";xml.roleElement="true";xml.roleWrapperElement="false";xml.sequenceOffset="30";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class GerneralParameters::Prms -->
   <xsd:complexType abstract="false" mixed="false" name="PRMS">
      <xsd:annotation>
         <xsd:documentation>This metaclass represents the ability to specify a parameter table. It can be used e.g. to specify parameter tables in a data sheet.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Prms"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
         <xsd:group ref="AR:PAGINATEABLE"/>
         <xsd:group ref="AR:PRMS"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
      <xsd:attributeGroup ref="AR:PAGINATEABLE"/>
   </xsd:complexType>
<!-- element group for class OasisExchangeTable::Table -->
   <xsd:group name="TABLE">
      <xsd:annotation>
         <xsd:documentation>This class implements an exchange table according to OASIS Technical Resolution TR 9503:1995.

http://www.oasis-open.org/specs/a503.htm</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Table"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="TABLE-CAPTION" type="AR:CAPTION">
            <xsd:annotation>
               <xsd:documentation>This element specifies the table heading.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Table.tableCaption";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="TGROUP" type="AR:TGROUP">
            <xsd:annotation>
               <xsd:documentation>A table can be built of individual segments. Such a segment is called tgroup.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Table.tgroup";pureMM.maxOccurs="-1";pureMM.minOccurs="1";xml.roleElement="true";xml.roleWrapperElement="false";xml.sequenceOffset="30";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Table.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- attribute group for class OasisExchangeTable::Table -->
   <xsd:attributeGroup name="TABLE">
      <xsd:annotation>
         <xsd:documentation>This class implements an exchange table according to OASIS Technical Resolution TR 9503:1995.

http://www.oasis-open.org/specs/a503.htm</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Table"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="COLSEP" type="AR:TABLE-SEPARATOR-STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicates if by default a line should be drawn between the columns of this table.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Table.colsep";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="FLOAT" type="AR:FLOAT-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicate whether it is allowed to break the element.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Table.float";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="FRAME" type="AR:FRAME-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Used to defined the frame line around a table.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Table.frame";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="HELP-ENTRY" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This specifies an entry point in an online help system to be linked with the parent class. The syntax must be defined by the applied help system respectively help system generator.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Table.helpEntry";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ORIENT" type="AR:ORIENT-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicate whether a table should be represented as landscape or portrait. 
- land : landscape
- port : portrait</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Table.orient";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="PGWIDE" type="AR:NMTOKEN-STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Used to indicate wether the figure should take the complete page width (value = "pgwide") or not (value = "noPgwide").</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Table.pgwide";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ROWSEP" type="AR:TABLE-SEPARATOR-STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicates if by default  a line should be drawn at the bottom of table rows.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Table.rowsep";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="TABSTYLE" type="AR:NMTOKEN-STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicates an external table style.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Table.tabstyle";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class OasisExchangeTable::Table -->
   <xsd:complexType abstract="false" mixed="false" name="TABLE">
      <xsd:annotation>
         <xsd:documentation>This class implements an exchange table according to OASIS Technical Resolution TR 9503:1995.

http://www.oasis-open.org/specs/a503.htm</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Table"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
         <xsd:group ref="AR:PAGINATEABLE"/>
         <xsd:group ref="AR:TABLE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
      <xsd:attributeGroup ref="AR:PAGINATEABLE"/>
      <xsd:attributeGroup ref="AR:TABLE"/>
   </xsd:complexType>
<!-- element group for class MsrQuery::MsrQueryP1 -->
   <xsd:group name="MSR-QUERY-P-1">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to express a query which yields the content of a topic as a result.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryP1"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="MSR-QUERY-PROPS" type="AR:MSR-QUERY-PROPS">
            <xsd:annotation>
               <xsd:documentation>This is argument and properties of the paragraph query.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryP1.msrQueryProps";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MSR-QUERY-RESULT-P-1" type="AR:TOPIC-CONTENT">
            <xsd:annotation>
               <xsd:documentation>This represents the result of the query.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryP1.msrQueryResultP1";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class MsrQuery::MsrQueryP1 -->
   <xsd:complexType abstract="false" mixed="false" name="MSR-QUERY-P-1">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to express a query which yields the content of a topic as a result.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryP1"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
         <xsd:group ref="AR:PAGINATEABLE"/>
         <xsd:group ref="AR:MSR-QUERY-P-1"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
      <xsd:attributeGroup ref="AR:PAGINATEABLE"/>
   </xsd:complexType>
<!-- element group for class MsrQuery::MsrQueryProps -->
   <xsd:group name="MSR-QUERY-PROPS">
      <xsd:annotation>
         <xsd:documentation>This metaclass represents the ability to specificy a query which yields some documentation text. The qualities of the result are determined by the context in which the query is used.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryProps"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="MSR-QUERY-NAME" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>This element specifies the name of the MSR-QUERY triggered.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryProps.msrQueryName";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="MSR-QUERY-ARG" type="AR:MSR-QUERY-ARG">
            <xsd:annotation>
               <xsd:documentation>This element specifies an argument within an MsrQuery.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryProps.msrQueryArg";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.roleElement="true";xml.roleWrapperElement="false";xml.sequenceOffset="30";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="COMMENT" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>This element contains a commentary in text form.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryProps.comment";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="40"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class MsrQuery::MsrQueryProps -->
   <xsd:complexType abstract="false" mixed="false" name="MSR-QUERY-PROPS">
      <xsd:annotation>
         <xsd:documentation>This metaclass represents the ability to specificy a query which yields some documentation text. The qualities of the result are determined by the context in which the query is used.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryProps"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:MSR-QUERY-PROPS"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class ListElements::Item -->
   <xsd:group name="ITEM">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents one particular item in a list.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Item"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:choice maxOccurs="1" minOccurs="0">
            <xsd:group ref="AR:DOCUMENTATION-BLOCK"/>
         </xsd:choice>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Item.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ListElements::Item -->
   <xsd:complexType abstract="false" mixed="false" name="ITEM">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents one particular item in a list.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Item"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
         <xsd:group ref="AR:PAGINATEABLE"/>
         <xsd:group ref="AR:ITEM"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
      <xsd:attributeGroup ref="AR:PAGINATEABLE"/>
   </xsd:complexType>
 <!-- element group for class ListElements::DefItem -->
   <xsd:group name="DEF-ITEM">
      <xsd:annotation>
         <xsd:documentation>This represents an entry in a definition list. The defined item is specified using shortName and longName.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DefItem"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="DEF" type="AR:DOCUMENTATION-BLOCK">
            <xsd:annotation>
               <xsd:documentation>This represents the definition part of the DefItem.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="DefItem.def";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="DefItem.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- attribute group for class ListElements::DefItem -->
   <xsd:attributeGroup name="DEF-ITEM">
      <xsd:annotation>
         <xsd:documentation>This represents an entry in a definition list. The defined item is specified using shortName and longName.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DefItem"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="HELP-ENTRY" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This specifies an entry point in an online help system to be linked with the parent class. The syntax must be defined by the applied help system respectively help system generator.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="DefItem.helpEntry";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class ListElements::DefItem -->
   <xsd:complexType abstract="false" mixed="false" name="DEF-ITEM">
      <xsd:annotation>
         <xsd:documentation>This represents an entry in a definition list. The defined item is specified using shortName and longName.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DefItem"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
         <xsd:group ref="AR:PAGINATEABLE"/>
         <xsd:group ref="AR:DEF-ITEM"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
      <xsd:attributeGroup ref="AR:PAGINATEABLE"/>
      <xsd:attributeGroup ref="AR:DEF-ITEM"/>
   </xsd:complexType>
<!-- element group for class ListElements::LabeledItem -->
   <xsd:group name="LABELED-ITEM">
      <xsd:annotation>
         <xsd:documentation>this represents an item of a labeled list.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LabeledItem"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ITEM-LABEL" type="AR:MULTI-LANGUAGE-OVERVIEW-PARAGRAPH">
            <xsd:annotation>
               <xsd:documentation>This is the label of the item.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LabeledItem.itemLabel";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:choice maxOccurs="1" minOccurs="0">
            <xsd:group ref="AR:DOCUMENTATION-BLOCK"/>
         </xsd:choice>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LabeledItem.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- attribute group for class ListElements::LabeledItem -->
   <xsd:attributeGroup name="LABELED-ITEM">
      <xsd:annotation>
         <xsd:documentation>this represents an item of a labeled list.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LabeledItem"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="HELP-ENTRY" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This specifies an entry point in an online help system to be linked with the parent class. The syntax must be defined by the applied help system respectively help system generator.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="LabeledItem.helpEntry";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class ListElements::LabeledItem -->
   <xsd:complexType abstract="false" mixed="false" name="LABELED-ITEM">
      <xsd:annotation>
         <xsd:documentation>this represents an item of a labeled list.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LabeledItem"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
         <xsd:group ref="AR:PAGINATEABLE"/>
         <xsd:group ref="AR:LABELED-ITEM"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
      <xsd:attributeGroup ref="AR:PAGINATEABLE"/>
      <xsd:attributeGroup ref="AR:LABELED-ITEM"/>
   </xsd:complexType>
<!-- element group for class ListElements::IndentSample -->
   <xsd:group name="INDENT-SAMPLE">
      <xsd:annotation>
         <xsd:documentation>This represents the ability to specify indentation of a labeled list by providing a sample content. This content can be measured by the rendering system in order to determine the width of indentation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="IndentSample"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="L-2" type="AR:L-OVERVIEW-PARAGRAPH">
            <xsd:annotation>
               <xsd:documentation>This represents the indent sample in one particular language.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="IndentSample.l2";pureMM.maxOccurs="-1";pureMM.minOccurs="1";xml.roleElement="true";xml.roleWrapperElement="false";xml.sequenceOffset="20";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- attribute group for class ListElements::IndentSample -->
   <xsd:attributeGroup name="INDENT-SAMPLE">
      <xsd:annotation>
         <xsd:documentation>This represents the ability to specify indentation of a labeled list by providing a sample content. This content can be measured by the rendering system in order to determine the width of indentation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="IndentSample"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="ITEM-LABEL-POS" type="AR:ITEM-LABEL-POS-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The position of the label in case the label is too long. The default is  "NO-NEWLINE"</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="IndentSample.itemLabelPos";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class ListElements::IndentSample -->
   <xsd:complexType abstract="false" mixed="false" name="INDENT-SAMPLE">
      <xsd:annotation>
         <xsd:documentation>This represents the ability to specify indentation of a labeled list by providing a sample content. This content can be measured by the rendering system in order to determine the width of indentation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="IndentSample"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:INDENT-SAMPLE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:INDENT-SAMPLE"/>
   </xsd:complexType>
<!-- element group for class Figure::LGraphic -->
   <xsd:group name="L-GRAPHIC">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the figure in one particular language.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LGraphic"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="GRAPHIC" type="AR:GRAPHIC">
            <xsd:annotation>
               <xsd:documentation>Reference to the actual graphic represented in the figure.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LGraphic.graphic";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MAP" type="AR:MAP">
            <xsd:annotation>
               <xsd:documentation>Image maps enable authors to specify regions of an image or object and assign a specific action to each region.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="LGraphic.map";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Figure::LGraphic -->
   <xsd:complexType abstract="false" mixed="false" name="L-GRAPHIC">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the figure in one particular language.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LGraphic"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:LANGUAGE-SPECIFIC"/>
         <xsd:group ref="AR:L-GRAPHIC"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:LANGUAGE-SPECIFIC"/>
   </xsd:complexType>
<!-- element group for class BlockElements::Caption -->
   <xsd:group name="CAPTION">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to express a caption which is a title, and a shortName.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Caption"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class BlockElements::Caption -->
   <xsd:complexType abstract="false" mixed="false" name="CAPTION">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to express a caption which is a title, and a shortName.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Caption"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:CAPTION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class AbstractStructure::AtpInstanceRef -->
   <xsd:group name="ATP-INSTANCE-REF">
      <xsd:annotation>
         <xsd:documentation>An M0 instance of a classifier may be represented as a tree rooted at that instance, where under each node come the sub-trees representing the instances which act as features under that node. 

An instance ref specifies a navigation path from any M0 tree-instance of the base (which is a classifier) to a leaf (which is an instance of the target).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AtpInstanceRef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject,instanceRef</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <!-- Association <<atpDerived>>atpBase skipped -->
         <!-- Association <<atpDerived>>atpContextElement skipped -->
         <!-- Association <<atpDerived>>atpTarget skipped -->
      </xsd:sequence>
   </xsd:group>
<xsd:simpleType name="E-ENUM-FONT--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DEFAULT">
            <xsd:annotation>
               <xsd:documentation>The emphasis uses the default font.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EEnumFont.default"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MONO">
            <xsd:annotation>
               <xsd:documentation>The emphasis uses a monospaced font.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EEnumFont.mono"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="E-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BOLD">
            <xsd:annotation>
               <xsd:documentation>The emphasis is preferably represented in boldface font.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EEnum.bold"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BOLDITALIC">
            <xsd:annotation>
               <xsd:documentation>The emphasis is preferably represented in boldface plus italic font.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EEnum.bolditalic"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ITALIC">
            <xsd:annotation>
               <xsd:documentation>The emphasis is preferably represented in italic font.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EEnum.italic"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PLAIN">
            <xsd:annotation>
               <xsd:documentation>The emphasis has no specific rendering. It is used if e.g. semantic information is applied to the emphasis text.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EEnum.plain"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
 <xsd:simpleType name="TABLE-SEPARATOR-STRING--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[0-1]"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="ORIENT-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="LAND">
            <xsd:annotation>
               <xsd:documentation>This indicates that the table is rendered in landscape which results in turning the table 90 degree clockwise.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="OrientEnum.land"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PORT">
            <xsd:annotation>
               <xsd:documentation>This indicates that the table is rendered in portrait, which is the regular text flow.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="OrientEnum.port"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="ITEM-LABEL-POS-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NEWLINE">
            <xsd:annotation>
               <xsd:documentation>The label is renders in a new line.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ItemLabelPosEnum.newline"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NEWLINE-IF-NECESSARY">
            <xsd:annotation>
               <xsd:documentation>The label is rendered in a new line if it is longer than the indentation.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ItemLabelPosEnum.newlineIfNecessary"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NO-NEWLINE">
            <xsd:annotation>
               <xsd:documentation>The label is rendered in one line with the item even if it is longer than the indentation.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ItemLabelPosEnum.noNewline"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class InlineTextElements::Xref -->
   <xsd:group name="XREF">
      <xsd:annotation>
         <xsd:documentation>This represents a cross-reference within documentation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Xref"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="LABEL-1" type="AR:SINGLE-LANGUAGE-LONG-NAME">
            <xsd:annotation>
               <xsd:documentation>This allows to specify a replacement text which shall be rendered if showContent is selected.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Xref.label1";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="REFERRABLE-REF">
            <xsd:annotation>
               <xsd:documentation>This establishes the reference in Autosar style</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Xref.referrable";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:REFERRABLE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- attribute group for class InlineTextElements::Xref -->
   <xsd:attributeGroup name="XREF">
      <xsd:annotation>
         <xsd:documentation>This represents a cross-reference within documentation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Xref"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="RESOLUTION-POLICY" type="AR:RESOLUTION-POLICY-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicates if the content of the xref element follow a dedicated resolution policy. The default is "NO-SLOPPY".</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Xref.resolutionPolicy";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="SHOW-CONTENT" type="AR:SHOW-CONTENT-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicates if the content of the xref element shall be rendered. The default is "NO-SHOW-CONTENT".</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Xref.showContent";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="SHOW-RESOURCE-ALIAS-NAME" type="AR:SHOW-RESOURCE-ALIAS-NAME-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This indicates if the alias names of the referenced objects shall be rendered. This means this is some kind of backward searching: look whether there is an  alias for the referenced object, if yes, print it. 

If there is more than one AliasNameSet, Xref might render all of those.

If no alilas is found and showResourceShortName is set to NoShowShortName, then the shortName of the reference target shall be displayed. By this showResourceAliasName is similar to showResourceShortName but shows the aliasName instead of the shortName.

Default is NO-SHOW-ALIAS-NAME.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Xref.showResourceAliasName";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="SHOW-RESOURCE-CATEGORY" type="AR:SHOW-RESOURCE-CATEGORY-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicates if the category of the referenced resource shall be rendered. Default is "NO-SHOW-CATEGORY".</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Xref.showResourceCategory";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="SHOW-RESOURCE-LONG-NAME" type="AR:SHOW-RESOURCE-LONG-NAME-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicates if the longName of the referenced resource shall be rendered. Default is "SHOW-LONG-NAME".</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Xref.showResourceLongName";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="SHOW-RESOURCE-NUMBER" type="AR:SHOW-RESOURCE-NUMBER-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicates if the Number of the referenced resource shall be shown. Default is "SHOW--NUMBER"</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Xref.showResourceNumber";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="SHOW-RESOURCE-PAGE" type="AR:SHOW-RESOURCE-PAGE-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicates if the page number of the referenced resource shall be shown. Default is "SHOW-PAGE"</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Xref.showResourcePage";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="SHOW-RESOURCE-SHORT-NAME" type="AR:SHOW-RESOURCE-SHORT-NAME-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicates if the shortJName of the referenced resource shall be shown. Default is "SHOW-SHORT-NAME"</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Xref.showResourceShortName";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="SHOW-RESOURCE-TYPE" type="AR:SHOW-RESOURCE-TYPE-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicates if the type of the referenced Resource shall be shown. Default is "SHOW-TYPE"</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Xref.showResourceType";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="SHOW-SEE" type="AR:SHOW-SEE-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicates if the word "see " shall be shown before the reference. Default is "NO-SHOW-SEE". Note that this is there for compatibility reasons only.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Xref.showSee";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class InlineTextElements::Xref -->
   <xsd:complexType abstract="false" mixed="false" name="XREF">
      <xsd:annotation>
         <xsd:documentation>This represents a cross-reference within documentation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Xref"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:XREF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:XREF"/>
   </xsd:complexType>
<!-- element group for class InlineTextElements::XrefTarget -->
   <xsd:group name="XREF-TARGET">
      <xsd:annotation>
         <xsd:documentation>This element specifies a reference target which can be scattered throughout the text.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="XrefTarget"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class InlineTextElements::XrefTarget -->
   <xsd:complexType abstract="false" mixed="false" name="XREF-TARGET">
      <xsd:annotation>
         <xsd:documentation>This element specifies a reference target which can be scattered throughout the text.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="XrefTarget"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:SINGLE-LANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:XREF-TARGET"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class InlineTextElements::Std -->
   <xsd:group name="STD">
      <xsd:annotation>
         <xsd:documentation>This represents a reference to external standards.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Std"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="SUBTITLE" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>This represents the subtitle of the standard.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Std.subtitle";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="STATE" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>This represents  version and state of a standard. Kept as a string.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Std.state";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="40"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="DATE" type="AR:DATE">
            <xsd:annotation>
               <xsd:documentation>This element specifies the release date of the external standard if applicable.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Std.date";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="50"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="URL" type="AR:URL">
            <xsd:annotation>
               <xsd:documentation>This represents the URL of the standard.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Std.url";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="60"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="POSITION" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>This represents the reference to the relevant positions of a standard. Kept as a string.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Std.position";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="70"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class InlineTextElements::Std -->
   <xsd:complexType abstract="false" mixed="false" name="STD">
      <xsd:annotation>
         <xsd:documentation>This represents a reference to external standards.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Std"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:SINGLE-LANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:STD"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class InlineTextElements::Xdoc -->
   <xsd:group name="XDOC">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to refer to an external document which can be rendered as printed matter.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Xdoc"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="NUMBER" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>This represents document number of an external document that is referenced. Kept as a string.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Xdoc.number";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="STATE" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>This represents version and state of the external document. Kept as a string.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Xdoc.state";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="40"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="DATE" type="AR:DATE">
            <xsd:annotation>
               <xsd:documentation>This element specifies the release date of the external document if applicable.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Xdoc.date";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="50"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="PUBLISHER" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>This represents the publisher of an external document that is being referenced. Kept as a string.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Xdoc.publisher";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="60"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="URL" type="AR:URL">
            <xsd:annotation>
               <xsd:documentation>This specifies the URL of the external document.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Xdoc.url";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="70"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="POSITION" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>This represents the reference to the relevant positions of a standard. Kept as a string.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Xdoc.position";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="80"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class InlineTextElements::Xdoc -->
   <xsd:complexType abstract="false" mixed="false" name="XDOC">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to refer to an external document which can be rendered as printed matter.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Xdoc"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:SINGLE-LANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:XDOC"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>

<!-- element group for class InlineTextElements::Xfile -->
   <xsd:group name="XFILE">
      <xsd:annotation>
         <xsd:documentation>This represents to reference an external file within a documentation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Xfile"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="URL" type="AR:URL">
            <xsd:annotation>
               <xsd:documentation>This represents the URL of the external file.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Xfile.url";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TOOL" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>This element describes the tool which was used to generate the corresponding Xfile . Kept as a string since no specific syntax can be provided to denote a tool.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Xfile.tool";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="50"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TOOL-VERSION" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>This element describes the tool version which was used to generate the corresponding xfile. Kept as a string, since no specific syntax can be specified.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Xfile.toolVersion";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="60"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class InlineTextElements::Xfile -->
   <xsd:complexType abstract="false" mixed="false" name="XFILE">
      <xsd:annotation>
         <xsd:documentation>This represents to reference an external file within a documentation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Xfile"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:SINGLE-LANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:XFILE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:complexType name="POSITIVE-INTEGER">
      <xsd:annotation>
         <xsd:documentation>This is a positive integer which can be denoted in decimal, octal and hexadecimal.
The value is between 0 and 4294967295.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PositiveInteger";xml.xsd.customType="POSITIVE-INTEGER";xml.xsd.pattern="[1-9][0-9]*|0x[0-9a-f]+|0[0-7]*|0b[0-1]+";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:POSITIVE-INTEGER--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
<xsd:simpleType name="ECUC-PARAMETER-DEF--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ECUC-ABSTRACT-STRING-PARAM-DEF"/>
         <xsd:enumeration value="ECUC-ADD-INFO-PARAM-DEF"/>
         <xsd:enumeration value="ECUC-BOOLEAN-PARAM-DEF"/>
         <xsd:enumeration value="ECUC-ENUMERATION-PARAM-DEF"/>
         <xsd:enumeration value="ECUC-FLOAT-PARAM-DEF"/>
         <xsd:enumeration value="ECUC-FUNCTION-NAME-DEF"/>
         <xsd:enumeration value="ECUC-INTEGER-PARAM-DEF"/>
         <xsd:enumeration value="ECUC-LINKER-SYMBOL-DEF"/>
         <xsd:enumeration value="ECUC-MULTILINE-STRING-PARAM-DEF"/>
         <xsd:enumeration value="ECUC-PARAMETER-DEF"/>
         <xsd:enumeration value="ECUC-STRING-PARAM-DEF"/>
      </xsd:restriction>
   </xsd:simpleType>

<xsd:simpleType name="SYSTEM--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="SYSTEM"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class ECUCDescriptionTemplate::EcucModuleConfigurationValuesRefConditional -->
   <xsd:group name="ECUC-MODULE-CONFIGURATION-VALUES-REF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucModuleConfigurationValues"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ECUC-MODULE-CONFIGURATION-VALUES-REF">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucModuleConfigurationValues";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:ECUC-MODULE-CONFIGURATION-VALUES--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucModuleConfigurationValuesRefConditional.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCDescriptionTemplate::EcucModuleConfigurationValuesRefConditional -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-MODULE-CONFIGURATION-VALUES-REF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucModuleConfigurationValues"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ECUC-MODULE-CONFIGURATION-VALUES-REF-CONDITIONAL"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class VariantHandling::ConditionByFormula -->
   <xsd:group name="CONDITION-BY-FORMULA">
      <xsd:annotation>
         <xsd:documentation>This class represents a condition which is computed based on system constants according to the specified expression. The expected result is considered as boolean value.

The result of the expression is interpreted as a condition. 

* "0" represents "false";  

* a value other than zero is considered "true"</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ConditionByFormula"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- attribute group for class VariantHandling::ConditionByFormula -->
   <xsd:attributeGroup name="CONDITION-BY-FORMULA">
      <xsd:annotation>
         <xsd:documentation>This class represents a condition which is computed based on system constants according to the specified expression. The expected result is considered as boolean value.

The result of the expression is interpreted as a condition. 

* "0" represents "false";  

* a value other than zero is considered "true"</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ConditionByFormula"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="BINDING-TIME" type="AR:BINDING-TIME-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute specifies the point in time when condition may be evaluated at earliest. At this point in time all referenced system constants shall have a value.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="ConditionByFormula.bindingTime";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class VariantHandling::ConditionByFormula -->
   <xsd:complexType abstract="false" mixed="true" name="CONDITION-BY-FORMULA">
      <xsd:annotation>
         <xsd:documentation>This class represents a condition which is computed based on system constants according to the specified expression. The expected result is considered as boolean value.

The result of the expression is interpreted as a condition. 

* "0" represents "false";  

* a value other than zero is considered "true"</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ConditionByFormula"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:FORMULA-EXPRESSION"/>
         <xsd:group ref="AR:SW-SYSTEMCONST-DEPENDENT-FORMULA"/>
         <xsd:group ref="AR:CONDITION-BY-FORMULA"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:CONDITION-BY-FORMULA"/>
   </xsd:complexType>
<!-- element group for class VariantHandling::PostBuildVariantCondition -->
   <xsd:group name="POST-BUILD-VARIANT-CONDITION">
      <xsd:annotation>
         <xsd:documentation>This class specifies the value which must be assigned to a particular variant criterion in order to bind the variation point. If multiple criterion/value pairs are specified, they shall all match to bind the variation point.

In other words binding can be represented by

  (criterion1 == value1) &amp;amp;&amp;amp; (condition2 == value2) ...</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PostBuildVariantCondition"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="MATCHING-CRITERION-REF">
            <xsd:annotation>
               <xsd:documentation>This is the criterion which needs to match the value in order to make the PostbuildVariantCondition to be true.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="PostBuildVariantCondition.matchingCriterion";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:POST-BUILD-VARIANT-CRITERION--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VALUE" type="AR:INTEGER-VALUE-VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This is the particular value of the post-build variant criterion.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="PostBuildVariantCondition.value";pureMM.maxOccurs="1";pureMM.minOccurs="1";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class VariantHandling::PostBuildVariantCondition -->
   <xsd:complexType abstract="false" mixed="false" name="POST-BUILD-VARIANT-CONDITION">
      <xsd:annotation>
         <xsd:documentation>This class specifies the value which must be assigned to a particular variant criterion in order to bind the variation point. If multiple criterion/value pairs are specified, they shall all match to bind the variation point.

In other words binding can be represented by

  (criterion1 == value1) &amp;amp;&amp;amp; (condition2 == value2) ...</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PostBuildVariantCondition"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:POST-BUILD-VARIANT-CONDITION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class VariantHandling::PostBuildVariantCriterion -->
   <xsd:group name="POST-BUILD-VARIANT-CRITERION">
      <xsd:annotation>
         <xsd:documentation>This class specifies one particular PostBuildVariantSelector.</xsd:documentation>
         <xsd:appinfo source="tags">atp.recommendedPackage="PostBuildVariantCriterions";mmt.qualifiedName="PostBuildVariantCriterion"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="COMPU-METHOD-REF">
            <xsd:annotation>
               <xsd:documentation>The compuMethod specifies the possible values for the variant criterion serving as an enumerator.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="PostBuildVariantCriterion.compuMethod";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:COMPU-METHOD--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class VariantHandling::PostBuildVariantCriterion -->
   <xsd:complexType abstract="false" mixed="false" name="POST-BUILD-VARIANT-CRITERION">
      <xsd:annotation>
         <xsd:documentation>This class specifies one particular PostBuildVariantSelector.</xsd:documentation>
         <xsd:appinfo source="tags">atp.recommendedPackage="PostBuildVariantCriterions";mmt.qualifiedName="PostBuildVariantCriterion"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:COLLECTABLE-ELEMENT"/>
         <xsd:group ref="AR:PACKAGEABLE-ELEMENT"/>
         <xsd:group ref="AR:AR-ELEMENT"/>
         <xsd:group ref="AR:POST-BUILD-VARIANT-CRITERION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
   <xsd:simpleType name="POST-BUILD-VARIANT-CRITERION--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="POST-BUILD-VARIANT-CRITERION"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class VariantHandling::PostBuildVariantCriterionValue -->
   <xsd:group name="POST-BUILD-VARIANT-CRITERION-VALUE">
      <xsd:annotation>
         <xsd:documentation>This class specifies a the value which must be assigned to a particular variant criterion in order to bind the variation point. If multiple criterion/value pairs are specified, they all must must match to bind the variation point.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PostBuildVariantCriterionValue"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIANT-CRITERION-REF">
            <xsd:annotation>
               <xsd:documentation>This association selects the variant criterion whose value is specified.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="PostBuildVariantCriterionValue.variantCriterion";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="10"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:POST-BUILD-VARIANT-CRITERION--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VALUE" type="AR:INTEGER-VALUE-VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This is the particular value of the post-build variant criterion.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="PostBuildVariantCriterionValue.value";pureMM.maxOccurs="1";pureMM.minOccurs="1";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ANNOTATIONS">
            <xsd:annotation>
               <xsd:documentation>This provides the ability to add information why the value is set like it is.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="PostBuildVariantCriterionValue.annotation";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ANNOTATION" type="AR:ANNOTATION"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class VariantHandling::PostBuildVariantCriterionValue -->
   <xsd:complexType abstract="false" mixed="false" name="POST-BUILD-VARIANT-CRITERION-VALUE">
      <xsd:annotation>
         <xsd:documentation>This class specifies a the value which must be assigned to a particular variant criterion in order to bind the variation point. If multiple criterion/value pairs are specified, they all must must match to bind the variation point.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PostBuildVariantCriterionValue"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:POST-BUILD-VARIANT-CRITERION-VALUE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
   <!-- element group for class VariantHandling::PostBuildVariantCriterionValueSet -->
   <xsd:group name="POST-BUILD-VARIANT-CRITERION-VALUE-SET">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to denote one set of postBuildVariantCriterionValues.</xsd:documentation>
         <xsd:appinfo source="tags">atp.recommendedPackage="PostBuildVariantCriterionValueSets";mmt.qualifiedName="PostBuildVariantCriterionValueSet"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="POST-BUILD-VARIANT-CRITERION-VALUES">
            <xsd:annotation>
               <xsd:documentation>This is is one particular postbuild variant criterion/value pair being part of the PostBuildVariantSet.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="PostBuildVariantCriterionValueSet.postBuildVariantCriterionValue";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="POST-BUILD-VARIANT-CRITERION-VALUE" type="AR:POST-BUILD-VARIANT-CRITERION-VALUE"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class VariantHandling::PostBuildVariantCriterionValueSet -->
   <xsd:complexType abstract="false" mixed="false" name="POST-BUILD-VARIANT-CRITERION-VALUE-SET">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to denote one set of postBuildVariantCriterionValues.</xsd:documentation>
         <xsd:appinfo source="tags">atp.recommendedPackage="PostBuildVariantCriterionValueSets";mmt.qualifiedName="PostBuildVariantCriterionValueSet"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:COLLECTABLE-ELEMENT"/>
         <xsd:group ref="AR:PACKAGEABLE-ELEMENT"/>
         <xsd:group ref="AR:AR-ELEMENT"/>
         <xsd:group ref="AR:POST-BUILD-VARIANT-CRITERION-VALUE-SET"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
   <xsd:simpleType name="POST-BUILD-VARIANT-CRITERION-VALUE-SET--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="POST-BUILD-VARIANT-CRITERION-VALUE-SET"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="RESOLUTION-POLICY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-SLOPPY">
            <xsd:annotation>
               <xsd:documentation>The content of the xref element is '''not''' linked by a sloppy reference.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ResolutionPolicyEnum.noSloppy"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SLOPPY">
            <xsd:annotation>
               <xsd:documentation>The content of the xref element is linked by a sloppy reference.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ResolutionPolicyEnum.sloppy"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="SHOW-CONTENT-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-SHOW-CONTENT">
            <xsd:annotation>
               <xsd:documentation>The content of the Xref.label is '''not''' rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ShowContentEnum.noShowContent"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SHOW-CONTENT">
            <xsd:annotation>
               <xsd:documentation>The content of the element is rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ShowContentEnum.showContent"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="SHOW-RESOURCE-ALIAS-NAME-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies if the alias names of the reference target shall be rendered with the xref.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourceAliasNameEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SHOW-RESOURCE-ALIAS-NAME-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="SHOW-RESOURCE-ALIAS-NAME-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-SHOW-ALIAS-NAME">
            <xsd:annotation>
               <xsd:documentation>This indicates that alias names of the referenced object shall '''not''' be rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourceAliasNameEnum.noShowAliasName"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SHOW-ALIAS-NAME">
            <xsd:annotation>
               <xsd:documentation>This indicates that the alias names of the referenced object shall be rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourceAliasNameEnum.showAliasName"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="SHOW-RESOURCE-CATEGORY-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies if the category of the reference target shall be rendered with the xref.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourceCategoryEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SHOW-RESOURCE-CATEGORY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="SHOW-RESOURCE-CATEGORY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-SHOW-CATEGORY">
            <xsd:annotation>
               <xsd:documentation>The category of the target is '''not''' rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourceCategoryEnum.noShowCategory"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SHOW-CATEGORY">
            <xsd:annotation>
               <xsd:documentation>The category of the target is  rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourceCategoryEnum.showCategory"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="SHOW-RESOURCE-LONG-NAME-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies if the long name of the reference target shall be rendered with the xref.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourceLongNameEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SHOW-RESOURCE-LONG-NAME-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="SHOW-RESOURCE-LONG-NAME-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-SHOW-LONG-NAME">
            <xsd:annotation>
               <xsd:documentation>The long name of the target is '''not''' rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourceLongNameEnum.noShowLongName"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SHOW-LONG-NAME">
            <xsd:annotation>
               <xsd:documentation>The long name of the target is rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourceLongNameEnum.showLongName"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="SHOW-RESOURCE-NUMBER-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies if the number (e.g. chapter number) of the reference target shall be rendered with the xref.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourceNumberEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SHOW-RESOURCE-NUMBER-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="SHOW-RESOURCE-NUMBER-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-SHOW-NUMBER">
            <xsd:annotation>
               <xsd:documentation>The number of the target is '''not''' rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourceNumberEnum.noShowNumber"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SHOW-NUMBER">
            <xsd:annotation>
               <xsd:documentation>The number of the target is rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourceNumberEnum.showNumber"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="SHOW-RESOURCE-PAGE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies if the page numer of the reference target shall be rendered with the xref.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourcePageEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SHOW-RESOURCE-PAGE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="SHOW-RESOURCE-PAGE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-SHOW-PAGE">
            <xsd:annotation>
               <xsd:documentation>The page number  of the target is '''not''' rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourcePageEnum.noShowPage"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SHOW-PAGE">
            <xsd:annotation>
               <xsd:documentation>The page number  of the target is rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourcePageEnum.showPage"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="SHOW-RESOURCE-SHORT-NAME-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies if the short name of the reference target shall be rendered with the xref.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourceShortNameEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SHOW-RESOURCE-SHORT-NAME-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="SHOW-RESOURCE-SHORT-NAME-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-SHOW-SHORT-NAME">
            <xsd:annotation>
               <xsd:documentation>The short name of the target is '''not''' rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourceShortNameEnum.noShowShortName"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SHOW-SHORT-NAME">
            <xsd:annotation>
               <xsd:documentation>The short name of the target is rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourceShortNameEnum.showShortName"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:complexType name="SHOW-RESOURCE-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies if the type (e.g. derived from the class) of the reference target shall be rendered with the xref.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourceTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SHOW-RESOURCE-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="SHOW-RESOURCE-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-SHOW-TYPE">
            <xsd:annotation>
               <xsd:documentation>The type of the target is '''not''' rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourceTypeEnum.noShowType"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SHOW-TYPE">
            <xsd:annotation>
               <xsd:documentation>The type of the target is rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourceTypeEnum.showType"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="SHOW-SEE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies if the word "see" shall be rendered before the xref.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ShowSeeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SHOW-SEE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="SHOW-SEE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-SHOW-SEE">
            <xsd:annotation>
               <xsd:documentation>The word "see" is '''not''' rendered before  the reference.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ShowSeeEnum.noShowSee"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SHOW-SEE">
            <xsd:annotation>
               <xsd:documentation>The word "see"is rendered before the reference.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ShowSeeEnum.showSee"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
 <!-- element group for class Identifiable::SingleLanguageReferrable -->
   <xsd:group name="SINGLE-LANGUAGE-REFERRABLE">
      <xsd:annotation>
         <xsd:documentation>Instances of this class can be referred to by their identifier (while adhering to namespace borders). They also may have a longName but in one language only. 

Specializations of this class only occur as inline elements in one particular language. Therefore they aggregate

But they are not considered to contribute substantially to the overall structure of an AUTOSAR description. In particular it does not contain other Referrables.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SingleLanguageReferrable"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="LONG-NAME-1" type="AR:SINGLE-LANGUAGE-LONG-NAME">
            <xsd:annotation>
               <xsd:documentation>This specifies the long name of the object. The role is longName1 for compatibilty to ASAM FSX</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SingleLanguageReferrable.longName1";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- element group for class SingleLanguageData::SingleLanguageUnitNames -->
   <xsd:group name="SINGLE-LANGUAGE-UNIT-NAMES">
      <xsd:annotation>
         <xsd:documentation>This represents the ability to express a display name.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SingleLanguageUnitNames"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class SingleLanguageData::SingleLanguageUnitNames -->
   <xsd:complexType abstract="false" mixed="true" name="SINGLE-LANGUAGE-UNIT-NAMES">
      <xsd:annotation>
         <xsd:documentation>This represents the ability to express a display name.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SingleLanguageUnitNames"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:MIXED-CONTENT-FOR-UNIT-NAMES"/>
         <xsd:group ref="AR:SINGLE-LANGUAGE-UNIT-NAMES"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:complexType name="VERBATIM-STRING">
      <xsd:annotation>
         <xsd:documentation>This primitive represents a string in which white-space needs to be preserved.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="VerbatimString";xml.xsd.customType="VERBATIM-STRING";xml.xsd.type="string";xml.xsd.whiteSpace="preserve"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject,primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:VERBATIM-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
            <xsd:attributeGroup ref="AR:VERBATIM-STRING"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <!-- attribute group for class VERBATIM-STRING -->
   <xsd:attributeGroup name="VERBATIM-STRING">
      <xsd:annotation/>
      <xsd:attribute ref="xml:space">
         <xsd:annotation>
            <xsd:documentation>This attribute is used to signal an intention that in that element, white space should be preserved by applications. It is defined according to xml:space as declared by W3C.</xsd:documentation>
            <xsd:appinfo source="tags">atp.Status="shallBecomeMandatory";mmt.qualifiedName="VerbatimString.xmlSpace";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true";xml.attributeRef="true";xml.name="space";xml.nsPrefix="xml"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <xsd:simpleType name="VERBATIM-STRING--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:whiteSpace value="preserve"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:complexType name="REGULAR-EXPRESSION">
      <xsd:annotation>
         <xsd:documentation>This is a regular expression as defined in 

http://www.w3.org/TR/xmlschema-2

As of now it is still produced as a string in XSD.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RegularExpression";xml.xsd.customType="REGULAR-EXPRESSION";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:REGULAR-EXPRESSION--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="REGULAR-EXPRESSION--SIMPLE">
      <xsd:restriction base="xsd:string"/>
   </xsd:simpleType>
<!-- element group for class ECUCParameterDefTemplate::EcucConfigurationClassAffection -->
   <xsd:group name="ECUC-CONFIGURATION-CLASS-AFFECTION">
      <xsd:annotation>
         <xsd:documentation>Specifies in the "VendorSpecificModuleDefinition" whether changes on this parameter do affect other parameters in a later configuration step.

This element is removed from the specifications and shall not be used.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="EcucConfigurationClassAffection"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="AFFECTED-REFS">
            <xsd:annotation>
               <xsd:documentation>Optional reference to parameters or references which are affected by the ConfigurationClassAffection.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucConfigurationClassAffection.affected";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="AFFECTED-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:ECUC-COMMON-ATTRIBUTES--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="AFFECTION-KIND" type="AR:ECUC-AFFECTION-ENUM">
            <xsd:annotation>
               <xsd:documentation>Specifies which affect do changes in this parameter have on other parameters.  This attribute is deprecated and will be removed in future versions.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="EcucConfigurationClassAffection.affectionKind";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucConfigurationClassAffection -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-CONFIGURATION-CLASS-AFFECTION">
      <xsd:annotation>
         <xsd:documentation>Specifies in the "VendorSpecificModuleDefinition" whether changes on this parameter do affect other parameters in a later configuration step.

This element is removed from the specifications and shall not be used.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="EcucConfigurationClassAffection"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ECUC-CONFIGURATION-CLASS-AFFECTION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class ECUCParameterDefTemplate::EcucImplementationConfigurationClass -->
   <xsd:group name="ECUC-IMPLEMENTATION-CONFIGURATION-CLASS">
      <xsd:annotation>
         <xsd:documentation>Specifies which ConfigurationClass this parameter has in the individual ConfigurationVariants.

This element is removed from the specifications and therefore it shall not be used.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="EcucImplementationConfigurationClass"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="CONFIG-CLASS" type="AR:ECUC-CONFIGURATION-CLASS-ENUM">
            <xsd:annotation>
               <xsd:documentation>Specifies the ConfigurationClass for the given ConfigurationVariant.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucImplementationConfigurationClass.configClass";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="CONFIG-VARIANT" type="AR:ECUC-CONFIGURATION-VARIANT-ENUM">
            <xsd:annotation>
               <xsd:documentation>Specifies the ConfigurationVariant the ConfigurationClass is specified for.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucImplementationConfigurationClass.configVariant";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucImplementationConfigurationClass -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-IMPLEMENTATION-CONFIGURATION-CLASS">
      <xsd:annotation>
         <xsd:documentation>Specifies which ConfigurationClass this parameter has in the individual ConfigurationVariants.

This element is removed from the specifications and therefore it shall not be used.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="EcucImplementationConfigurationClass"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ECUC-IMPLEMENTATION-CONFIGURATION-CLASS"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:simpleType name="IMPLEMENTATION-DATA-TYPE--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="IMPLEMENTATION-DATA-TYPE"/>
      </xsd:restriction>
   </xsd:simpleType>
 <!-- element group for class AttributeValueVariationPoints::FloatValueVariationPoint -->
   <xsd:group name="FLOAT-VALUE-VARIATION-POINT">
      <xsd:annotation>
         <xsd:documentation>This class represents an attribute value variation point for Float attributes.

Note that this class might be used in the extended meta-model only</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="FloatValueVariationPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class AttributeValueVariationPoints::FloatValueVariationPoint -->
   <xsd:complexType abstract="false" mixed="true" name="FLOAT-VALUE-VARIATION-POINT">
      <xsd:annotation>
         <xsd:documentation>This class represents an attribute value variation point for Float attributes.

Note that this class might be used in the extended meta-model only</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="FloatValueVariationPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:FORMULA-EXPRESSION"/>
         <xsd:group ref="AR:SW-SYSTEMCONST-DEPENDENT-FORMULA"/>
         <xsd:group ref="AR:ATTRIBUTE-VALUE-VARIATION-POINT"/>
         <xsd:group ref="AR:FLOAT-VALUE-VARIATION-POINT"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:ATTRIBUTE-VALUE-VARIATION-POINT"/>
   </xsd:complexType>
<!-- element group for class AttributeValueVariationPoints::IntegerValueVariationPoint -->
   <xsd:group name="INTEGER-VALUE-VARIATION-POINT">
      <xsd:annotation>
         <xsd:documentation>This class represents an attribute value variation point for Integer attributes.

Note that this class might be used in the extended meta-model only.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="IntegerValueVariationPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class AttributeValueVariationPoints::IntegerValueVariationPoint -->
   <xsd:complexType abstract="false" mixed="true" name="INTEGER-VALUE-VARIATION-POINT">
      <xsd:annotation>
         <xsd:documentation>This class represents an attribute value variation point for Integer attributes.

Note that this class might be used in the extended meta-model only.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="IntegerValueVariationPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:FORMULA-EXPRESSION"/>
         <xsd:group ref="AR:SW-SYSTEMCONST-DEPENDENT-FORMULA"/>
         <xsd:group ref="AR:ATTRIBUTE-VALUE-VARIATION-POINT"/>
         <xsd:group ref="AR:INTEGER-VALUE-VARIATION-POINT"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:ATTRIBUTE-VALUE-VARIATION-POINT"/>
   </xsd:complexType>
<!-- element group for class AttributeValueVariationPoints::LimitValueVariationPoint -->
   <xsd:group name="LIMIT">
      <xsd:annotation>
         <xsd:documentation>This class represents the ability to express a numerical limit.  Note that this is in fact a NumericalValuationPoint but has the additional attribute intervalType.

Note that the xml.name is "LIMIT" for backward compatibility reasons.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LimitValueVariationPoint";xml.name="LIMIT"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- attribute group for class AttributeValueVariationPoints::LimitValueVariationPoint -->
   <xsd:attributeGroup name="LIMIT">
      <xsd:annotation>
         <xsd:documentation>This class represents the ability to express a numerical limit.  Note that this is in fact a NumericalValuationPoint but has the additional attribute intervalType.

Note that the xml.name is "LIMIT" for backward compatibility reasons.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LimitValueVariationPoint";xml.name="LIMIT"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="INTERVAL-TYPE" type="AR:INTERVAL-TYPE-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This specifies the type of the interval. If the attribute is missing the interval shall be considered as "CLOSED".</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="LimitValueVariationPoint.intervalType";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class AttributeValueVariationPoints::LimitValueVariationPoint -->
   <xsd:complexType abstract="false" mixed="true" name="LIMIT">
      <xsd:annotation>
         <xsd:documentation>This class represents the ability to express a numerical limit.  Note that this is in fact a NumericalValuationPoint but has the additional attribute intervalType.

Note that the xml.name is "LIMIT" for backward compatibility reasons.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LimitValueVariationPoint";xml.name="LIMIT"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:FORMULA-EXPRESSION"/>
         <xsd:group ref="AR:SW-SYSTEMCONST-DEPENDENT-FORMULA"/>
         <xsd:group ref="AR:ATTRIBUTE-VALUE-VARIATION-POINT"/>
         <xsd:group ref="AR:ABSTRACT-NUMERICAL-VARIATION-POINT"/>
         <xsd:group ref="AR:LIMIT"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:ATTRIBUTE-VALUE-VARIATION-POINT"/>
      <xsd:attributeGroup ref="AR:LIMIT"/>
   </xsd:complexType>
<!-- element group for class AttributeValueVariationPoints::UnlimitedIntegerValueVariationPoint -->
   <xsd:group name="UNLIMITED-INTEGER-VALUE-VARIATION-POINT">
      <xsd:annotation>
         <xsd:documentation>This class represents an attribute value variation point for unlimited Integer attributes.

Note that this class might be used in the extended meta-model only.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="UnlimitedIntegerValueVariationPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class AttributeValueVariationPoints::UnlimitedIntegerValueVariationPoint -->
   <xsd:complexType abstract="false" mixed="true" name="UNLIMITED-INTEGER-VALUE-VARIATION-POINT">
      <xsd:annotation>
         <xsd:documentation>This class represents an attribute value variation point for unlimited Integer attributes.

Note that this class might be used in the extended meta-model only.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="UnlimitedIntegerValueVariationPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:FORMULA-EXPRESSION"/>
         <xsd:group ref="AR:SW-SYSTEMCONST-DEPENDENT-FORMULA"/>
         <xsd:group ref="AR:ATTRIBUTE-VALUE-VARIATION-POINT"/>
         <xsd:group ref="AR:UNLIMITED-INTEGER-VALUE-VARIATION-POINT"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:ATTRIBUTE-VALUE-VARIATION-POINT"/>
   </xsd:complexType>
<!-- element group for class ECUCParameterDefTemplate::EcucDerivationSpecification -->
   <xsd:group name="ECUC-DERIVATION-SPECIFICATION">
      <xsd:annotation>
         <xsd:documentation>Allows to define configuration items that are calculated based on the value of
- other parameter values
- elements (attributes/classes) defined in other AUTOSAR templates such as System template and SW component template</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucDerivationSpecification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="CALCULATION-FORMULA" type="AR:ECUC-PARAMETER-DERIVATION-FORMULA">
            <xsd:annotation>
               <xsd:documentation>Definition of the formula used to calculate the value of the configuration element.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucDerivationSpecification.calculationFormula";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ECUC-QUERYS">
            <xsd:annotation>
               <xsd:documentation>Query to the ECU Configuration Description.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucDerivationSpecification.ecucQuery";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ECUC-QUERY" type="AR:ECUC-QUERY"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="INFORMAL-FORMULA" type="AR:ML-FORMULA">
            <xsd:annotation>
               <xsd:documentation>Informal description of the derivation used to calculate the value of the configuration element.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucDerivationSpecification.informalFormula";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucDerivationSpecification -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-DERIVATION-SPECIFICATION">
      <xsd:annotation>
         <xsd:documentation>Allows to define configuration items that are calculated based on the value of
- other parameter values
- elements (attributes/classes) defined in other AUTOSAR templates such as System template and SW component template</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucDerivationSpecification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ECUC-DERIVATION-SPECIFICATION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:simpleType name="INTERVAL-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CLOSED">
            <xsd:annotation>
               <xsd:documentation>The area is limited by the value given. The value itself is included.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="IntervalTypeEnum.closed"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="INFINITE">
            <xsd:annotation>
               <xsd:documentation>This indicates that the limit is infinite. Note, it is obsolete. Use INF / -INF as value of the limit.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="IntervalTypeEnum.infinite"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OPEN">
            <xsd:annotation>
               <xsd:documentation>The area is limited by the value given. The value itself is not included.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="IntervalTypeEnum.open"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class ECUCParameterDefTemplate::EcucFunctionNameDefConditional -->
   <xsd:group name="ECUC-FUNCTION-NAME-DEF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucFunctionNameDefConditional"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucFunctionNameDefConditional.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucFunctionNameDefConditional -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-FUNCTION-NAME-DEF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucFunctionNameDefConditional"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ECUC-ABSTRACT-STRING-PARAM-DEF-CONTENT"/>
         <xsd:group ref="AR:ECUC-FUNCTION-NAME-DEF-CONTENT"/>
         <xsd:group ref="AR:ECUC-FUNCTION-NAME-DEF-CONDITIONAL"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class ECUCParameterDefTemplate::EcucEnumerationLiteralDef -->
   <xsd:group name="ECUC-ENUMERATION-LITERAL-DEF">
      <xsd:annotation>
         <xsd:documentation>Configuration parameter type for enumeration literals definition.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucEnumerationLiteralDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ECUC-COND" type="AR:ECUC-CONDITION-SPECIFICATION">
            <xsd:annotation>
               <xsd:documentation>If it evaluates to true the literal definition shall be processed as specified. Otherwise the literal definition shall be ignored.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucEnumerationLiteralDef.ecucCond";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ORIGIN" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>String specifying if this literal is an AUTOSAR standardized literal or if the literal is vendor-specific.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucEnumerationLiteralDef.origin";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucEnumerationLiteralDef -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-ENUMERATION-LITERAL-DEF">
      <xsd:annotation>
         <xsd:documentation>Configuration parameter type for enumeration literals definition.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucEnumerationLiteralDef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ECUC-ENUMERATION-LITERAL-DEF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>

<!-- element group for class ECUCParameterDefTemplate::EcucQueryExpression -->
   <xsd:group name="ECUC-QUERY-EXPRESSION">
      <xsd:annotation>
         <xsd:documentation>Defines a query expression to the ECUC Description and output the result as an numerical value. Due to the "mixedString" nature of the formula there can be several EcuQueryExpressions used.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucQueryExpression"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="CONFIG-ELEMENT-DEF-GLOBAL-REF">
               <xsd:annotation>
                  <xsd:documentation>The EcucQueryExpression points to an EcucDefinitionElement that is used to find an element in the EcucDescription. In order to find the right element in the EcucDescription a search is necessary. If the complete EcucDescription needs to be searched this global reference shall be used. Due to the "mixedString" nature of the EcucQueryExpression several references to EcucDefintionElements can be used in one EcucQueryExpression.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="EcucQueryExpression.configElementDefGlobal";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
                  <xsd:appinfo source="stereotypes">atpUriDef</xsd:appinfo>
               </xsd:annotation>
               <xsd:complexType>
                  <xsd:simpleContent>
                     <xsd:extension base="AR:REF">
                        <xsd:attribute name="DEST" type="AR:ECUC-DEFINITION-ELEMENT--SUBTYPES-ENUM" use="required"/>
                     </xsd:extension>
                  </xsd:simpleContent>
               </xsd:complexType>
            </xsd:element>
            <xsd:element name="CONFIG-ELEMENT-DEF-LOCAL-REF">
               <xsd:annotation>
                  <xsd:documentation>The EcucQueryExpression points to an EcucDefinitionElement that is used to find an element in the EcucDescription. In order to find the right element in the EcucDescription a search is necessary. If the search is executed inside of the same module that contains the EcucQuery this local reference shall be used. Due to the "mixedString" nature of the EcucQueryExpression several references to EcucDefintionElements can be used in one EcucQueryExpression.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="EcucQueryExpression.configElementDefLocal";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
                  <xsd:appinfo source="stereotypes">atpUriDef</xsd:appinfo>
               </xsd:annotation>
               <xsd:complexType>
                  <xsd:simpleContent>
                     <xsd:extension base="AR:REF">
                        <xsd:attribute name="DEST" type="AR:ECUC-DEFINITION-ELEMENT--SUBTYPES-ENUM" use="required"/>
                     </xsd:extension>
                  </xsd:simpleContent>
               </xsd:complexType>
            </xsd:element>
         </xsd:choice>
      </xsd:choice>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucQueryExpression -->
   <xsd:complexType abstract="false" mixed="true" name="ECUC-QUERY-EXPRESSION">
      <xsd:annotation>
         <xsd:documentation>Defines a query expression to the ECUC Description and output the result as an numerical value. Due to the "mixedString" nature of the formula there can be several EcuQueryExpressions used.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucQueryExpression"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ECUC-QUERY-EXPRESSION"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>

<xsd:simpleType name="ECUC-DEFINITION-ELEMENT--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ECUC-ABSTRACT-REFERENCE-DEF"/>
         <xsd:enumeration value="ECUC-ABSTRACT-STRING-PARAM-DEF"/>
         <xsd:enumeration value="ECUC-ADD-INFO-PARAM-DEF"/>
         <xsd:enumeration value="ECUC-BOOLEAN-PARAM-DEF"/>
         <xsd:enumeration value="ECUC-CHOICE-CONTAINER-DEF"/>
         <xsd:enumeration value="ECUC-CHOICE-REFERENCE-DEF"/>
         <xsd:enumeration value="ECUC-COMMON-ATTRIBUTES"/>
         <xsd:enumeration value="ECUC-CONTAINER-DEF"/>
         <xsd:enumeration value="ECUC-DEFINITION-ELEMENT"/>
         <xsd:enumeration value="ECUC-ENUMERATION-PARAM-DEF"/>
         <xsd:enumeration value="ECUC-FLOAT-PARAM-DEF"/>
         <xsd:enumeration value="ECUC-FOREIGN-REFERENCE-DEF"/>
         <xsd:enumeration value="ECUC-FUNCTION-NAME-DEF"/>
         <xsd:enumeration value="ECUC-INSTANCE-REFERENCE-DEF"/>
         <xsd:enumeration value="ECUC-INTEGER-PARAM-DEF"/>
         <xsd:enumeration value="ECUC-LINKER-SYMBOL-DEF"/>
         <xsd:enumeration value="ECUC-MODULE-DEF"/>
         <xsd:enumeration value="ECUC-MULTILINE-STRING-PARAM-DEF"/>
         <xsd:enumeration value="ECUC-PARAM-CONF-CONTAINER-DEF"/>
         <xsd:enumeration value="ECUC-PARAMETER-DEF"/>
         <xsd:enumeration value="ECUC-REFERENCE-DEF"/>
         <xsd:enumeration value="ECUC-STRING-PARAM-DEF"/>
         <xsd:enumeration value="ECUC-SYMBOLIC-NAME-REFERENCE-DEF"/>
         <xsd:enumeration value="ECUC-URI-REFERENCE-DEF"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class MsrQuery::MsrQueryResultChapter -->
   <xsd:group name="MSR-QUERY-RESULT-CHAPTER">
      <xsd:annotation>
         <xsd:documentation>This metaclass represents the result of an msrquery which is a set of chapters.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryResultChapter"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="CHAPTER" type="AR:CHAPTER">
            <xsd:annotation>
               <xsd:documentation>This is one particular chapter in the query result.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryResultChapter.chapter";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.roleElement="true";xml.roleWrapperElement="false";xml.sequenceOffset="20";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class MsrQuery::MsrQueryResultChapter -->
   <xsd:complexType abstract="false" mixed="false" name="MSR-QUERY-RESULT-CHAPTER">
      <xsd:annotation>
         <xsd:documentation>This metaclass represents the result of an msrquery which is a set of chapters.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryResultChapter"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:MSR-QUERY-RESULT-CHAPTER"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class MsrQuery::MsrQueryResultTopic1 -->
   <xsd:group name="MSR-QUERY-RESULT-TOPIC-1">
      <xsd:annotation>
         <xsd:documentation>This metaclass represents the ability to express the result of a query which is a set of topics.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryResultTopic1"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="TOPIC-1" type="AR:TOPIC-1">
            <xsd:annotation>
               <xsd:documentation>This represents one particular topic in the query result.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryResultTopic1.topic1";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.roleElement="true";xml.roleWrapperElement="false";xml.sequenceOffset="20";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class MsrQuery::MsrQueryResultTopic1 -->
   <xsd:complexType abstract="false" mixed="false" name="MSR-QUERY-RESULT-TOPIC-1">
      <xsd:annotation>
         <xsd:documentation>This metaclass represents the ability to express the result of a query which is a set of topics.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryResultTopic1"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:MSR-QUERY-RESULT-TOPIC-1"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class GerneralParameters::GeneralParameter -->
   <xsd:group name="GENERAL-PARAMETER">
      <xsd:annotation>
         <xsd:documentation>This represents a parameter in general e.g. an entry in a data sheet.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="GeneralParameter"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="PRM-CHAR" type="AR:PRM-CHAR">
            <xsd:annotation>
               <xsd:documentation>This represents the characteristics of one parameter under one particular condition.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GeneralParameter.prmChar";pureMM.maxOccurs="-1";pureMM.minOccurs="1";xml.roleElement="true";xml.roleWrapperElement="false";xml.sequenceOffset="20";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class GerneralParameters::GeneralParameter -->
   <xsd:complexType abstract="false" mixed="false" name="GENERAL-PARAMETER">
      <xsd:annotation>
         <xsd:documentation>This represents a parameter in general e.g. an entry in a data sheet.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="GeneralParameter"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:GENERAL-PARAMETER"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class OasisExchangeTable::Tgroup -->
   <xsd:group name="TGROUP">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to denote a table section.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Tgroup"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="COLSPEC" type="AR:COLSPEC">
            <xsd:annotation>
               <xsd:documentation>This specifies one particular column specification in the table. There must be one entry for each column.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Tgroup.colspec";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.roleElement="true";xml.roleWrapperElement="false";xml.sequenceOffset="20";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="THEAD" type="AR:TBODY">
            <xsd:annotation>
               <xsd:documentation>This represents the heading of the table section. The heading is usually repeated at the beginning of each new page.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Tgroup.thead";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="40"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TFOOT" type="AR:TBODY">
            <xsd:annotation>
               <xsd:documentation>This represents the footer of the table segement. This segment is printed at the end of the table or before a page break.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Tgroup.tfoot";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="50"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TBODY" type="AR:TBODY">
            <xsd:annotation>
               <xsd:documentation>This is the main part of the table segment, called the table body.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Tgroup.tbody";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="60"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- attribute group for class OasisExchangeTable::Tgroup -->
   <xsd:attributeGroup name="TGROUP">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to denote a table section.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Tgroup"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="ALIGN" type="AR:ALIGN-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Specifies how the cell entries shall be horizontally aligned within the specified TGROUP.
Default is "LEFT"</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Tgroup.align";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="COLS" type="AR:INTEGER--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute represents the number of columns in the table.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Tgroup.cols";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="COLSEP" type="AR:TABLE-SEPARATOR-STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicates if by default a line shall be drawn between the columns of this table group.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Tgroup.colsep";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ROWSEP" type="AR:TABLE-SEPARATOR-STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicates if by default a line shall be drawn at the bottom of the rows in this table group.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Tgroup.rowsep";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class OasisExchangeTable::Tgroup -->
   <xsd:complexType abstract="false" mixed="false" name="TGROUP">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to denote a table section.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Tgroup"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:TGROUP"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:TGROUP"/>
   </xsd:complexType>
<!-- element group for class MsrQuery::MsrQueryArg -->
   <xsd:group name="MSR-QUERY-ARG">
      <xsd:annotation>
         <xsd:documentation>This represents an argument to the query. Note that the arguments are not standardized and therefore subject to mutual agreement.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryArg"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ARG" type="AR:STRING--SIMPLE">
            <xsd:annotation>
               <xsd:documentation>This is the value of the argument.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryArg.arg";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.roleElement="false";xml.roleWrapperElement="false";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- attribute group for class MsrQuery::MsrQueryArg -->
   <xsd:attributeGroup name="MSR-QUERY-ARG">
      <xsd:annotation>
         <xsd:documentation>This represents an argument to the query. Note that the arguments are not standardized and therefore subject to mutual agreement.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryArg"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="SI" type="AR:NMTOKEN-STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This denotes the name of the query argument (semantic information)</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryArg.si";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class MsrQuery::MsrQueryArg -->
   <xsd:complexType name="MSR-QUERY-ARG">
      <xsd:annotation>
         <xsd:documentation>This represents an argument to the query. Note that the arguments are not standardized and therefore subject to mutual agreement.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MsrQueryArg"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
            <xsd:attributeGroup ref="AR:MSR-QUERY-ARG"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
<!-- element group for class Figure::Graphic -->
   <xsd:group name="GRAPHIC">
      <xsd:annotation>
         <xsd:documentation>This class represents an artifact containing the image to be inserted in the document</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Graphic"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- attribute group for class Figure::Graphic -->
   <xsd:attributeGroup name="GRAPHIC">
      <xsd:annotation>
         <xsd:documentation>This class represents an artifact containing the image to be inserted in the document</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Graphic"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="EDIT-HEIGHT" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Specifies the height of the graphic when it is displayed in an editor. The unit can be added to the number in the string. Possible units are:
cm, mm, px, pt. The default unit is px.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Graphic.editHeight";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="EDIT-WIDTH" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Specifies the width of the graphic when it is displayed in an editor. The unit can be added to the number in the string. Possible units are:
cm, mm, px, pt. The default unit is px.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Graphic.editWidth";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="EDITFIT" type="AR:GRAPHIC-FIT-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Specifies how the graphic shall be displayed in an editor. If the attribute is missing,</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Graphic.editfit";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="EDITSCALE" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Set the proportional scale when displayed in an editor.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Graphic.editscale";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="FILENAME" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Name of the file that should be displayed. This attribute is supported in ASAM FSX and kept in AUTOSAR in order to support cut and paste.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Graphic.filename";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="FIT" type="AR:GRAPHIC-FIT-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>It determines the way in which the graphic should be inserted.

Enter the attribute value "AS-IS" , to insert a graphic in its original dimensions.

The graphic is adapted, if it is too big for the space for which it was intended. 
Default is "AS-IS"</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Graphic.fit";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="GENERATOR" type="AR:NMTOKEN-STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute specifies the generator which is used to generate the image. 

Use case is that when editing a documentation, a figure (to be delivered by the  modeling tool) is inserted by the authoring tool as reference (this is the role  of graphic). But the real figure maybe injected during document processing. To  be able to recognize this situation, this attribute can be applied.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Graphic.generator";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="HEIGHT" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Define the displayed height of the figure. The unit can be added to the number in the string. Possible units are:
cm, mm, px, pt. The default unit is px.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Graphic.height";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="HTML-FIT" type="AR:GRAPHIC-FIT-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>How to fit the graphic in an online media. Default is AS-IS.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Graphic.htmlFit";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="HTML-HEIGHT" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Specifies the height of the graphic when it is displayed online. The unit can be added to the number in the string. Possible units are:
cm, mm, px, pt. The default unit is px.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Graphic.htmlHeight";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="HTML-SCALE" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Set the proportional scale when displayed online.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Graphic.htmlScale";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="HTML-WIDTH" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Specifies the width of the graphic when it is displayed online. The unit can be added to the number in the string. Possible units are:
cm, mm, px, pt. The default unit is px.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Graphic.htmlWidth";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="NOTATION" type="AR:GRAPHIC-NOTATION-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute captures the format used to represent the graphic.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Graphic.notation";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true";xml.id="GRAPHIC_TYPE__GRAPHIC_TYPE__NOTATION"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="SCALE" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>In this element the dimensions of the graphic can be altered proportionally.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Graphic.scale";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="WIDTH" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Define the displayed width of the figure. The unit can be added to the number in the string. Possible units are:
cm, mm, px, pt. The default unit is px.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Graphic.width";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class Figure::Graphic -->
   <xsd:complexType abstract="false" mixed="false" name="GRAPHIC">
      <xsd:annotation>
         <xsd:documentation>This class represents an artifact containing the image to be inserted in the document</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Graphic"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ENGINEERING-OBJECT"/>
         <xsd:group ref="AR:GRAPHIC"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:GRAPHIC"/>
   </xsd:complexType>
<!-- element group for class Figure::Map -->
   <xsd:group name="MAP">
      <xsd:annotation>
         <xsd:documentation>Image maps enable authors to specify regions of an image or object and assign a specific action to each region (e.g., retrieve a document, run a program, etc.) When the region is activated by the user, the action is executed.

The class follows the html approach and is intended to support interactive documents.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Map"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="AREA" type="AR:AREA">
            <xsd:annotation>
               <xsd:documentation>This element specifies a region in an image map. Image maps enable authors to specify regions in an object (e.g. a graphic) and to assign a specific activity to each region (e.g. load a document, launch a program etc.).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Map.area";pureMM.maxOccurs="-1";pureMM.minOccurs="1";xml.roleElement="true";xml.roleWrapperElement="false";xml.sequenceOffset="20";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- attribute group for class Figure::Map -->
   <xsd:attributeGroup name="MAP">
      <xsd:annotation>
         <xsd:documentation>Image maps enable authors to specify regions of an image or object and assign a specific action to each region (e.g., retrieve a document, run a program, etc.) When the region is activated by the user, the action is executed.

The class follows the html approach and is intended to support interactive documents.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Map"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="CLASS" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute assigns a class name or set of class names to an element. Any number of elements may be assigned the same class name or set of class names. Multiple class names must be separated by white space characters. Class names are typically used to apply CSS formatting rules to an element.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Map.class";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="NAME" type="AR:NMTOKEN-STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute assigns a name to the image map in the MAP element. This name can be used to be referenced in an HTML image through the attribute USEMAP. Although this is not actually necessary in the
MSR model, it was inserted in order to support the MAPs which were created for HTML.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Map.name";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ONCLICK" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The ONCLICK-Event occurs, if the current element is clicked on. A script can be stored in
this attribute to be performed in the Event.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Map.onclick";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ONDBLCLICK" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The ONDBLCLICK-Event occurs, if the current Event is "double" clicked-on. 
A script can be stored in this attribute to be performed in the Event.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Map.ondblclick";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ONKEYDOWN" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The ONKEYDOWN-Event occurs, if a button on the current element is pressed down. 

A script can be stored in this attribute to be performed in the event.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Map.onkeydown";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ONKEYPRESS" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The ONKEYPRESS-Event occurs, if a button on the current element is pressed down and released. 

A script can be stored in this attribute to be performed in the Event.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Map.onkeypress";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ONKEYUP" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The ONKEYUP-Event occurs, if a button on the current element is released. 

A script can be stored in this attribute to be performed in the Event.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Map.onkeyup";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ONMOUSEDOWN" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The ONMOUSEDOWN-Event occurs, if the mouse button used for clicking is held down on the current element. 

A script can be stored in this attribute to be performed in the Event.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Map.onmousedown";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ONMOUSEMOVE" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The ONMOUSEMOVE-Event occurs, if the mouse pointer is moved on the current 
element (i.e. it is located on the current element). 

A script can be stored in this attribute to be performed in the Event.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Map.onmousemove";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ONMOUSEOUT" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The ONMOUSEOUT-Event occurs, if the mouse pointer is moved from the current element.

A script can be stored in this attribute to be performed in the Event.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Map.onmouseout";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ONMOUSEOVER" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The ONMOUSEOVER-Event occurs, if the mouse pointer is moved to the current element
from another location outside it. 

A script can be stored in this attribute to be performed in the Event.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Map.onmouseover";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ONMOUSEUP" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The ONMOUSEUP-Event occurs if the mouse button used for clicking is released on the
current element. 

A script can be stored in this attribute to be performed in the Event.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Map.onmouseup";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="STYLE" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute specifies formatting style information for the current element. The content of this attribute is called inline CSS. The style attribute is deprecated (considered outdated), because it fuses together content and formatting.</xsd:documentation>
            <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="Map.style";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="TITLE" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute offers advisory information. Some Web browsers will display this information as tooltips. Authoring tools may make this information available to users as additional information about the element.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Map.title";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class Figure::Map -->
   <xsd:complexType abstract="false" mixed="false" name="MAP">
      <xsd:annotation>
         <xsd:documentation>Image maps enable authors to specify regions of an image or object and assign a specific action to each region (e.g., retrieve a document, run a program, etc.) When the region is activated by the user, the action is executed.

The class follows the html approach and is intended to support interactive documents.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Map"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:MAP"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:MAP"/>
   </xsd:complexType>
<!-- element group for class SingleLanguageData::SingleLanguageLongName -->
   <xsd:group name="SINGLE-LANGUAGE-LONG-NAME">
      <xsd:annotation>
         <xsd:documentation>SingleLanguageLongName</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SingleLanguageLongName"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class SingleLanguageData::SingleLanguageLongName -->
   <xsd:complexType abstract="false" mixed="true" name="SINGLE-LANGUAGE-LONG-NAME">
      <xsd:annotation>
         <xsd:documentation>SingleLanguageLongName</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SingleLanguageLongName"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:MIXED-CONTENT-FOR-LONG-NAME"/>
         <xsd:group ref="AR:SINGLE-LANGUAGE-LONG-NAME"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class BlockElements::Url -->
   <xsd:group name="URL">
      <xsd:annotation>
         <xsd:documentation>This meta-class specifies an Uniform Resource Locator (URL).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Url"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="VALUE" type="AR:URI-STRING--SIMPLE">
            <xsd:annotation>
               <xsd:documentation>This is the url itself</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Url.value";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.roleElement="false";xml.roleWrapperElement="false";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- attribute group for class BlockElements::Url -->
   <xsd:attributeGroup name="URL">
      <xsd:annotation>
         <xsd:documentation>This meta-class specifies an Uniform Resource Locator (URL).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Url"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="MIME-TYPE" type="AR:MIME-TYPE-STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>this denotes the mime type of the resource located by the url.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Url.mimeType";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class BlockElements::Url -->
   <xsd:complexType name="URL">
      <xsd:annotation>
         <xsd:documentation>This meta-class specifies an Uniform Resource Locator (URL).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Url"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:URI-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
            <xsd:attributeGroup ref="AR:URL"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
<!-- element group for class ECUCParameterDefTemplate::EcucFunctionNameDefContent -->
   <xsd:group name="ECUC-FUNCTION-NAME-DEF-CONTENT">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucFunctionNameDefContent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
<xsd:simpleType name="ALIGN-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CENTER">
            <xsd:annotation>
               <xsd:documentation>The content of the table is horizontally centered.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AlignEnum.center"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="JUSTIFY">
            <xsd:annotation>
               <xsd:documentation>This indicates that the content of table cell shall be justified (rendered as a block where white-space is expanded such that all lines are filled up).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AlignEnum.justify"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LEFT">
            <xsd:annotation>
               <xsd:documentation>This indicates that the content of a table cell is left justified.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AlignEnum.left"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RIGHT">
            <xsd:annotation>
               <xsd:documentation>This indicates that the content of a table cell is left justified.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AlignEnum.right"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="INTEGER--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[+\-]?[1-9][0-9]*|0x[0-9a-f]+|0[0-7]*|0b[0-1]+"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="GRAPHIC-FIT-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="AS-IS">
            <xsd:annotation>
               <xsd:documentation>This indicates that the image shall be incorporated as is without scaling, rotation etc.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GraphicFitEnum.AsIs"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FIT-TO-PAGE">
            <xsd:annotation>
               <xsd:documentation>Fit to the page</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GraphicFitEnum.FitToPage"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FIT-TO-TEXT">
            <xsd:annotation>
               <xsd:documentation>fit to the text containing the graphic.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GraphicFitEnum.FitToText"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LIMIT-TO-PAGE">
            <xsd:annotation>
               <xsd:documentation>This indicates that the width of the graphic shall be limited to the '''page width'''. The image shall not be scaled down but cropped.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GraphicFitEnum.LimitToPage"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LIMIT-TO-TEXT">
            <xsd:annotation>
               <xsd:documentation>This indicates that the width of the graphic shall be limited to the width of the current '''text flow'''. The image shall not be scaled down but cropped.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GraphicFitEnum.LimitToText"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ROTATE-180">
            <xsd:annotation>
               <xsd:documentation>Rotate 180 degree</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GraphicFitEnum.Rotate180"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ROTATE-180-LIMIT-TO-TEXT">
            <xsd:annotation>
               <xsd:documentation>Rotate 180 degree</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GraphicFitEnum.Rotate180LimitToText"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ROTATE-90-CCW">
            <xsd:annotation>
               <xsd:documentation>Rotate 90 degree counter clockwise</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GraphicFitEnum.Rotate90ccw"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ROTATE-90-CCW-FIT-TO-TEXT">
            <xsd:annotation>
               <xsd:documentation>Rotate by 90 degree counter clock wise and then fit to text</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GraphicFitEnum.Rotate90CcwFitToText"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ROTATE-90-CCW-LIMIT-TO-TEXT">
            <xsd:annotation>
               <xsd:documentation>Rotate by 90 degree counter clock wise and then fit to text</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GraphicFitEnum.Rotate90CcwLimitToText"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ROTATE-90-CW">
            <xsd:annotation>
               <xsd:documentation>Rotate 90 degree clockwise</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GraphicFitEnum.Rotate90Cw"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ROTATE-90-CW-FIT-TO-TEXT">
            <xsd:annotation>
               <xsd:documentation>Rotate by 90 degree and then fit to text</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GraphicFitEnum.Rotate90CwFitToText"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ROTATE-90-CW-LIMIT-TO-TEXT">
            <xsd:annotation>
               <xsd:documentation>Rotate by 90 degree and then fit to text</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GraphicFitEnum.Rotate90CwLimitToText"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:complexType name="GRAPHIC-NOTATION-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies the various notations (finally file types) used to represent the figure.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="GraphicNotationEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:GRAPHIC-NOTATION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="GRAPHIC-NOTATION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BMP">
            <xsd:annotation>
               <xsd:documentation>bitmap image</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GraphicNotationEnum.bmp"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EPS">
            <xsd:annotation>
               <xsd:documentation>Encapsulated Postscript</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GraphicNotationEnum.eps"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="GIF">
            <xsd:annotation>
               <xsd:documentation>Graphics Interchange Format</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GraphicNotationEnum.gif"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="JPG">
            <xsd:annotation>
               <xsd:documentation>"Joint Photographic Experts Group"  format</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GraphicNotationEnum.jpg"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PDF">
            <xsd:annotation>
               <xsd:documentation>Portable Document Format</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GraphicNotationEnum.pdf"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PNG">
            <xsd:annotation>
               <xsd:documentation>Portable Network Graphics</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GraphicNotationEnum.png"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SVG">
            <xsd:annotation>
               <xsd:documentation>scalable vector graphic</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GraphicNotationEnum.svg"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TIFF">
            <xsd:annotation>
               <xsd:documentation>Tagged Image File Format</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="GraphicNotationEnum.tiff"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class EngineeringObject::EngineeringObject -->
   <xsd:group name="ENGINEERING-OBJECT">
      <xsd:annotation>
         <xsd:documentation>This class specifies an engineering object. Usually such an object is represented by a file artifact. The properties of engineering object are such that the artifact can be found  by querying an ASAM catalog file.

The engineering object is uniquely identified by domain+category+shortLabel+revisionLabel.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EngineeringObject"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="SHORT-LABEL" type="AR:NMTOKEN-STRING">
            <xsd:annotation>
               <xsd:documentation>This is the short name of the engineering object. Note that it is modeled as NameToken and not as Identifier since in ASAM-CC it is also a NameToken.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EngineeringObject.shortLabel";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="10"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="CATEGORY" type="AR:NMTOKEN-STRING">
            <xsd:annotation>
               <xsd:documentation>This denotes the role of the engineering object in the development cycle. 
Categories are such as

* SWSRC for source code
* SWOBJ for object code
* SWHDR for a C-header file

Further roles need to be defined via Methodology.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EngineeringObject.category";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="REVISION-LABELS">
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="REVISION-LABEL" type="AR:REVISION-LABEL-STRING">
                     <xsd:annotation>
                        <xsd:documentation>This is a revision label denoting a particular version of the engineering object.</xsd:documentation>
                        <xsd:appinfo source="tags">mmt.qualifiedName="EngineeringObject.revisionLabel";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
                     </xsd:annotation>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="DOMAIN" type="AR:NMTOKEN-STRING">
            <xsd:annotation>
               <xsd:documentation>This denotes the domain in which the engineering object is stored. This allows to indicate various segments in the repository keeping the engineering objects. The domain may segregate companies, as well as automotive domains. Details need to be defined by the Methodology.

Attribute is optional to support a default domain.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EngineeringObject.domain";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="40"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
<xsd:simpleType name="MIME-TYPE-STRING--SIMPLE">
      <xsd:restriction base="xsd:string"/>
   </xsd:simpleType>

<xsd:simpleType name="ECUC-MODULE-CONFIGURATION-VALUES--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ECUC-MODULE-CONFIGURATION-VALUES"/>
      </xsd:restriction>
   </xsd:simpleType>

<xsd:simpleType name="COMPU-METHOD--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="COMPU-METHOD"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="ECUC-COMMON-ATTRIBUTES--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ECUC-ABSTRACT-REFERENCE-DEF"/>
         <xsd:enumeration value="ECUC-ABSTRACT-STRING-PARAM-DEF"/>
         <xsd:enumeration value="ECUC-ADD-INFO-PARAM-DEF"/>
         <xsd:enumeration value="ECUC-BOOLEAN-PARAM-DEF"/>
         <xsd:enumeration value="ECUC-CHOICE-REFERENCE-DEF"/>
         <xsd:enumeration value="ECUC-COMMON-ATTRIBUTES"/>
         <xsd:enumeration value="ECUC-ENUMERATION-PARAM-DEF"/>
         <xsd:enumeration value="ECUC-FLOAT-PARAM-DEF"/>
         <xsd:enumeration value="ECUC-FOREIGN-REFERENCE-DEF"/>
         <xsd:enumeration value="ECUC-FUNCTION-NAME-DEF"/>
         <xsd:enumeration value="ECUC-INSTANCE-REFERENCE-DEF"/>
         <xsd:enumeration value="ECUC-INTEGER-PARAM-DEF"/>
         <xsd:enumeration value="ECUC-LINKER-SYMBOL-DEF"/>
         <xsd:enumeration value="ECUC-MULTILINE-STRING-PARAM-DEF"/>
         <xsd:enumeration value="ECUC-PARAMETER-DEF"/>
         <xsd:enumeration value="ECUC-REFERENCE-DEF"/>
         <xsd:enumeration value="ECUC-STRING-PARAM-DEF"/>
         <xsd:enumeration value="ECUC-SYMBOLIC-NAME-REFERENCE-DEF"/>
         <xsd:enumeration value="ECUC-URI-REFERENCE-DEF"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:complexType name="ECUC-AFFECTION-ENUM">
      <xsd:annotation>
         <xsd:documentation>Possible affections used by the EcucConfigurationClassAffection.

This element is removed from the specifications and shall not be used.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="EcucAffectionEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ECUC-AFFECTION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="ECUC-AFFECTION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="LT-AFFECTS-PB">
            <xsd:annotation>
               <xsd:documentation>A link time parameter affecting one or several post-build time parameter(s).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucAffectionEnum.LTAffectsPB"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NO-AFFECT">
            <xsd:annotation>
               <xsd:documentation>no affect on any other parameter.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucAffectionEnum.NOAffect"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PC-AFFECTS-LT">
            <xsd:annotation>
               <xsd:documentation>A pre-compile time parameter affecting one or several link time parameter(s).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucAffectionEnum.PCAffectsLT"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PC-AFFECTS-LT-AND-PB">
            <xsd:annotation>
               <xsd:documentation>A pre-compile time parameter affecting one or several link time and post-build time parameter(s)).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucAffectionEnum.PCAffectsLTAndPB"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PC-AFFECTS-PB">
            <xsd:annotation>
               <xsd:documentation>A pre-compile time parameter affecting one or several post build time parameter(s).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucAffectionEnum.PCAffectsPB"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>

<!-- element group for class ECUCParameterDefTemplate::EcucParameterDerivationFormula -->
   <xsd:group name="ECUC-PARAMETER-DERIVATION-FORMULA">
      <xsd:annotation>
         <xsd:documentation>This formula is intended to specify how an ecu parameter can be derived from other information in the Autosar Templates.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucParameterDerivationFormula"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="ECUC-QUERY-REF">
               <xsd:annotation>
                  <xsd:documentation>This is one particular EcucQuery used in the calculation formula.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="EcucParameterDerivationFormula.ecucQuery";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
               </xsd:annotation>
               <xsd:complexType>
                  <xsd:simpleContent>
                     <xsd:extension base="AR:REF">
                        <xsd:attribute name="DEST" type="AR:ECUC-QUERY--SUBTYPES-ENUM" use="required"/>
                     </xsd:extension>
                  </xsd:simpleContent>
               </xsd:complexType>
            </xsd:element>
            <xsd:element name="ECUC-QUERY-STRING-REF">
               <xsd:annotation>
                  <xsd:documentation>This indicates that the referenced query shall return a string.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="EcucParameterDerivationFormula.ecucQueryString";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
               </xsd:annotation>
               <xsd:complexType>
                  <xsd:simpleContent>
                     <xsd:extension base="AR:REF">
                        <xsd:attribute name="DEST" type="AR:ECUC-QUERY--SUBTYPES-ENUM" use="required"/>
                     </xsd:extension>
                  </xsd:simpleContent>
               </xsd:complexType>
            </xsd:element>
         </xsd:choice>
      </xsd:choice>
   </xsd:group>
   <!-- complex type for class ECUCParameterDefTemplate::EcucParameterDerivationFormula -->
   <xsd:complexType abstract="false" mixed="true" name="ECUC-PARAMETER-DERIVATION-FORMULA">
      <xsd:annotation>
         <xsd:documentation>This formula is intended to specify how an ecu parameter can be derived from other information in the Autosar Templates.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucParameterDerivationFormula"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:FORMULA-EXPRESSION"/>
         <xsd:group ref="AR:ECUC-PARAMETER-DERIVATION-FORMULA"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class GerneralParameters::PrmChar -->
   <xsd:group name="PRM-CHAR">
      <xsd:annotation>
         <xsd:documentation>This metaclass represents the ability to express the characteristics of one particular parameter. It can be exressed as numerical or as text parameter (provided as subclasses of PrmCharContents)</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PrmChar"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="COND" type="AR:DOCUMENTATION-BLOCK">
            <xsd:annotation>
               <xsd:documentation>This represents the particular conditions under which the parameter characteristic is valid.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="PrmChar.cond";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:choice maxOccurs="1" minOccurs="0">
            <xsd:group ref="AR:PRM-CHAR-NUMERICAL-CONTENTS"/>
            <xsd:group ref="AR:PRM-CHAR-TEXTUAL-CONTENTS"/>
         </xsd:choice>
         <xsd:element maxOccurs="1" minOccurs="0" name="REMARK" type="AR:DOCUMENTATION-BLOCK">
            <xsd:annotation>
               <xsd:documentation>This represents further remarks about the particular parameter characteristics.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="PrmChar.remark";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="160"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class GerneralParameters::PrmChar -->
   <xsd:complexType abstract="false" mixed="false" name="PRM-CHAR">
      <xsd:annotation>
         <xsd:documentation>This metaclass represents the ability to express the characteristics of one particular parameter. It can be exressed as numerical or as text parameter (provided as subclasses of PrmCharContents)</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PrmChar"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:PRM-CHAR"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class OasisExchangeTable::Colspec -->
   <xsd:group name="COLSPEC">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to specify the properties of a column in a  table.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Colspec"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- attribute group for class OasisExchangeTable::Colspec -->
   <xsd:attributeGroup name="COLSPEC">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to specify the properties of a column in a  table.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Colspec"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="ALIGN" type="AR:ALIGN-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Specifies how the cell entries shall be horizontally aligned within the specified column.
Default is "LEFT"</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Colspec.align";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="COLNAME" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Specifies the name of the column.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Colspec.colname";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="COLNUM" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>column number (allows to sort the columns).</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Colspec.colnum";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="COLSEP" type="AR:TABLE-SEPARATOR-STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicates whether a line should be displayed right of this column in the column specification.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Colspec.colsep";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="COLWIDTH" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Width of the column.
You can enter absolute values such as 4 cm, 
or relative values marked with * (e.g.,  2* for column widths double those of other columns with 1*).
The unit can be added to the number in the string. Possible units are: cm, mm, px, pt.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Colspec.colwidth";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ROWSEP" type="AR:TABLE-SEPARATOR-STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicates whether a line should be displayed at the bottom end of the cells of the column defined in the Colspec.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Colspec.rowsep";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class OasisExchangeTable::Colspec -->
   <xsd:complexType abstract="false" mixed="false" name="COLSPEC">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to specify the properties of a column in a  table.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Colspec"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:COLSPEC"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:COLSPEC"/>
   </xsd:complexType>
 <!-- element group for class OasisExchangeTable::Tbody -->
   <xsd:group name="TBODY">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents a part within a table group. Such a part can be the table head, the table body or the table foot.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Tbody"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="ROW" type="AR:ROW">
            <xsd:annotation>
               <xsd:documentation>This is a particular row in a table.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Tbody.row";pureMM.maxOccurs="-1";pureMM.minOccurs="1";vh.latestBindingTime="postBuild";xml.roleElement="true";xml.roleWrapperElement="false";xml.sequenceOffset="20";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- attribute group for class OasisExchangeTable::Tbody -->
   <xsd:attributeGroup name="TBODY">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents a part within a table group. Such a part can be the table head, the table body or the table foot.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Tbody"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="VALIGN" type="AR:VALIGN-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicates how the cells in the rows shall be aligned. Default is inherited from tbody, otherwise it is "TOP"</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Tbody.valign";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class OasisExchangeTable::Tbody -->
   <xsd:complexType abstract="false" mixed="false" name="TBODY">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents a part within a table group. Such a part can be the table head, the table body or the table foot.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Tbody"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:TBODY"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:TBODY"/>
   </xsd:complexType>
 <!-- element group for class GerneralParameters::PrmCharNumericalContents -->
   <xsd:group name="PRM-CHAR-NUMERICAL-CONTENTS">
      <xsd:annotation>
         <xsd:documentation>This metaclass represents the fact that it is a numerical parameter.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PrmCharNumericalContents"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:choice maxOccurs="1" minOccurs="0">
            <xsd:group ref="AR:PRM-CHAR-ABS-TOL"/>
            <xsd:group ref="AR:PRM-CHAR-MIN-TYP-MAX"/>
         </xsd:choice>
         <xsd:element maxOccurs="1" minOccurs="0" name="PRM-UNIT" type="AR:SINGLE-LANGUAGE-UNIT-NAMES">
            <xsd:annotation>
               <xsd:documentation>This is the measurement unit. Note that due to the fact that Prm is also available outside of MSRSW / AUTOSAR, this is not a formal reference  to a unit.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="PrmCharNumericalContents.prmUnit";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="130"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class GerneralParameters::PrmCharNumericalContents -->
   <xsd:complexType abstract="false" mixed="false" name="PRM-CHAR-NUMERICAL-CONTENTS">
      <xsd:annotation>
         <xsd:documentation>This metaclass represents the fact that it is a numerical parameter.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PrmCharNumericalContents"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:PRM-CHAR-CONTENTS"/>
         <xsd:group ref="AR:PRM-CHAR-NUMERICAL-CONTENTS"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class GerneralParameters::PrmCharTextualContents -->
   <xsd:group name="PRM-CHAR-TEXTUAL-CONTENTS">
      <xsd:annotation>
         <xsd:documentation>This metaclass represents the fact that it is a textual parameter.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PrmCharTextualContents"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="TEXT" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>This is the value of a textual parameter</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="PrmCharTextualContents.text";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class GerneralParameters::PrmCharTextualContents -->
   <xsd:complexType abstract="false" mixed="false" name="PRM-CHAR-TEXTUAL-CONTENTS">
      <xsd:annotation>
         <xsd:documentation>This metaclass represents the fact that it is a textual parameter.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PrmCharTextualContents"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:PRM-CHAR-CONTENTS"/>
         <xsd:group ref="AR:PRM-CHAR-TEXTUAL-CONTENTS"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
  
<!-- element group for class Figure::Area -->
   <xsd:group name="AREA">
      <xsd:annotation>
         <xsd:documentation>This element specifies a region in an image map. Image maps enable authors to specify regions in an object (e.g. a graphic) and to assign a specific activity to each region (e.g. load a document, launch a program etc.).

For more details refer to the specification of HTML.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Area"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- attribute group for class Figure::Area -->
   <xsd:attributeGroup name="AREA">
      <xsd:annotation>
         <xsd:documentation>This element specifies a region in an image map. Image maps enable authors to specify regions in an object (e.g. a graphic) and to assign a specific activity to each region (e.g. load a document, launch a program etc.).

For more details refer to the specification of HTML.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Area"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="ACCESSKEY" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute assigns an access key to an element.
An access key is an individual character (e.g. "B") within the document character
range. If an access key with an element assigned to it is pressed, the element comes
into focus. The activity performed when an element comes into focus, is dependent on
the element itself</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Area.accesskey";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ALT" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute specifies the text to be inserted as an alternative to illustrations, shapes or applets, where these
cannot be displayed by user agents.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Area.alt";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="CLASS" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Blank separated list of classes</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Area.class";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="COORDS" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute specifies the position and shape on the screen.
The number of values and their order depend on the geometrical figure defined.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Area.coords";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="HREF" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute specifies the memory location of a web resource. It is therefore able to specify a link between the current element and the target element.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Area.href";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="NOHREF" type="AR:AREA-ENUM-NOHREF--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>If this attribute is set, the Area has no associated link.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Area.nohref";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ONBLUR" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The ONBLUR-Event occurs, when focus is switched away from an element. 

A script can be stored in this attribute to be performed in the Event.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Area.onblur";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ONCLICK" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The ONCLICK-Event occurs, if the current element is clicked-on. 

A script can be stored in this attribute to be performed in the Event.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Area.onclick";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ONDBLCLICK" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The ONCLICK-Event occurs, if the current element is "double" clicked-on. 

A script can be stored in this attribute to be performed in the Event.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Area.ondblclick";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ONFOCUS" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The ONFOCUS-Event occurs, if an element comes into focus (e.g., through navigation using the tab button). 

A script can be stored in this attribute to be performed in the Event.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Area.onfocus";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ONKEYDOWN" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The ONKEYDOWN-Event occurs, if a button on the current element is pressed down. 

A script can be stored in this attribute to be performed in the event.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Area.onkeydown";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ONKEYPRESS" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The ONKEYPRESS-Event occurs, if a button on the current element is pressed down and released. 

A script can be stored in this attribute to be performed in the Event.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Area.onkeypress";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ONKEYUP" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The ONKEYUP-Event occurs, if a button on the current element is released. 

A script can be stored in this attribute to be performed in the Event.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Area.onkeyup";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ONMOUSEDOWN" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The ONMOUSEDOWN-Event occurs, if the mouse button used for clicking is held down on the current element. 

A script can be stored in this attribute to be performed in the Event.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Area.onmousedown";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ONMOUSEMOVE" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The ONMOUSEMOVE-Event occurs, if the mouse pointer is moved on the current 
element (i.e. it is located on the current element). 

A script can be stored in this attribute to be performed in the Event.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Area.onmousemove";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ONMOUSEOUT" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The ONMOUSEOUT-Event occurs, if the mouse pointer is moved from the current element.

A script can be stored in this attribute to be performed in the Event.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Area.onmouseout";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ONMOUSEOVER" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The ONMOUSEOVER-Event occurs, if the mouse pointer is moved to the current element
from another location outside it. 

A script can be stored in this attribute to be performed in the Event.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Area.onmouseover";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ONMOUSEUP" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The ONMOUSEUP-Event occurs if the mouse button used for clicking is released on the
current element. 

A script can be stored in this attribute to be performed in the Event.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Area.onmouseup";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="SHAPE" type="AR:AREA-ENUM-SHAPE--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>The shape of the area. Note that in HTML this is defaulted to RECT.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Area.shape";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="STYLE" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Information on the associated style</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Area.style";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="TABINDEX" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute specifies the position of the current element in tabbing-order for the corresponding document.

The value must lie between 0 and 32767. The Tabbing Order defines the sequence in which elements are focused on, when the user navigates using the keyboard.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Area.tabindex";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="TITLE" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Title information of the Area element</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Area.title";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class Figure::Area -->
   <xsd:complexType abstract="false" mixed="false" name="AREA">
      <xsd:annotation>
         <xsd:documentation>This element specifies a region in an image map. Image maps enable authors to specify regions in an object (e.g. a graphic) and to assign a specific activity to each region (e.g. load a document, launch a program etc.).

For more details refer to the specification of HTML.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Area"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:AREA"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:AREA"/>
   </xsd:complexType>
<!-- element group for class GerneralParameters::PrmCharAbsTol -->
   <xsd:group name="PRM-CHAR-ABS-TOL">
      <xsd:annotation>
         <xsd:documentation>The parameter is specified as ablolute value with a tolerance.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PrmCharAbsTol"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ABS" type="AR:NUMERICAL-VALUE">
            <xsd:annotation>
               <xsd:documentation>This represnts the absolute value of the parameter.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="PrmCharAbsTol.abs";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="70"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TOL" type="AR:NUMERICAL-VALUE">
            <xsd:annotation>
               <xsd:documentation>This represnts the tolerance of the parameter in the same units as the paramter: E.g. Tmperature= 50 +- 0.5 grad.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="PrmCharAbsTol.tol";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="80"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class GerneralParameters::PrmCharAbsTol -->
   <xsd:complexType abstract="false" mixed="false" name="PRM-CHAR-ABS-TOL">
      <xsd:annotation>
         <xsd:documentation>The parameter is specified as ablolute value with a tolerance.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PrmCharAbsTol"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:PRM-CHAR-NUMERICAL-VALUE"/>
         <xsd:group ref="AR:PRM-CHAR-ABS-TOL"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class GerneralParameters::PrmCharMinTypMax -->
   <xsd:group name="PRM-CHAR-MIN-TYP-MAX">
      <xsd:annotation>
         <xsd:documentation>This metaclass represents the characteristics of a parameter as minimal, typical maximum value.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PrmCharMinTypMax"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="MIN" type="AR:NUMERICAL-VALUE">
            <xsd:annotation>
               <xsd:documentation>This represnts the minimum value of the parameter.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="PrmCharMinTypMax.min";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="100"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TYP" type="AR:NUMERICAL-VALUE">
            <xsd:annotation>
               <xsd:documentation>This represnts the typical value of the parameter.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="PrmCharMinTypMax.typ";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="110"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MAX" type="AR:NUMERICAL-VALUE">
            <xsd:annotation>
               <xsd:documentation>This represnts the maximum value of the parameter.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="PrmCharMinTypMax.max";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="120"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class GerneralParameters::PrmCharMinTypMax -->
   <xsd:complexType abstract="false" mixed="false" name="PRM-CHAR-MIN-TYP-MAX">
      <xsd:annotation>
         <xsd:documentation>This metaclass represents the characteristics of a parameter as minimal, typical maximum value.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PrmCharMinTypMax"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:PRM-CHAR-NUMERICAL-VALUE"/>
         <xsd:group ref="AR:PRM-CHAR-MIN-TYP-MAX"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:simpleType name="VALIGN-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BOTTOM">
            <xsd:annotation>
               <xsd:documentation>The contents of the table cell is bottom aligned.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ValignEnum.bottom"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MIDDLE">
            <xsd:annotation>
               <xsd:documentation>The contents of the table is vertically centered.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ValignEnum.middle"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TOP">
            <xsd:annotation>
               <xsd:documentation>The contents of the table cell is top aligned.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ValignEnum.top"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
 <!-- element group for class GerneralParameters::PrmCharContents -->
   <xsd:group name="PRM-CHAR-CONTENTS">
      <xsd:annotation>
         <xsd:documentation>This is the contents of the parameter.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PrmCharContents"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
<xsd:simpleType name="AREA-ENUM-NOHREF--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NOHREF">
            <xsd:annotation>
               <xsd:documentation>This indicates that the area has no active link.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AreaEnumNohref.nohref"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:complexType name="AREA-ENUM-SHAPE">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies the shape of the area.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AreaEnumShape"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:AREA-ENUM-SHAPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="AREA-ENUM-SHAPE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CIRCLE">
            <xsd:annotation>
               <xsd:documentation>The shape is a circle.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AreaEnumShape.circle"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DEFAULT">
            <xsd:annotation>
               <xsd:documentation>This specifies the fact that the area covers the rest of the figure.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AreaEnumShape.default"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="POLY">
            <xsd:annotation>
               <xsd:documentation>The area is specified as polygon.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AreaEnumShape.poly"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RECT">
            <xsd:annotation>
               <xsd:documentation>The shape is specified as rectangle.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AreaEnumShape.rect"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
 <!-- element group for class OasisExchangeTable::Row -->
   <xsd:group name="ROW">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to express one row in a table.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Row"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="ENTRY" type="AR:ENTRY">
            <xsd:annotation>
               <xsd:documentation>This represents one particular table cell. It is an entry in the table.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Row.entry";pureMM.maxOccurs="-1";pureMM.minOccurs="1";xml.roleElement="true";xml.roleWrapperElement="false";xml.sequenceOffset="20";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Row.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- attribute group for class OasisExchangeTable::Row -->
   <xsd:attributeGroup name="ROW">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to express one row in a table.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Row"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="ROWSEP" type="AR:TABLE-SEPARATOR-STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicates if by default a line should be displayed below the row.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Row.rowsep";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="VALIGN" type="AR:VALIGN-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicates how the cells in the rows shall be aligned. Default is inherited from tbody, otherwise it is "TOP"</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Row.valign";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class OasisExchangeTable::Row -->
   <xsd:complexType abstract="false" mixed="false" name="ROW">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to express one row in a table.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Row"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
         <xsd:group ref="AR:PAGINATEABLE"/>
         <xsd:group ref="AR:ROW"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:DOCUMENT-VIEW-SELECTABLE"/>
      <xsd:attributeGroup ref="AR:PAGINATEABLE"/>
      <xsd:attributeGroup ref="AR:ROW"/>
   </xsd:complexType>
<!-- element group for class GerneralParameters::PrmCharNumericalValue -->
   <xsd:group name="PRM-CHAR-NUMERICAL-VALUE">
      <xsd:annotation>
         <xsd:documentation>This metaclass represents a numercial parameter characteristics.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PrmCharNumericalValue"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
<xsd:complexType name="NUMERICAL-VALUE">
      <xsd:annotation>
         <xsd:documentation>This primitive specifies a numerical value. It can be denoted in different formats such as Decimal, Octal, Hexadecimal, Float. See the xsd pattern for details.

The value can be expressed in octal, hexadecimal, binary representation. Negative numbers can only be expressed in decimal or float notation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Numerical";xml.xsd.customType="NUMERICAL-VALUE";xml.xsd.pattern="(0x[0-9a-f]+)|(0[0-7]+)|(0b[0-1]+)|(([+\-]?[1-9][0-9]+(\.[0-9]+)?|[+\-]?[0-9](\.[0-9]+)?)(E([+\-]?)[0-9]+)?)|\.0|INF|-INF|NaN";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:NUMERICAL-VALUE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="NUMERICAL-VALUE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="(0x[0-9a-f]+)|(0[0-7]+)|(0b[0-1]+)|(([+\-]?[1-9][0-9]+(\.[0-9]+)?|[+\-]?[0-9](\.[0-9]+)?)(E([+\-]?)[0-9]+)?)|\.0|INF|-INF|NaN"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class OasisExchangeTable::Entry -->
   <xsd:group name="ENTRY">
      <xsd:annotation>
         <xsd:documentation>This represents one particular table cell.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Entry"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="BGCOLOR" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>This allows to recommend a background color of the entry. It is specified bases on 6 digits RGB hex-code.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Entry.bgcolor";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:choice maxOccurs="1" minOccurs="0">
            <xsd:group ref="AR:DOCUMENTATION-BLOCK"/>
         </xsd:choice>
      </xsd:sequence>
   </xsd:group>
   <!-- attribute group for class OasisExchangeTable::Entry -->
   <xsd:attributeGroup name="ENTRY">
      <xsd:annotation>
         <xsd:documentation>This represents one particular table cell.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Entry"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="ALIGN" type="AR:ALIGN-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Specifies how the cell ENTRY shall be horizontally aligned.  Default is "LEFT"</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Entry.align";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="COLNAME" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicate the name of the column, where the entry should appear.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Entry.colname";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="COLSEP" type="AR:TABLE-SEPARATOR-STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicates whether a line should be displayed end of this entry.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Entry.colsep";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="MOREROWS" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Number of additional rows. Default is "0"</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Entry.morerows";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="NAMEEND" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>When an entry spans multiple column this is the name of the last column.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Entry.nameend";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="NAMEST" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>When an entry spans multiple column this is the name of the first column.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Entry.namest";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ROTATE" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicates if the cellcontent shall be rotated. Default is 0; 1 would rotate the contents 90 degree counterclockwise. This attribute is defined by OASIS.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Entry.rotate";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="ROWSEP" type="AR:TABLE-SEPARATOR-STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicates whether a line should be displayed at the bottom end of the cell.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Entry.rowsep";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="SPANNAME" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Capture the name of entry merging multiple columns.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Entry.spanname";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="VALIGN" type="AR:VALIGN-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Indicates how the content of the cell shall be aligned. Default is inherited from row or tbody, otherwise "TOP"</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Entry.valign";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class OasisExchangeTable::Entry -->
   <xsd:complexType abstract="false" mixed="false" name="ENTRY">
      <xsd:annotation>
         <xsd:documentation>This represents one particular table cell.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Entry"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ENTRY"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:ENTRY"/>
   </xsd:complexType>
 <!-- element group for class ECUCDescriptionTemplate::EcucModuleConfigurationValues -->
   <xsd:group name="ECUC-MODULE-CONFIGURATION-VALUES">
      <xsd:annotation>
         <xsd:documentation>Head of the configuration of one Module. A Module can be a BSW module as well as the RTE and ECU Infrastructure.

As part of the BSW module description, the EcucModuleConfigurationValues element has two different roles:

The recommendedConfiguration contains parameter values recommended by the BSW module vendor. 

The preconfiguredConfiguration contains values for those parameters which are fixed by the implementation and cannot be changed.

These two EcucModuleConfigurationValues are used when the base EcucModuleConfigurationValues (as part of the base ECU configuration) is created to fill parameters with initial values.</xsd:documentation>
         <xsd:appinfo source="tags">atp.recommendedPackage="EcucModuleConfigurationValuess";mmt.qualifiedName="EcucModuleConfigurationValues"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="DEFINITION-REF">
            <xsd:annotation>
               <xsd:documentation>Reference to the definition of this EcucModuleConfigurationValues element. Typically, this is a vendor specific module configuration.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucModuleConfigurationValues.definition";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="-10"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:ECUC-MODULE-DEF--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ECUC-DEF-EDITION" type="AR:REVISION-LABEL-STRING">
            <xsd:annotation>
               <xsd:documentation>This is the version info of the ModuleDef ECUC Parameter definition to which this values conform to / are based on.

For the Definition of ModuleDef ECUC Parameters the AdminData shall be used to express the semantic changes. The compatibility rules between the definition and value revision labels is up to the module's vendor.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucModuleConfigurationValues.ecucDefEdition";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="IMPLEMENTATION-CONFIG-VARIANT" type="AR:ECUC-CONFIGURATION-VARIANT-ENUM">
            <xsd:annotation>
               <xsd:documentation>Specifies the kind of deliverable this EcucModuleConfigurationValues element provides. If this element is not used in a particular role (e.g. preconfiguredConfiguration or recommendedConfiguration) then the value must be one of VariantPreCompile, VariantLinkTime, VariantPostBuild.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucModuleConfigurationValues.implementationConfigVariant";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MODULE-DESCRIPTION-REF">
            <xsd:annotation>
               <xsd:documentation>Referencing the BSW module description, which this EcucModuleConfigurationValues element is configuring. This is optional because the EcucModuleConfigurationValues element is also used to configure the ECU infrastructure (memory map) or Application SW-Cs. However in case the EcucModuleConfigurationValues are used to configure the module, the reference is mandatory in order to fetch module specific "common" published information.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucModuleConfigurationValues.moduleDescription";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:BSW-IMPLEMENTATION--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="CONTAINERS">
            <xsd:annotation>
               <xsd:documentation>Aggregates all containers that belong to this module configuration.

atpVariation: [RS_ECUC_00078]
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="definition, shortName, variationPoint.shortLabel";mmt.qualifiedName="EcucModuleConfigurationValues.container";pureMM.maxOccurs="-1";pureMM.minOccurs="1";vh.latestBindingTime="postBuild";xml.sequenceOffset="10"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ECUC-CONTAINER-VALUE" type="AR:ECUC-CONTAINER-VALUE"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCDescriptionTemplate::EcucModuleConfigurationValues -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-MODULE-CONFIGURATION-VALUES">
      <xsd:annotation>
         <xsd:documentation>Head of the configuration of one Module. A Module can be a BSW module as well as the RTE and ECU Infrastructure.

As part of the BSW module description, the EcucModuleConfigurationValues element has two different roles:

The recommendedConfiguration contains parameter values recommended by the BSW module vendor. 

The preconfiguredConfiguration contains values for those parameters which are fixed by the implementation and cannot be changed.

These two EcucModuleConfigurationValues are used when the base EcucModuleConfigurationValues (as part of the base ECU configuration) is created to fill parameters with initial values.</xsd:documentation>
         <xsd:appinfo source="tags">atp.recommendedPackage="EcucModuleConfigurationValuess";mmt.qualifiedName="EcucModuleConfigurationValues"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:COLLECTABLE-ELEMENT"/>
         <xsd:group ref="AR:PACKAGEABLE-ELEMENT"/>
         <xsd:group ref="AR:AR-ELEMENT"/>
         <xsd:group ref="AR:ECUC-MODULE-CONFIGURATION-VALUES"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
   


<!-- element group for class ECUCDescriptionTemplate::EcucContainerValue -->
   <xsd:group name="ECUC-CONTAINER-VALUE">
      <xsd:annotation>
         <xsd:documentation>Represents a Container definition in the ECU Configuration Description.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucContainerValue"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="DEFINITION-REF">
            <xsd:annotation>
               <xsd:documentation>Reference to the definition of this Container in the ECU Configuration Parameter Definition.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucContainerValue.definition";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="-10"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:ECUC-CONTAINER-DEF--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="PARAMETER-VALUES">
            <xsd:annotation>
               <xsd:documentation>Aggregates all ECU Configuration Values within this Container.

atpVariation: [RS_ECUC_00079]
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="definition, variationPoint.shortLabel";mmt.qualifiedName="EcucContainerValue.parameterValue";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="postBuild"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ECUC-ADD-INFO-PARAM-VALUE" type="AR:ECUC-ADD-INFO-PARAM-VALUE"/>
                  <xsd:element name="ECUC-NUMERICAL-PARAM-VALUE" type="AR:ECUC-NUMERICAL-PARAM-VALUE"/>
                  <xsd:element name="ECUC-TEXTUAL-PARAM-VALUE" type="AR:ECUC-TEXTUAL-PARAM-VALUE"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="REFERENCE-VALUES">
            <xsd:annotation>
               <xsd:documentation>Aggregates all References with this container.

atpVariation: [RS_ECUC_00079]
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="definition, variationPoint.shortLabel";mmt.qualifiedName="EcucContainerValue.referenceValue";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="postBuild"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ECUC-INSTANCE-REFERENCE-VALUE" type="AR:ECUC-INSTANCE-REFERENCE-VALUE"/>
                  <xsd:element name="ECUC-REFERENCE-VALUE" type="AR:ECUC-REFERENCE-VALUE"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SUB-CONTAINERS">
            <xsd:annotation>
               <xsd:documentation>Aggregates all sub-containers within this container.

atpVariation: [RS_ECUC_00078]
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="definition, shortName, variationPoint.shortLabel";mmt.qualifiedName="EcucContainerValue.subContainer";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="postBuild"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ECUC-CONTAINER-VALUE" type="AR:ECUC-CONTAINER-VALUE"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucContainerValue.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCDescriptionTemplate::EcucContainerValue -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-CONTAINER-VALUE">
      <xsd:annotation>
         <xsd:documentation>Represents a Container definition in the ECU Configuration Description.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucContainerValue"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ECUC-INDEXABLE-VALUE"/>
         <xsd:group ref="AR:ECUC-CONTAINER-VALUE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>

<!-- element group for class ECUCDescriptionTemplate::EcucAddInfoParamValue -->
   <xsd:group name="ECUC-ADD-INFO-PARAM-VALUE">
      <xsd:annotation>
         <xsd:documentation>This parameter corresponds to EcucAddInfoParamDef.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucAddInfoParamValue"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="VALUE" type="AR:DOCUMENTATION-BLOCK">
            <xsd:annotation>
               <xsd:documentation>Holds the content of the formated text.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucAddInfoParamValue.value";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCDescriptionTemplate::EcucAddInfoParamValue -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-ADD-INFO-PARAM-VALUE">
      <xsd:annotation>
         <xsd:documentation>This parameter corresponds to EcucAddInfoParamDef.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucAddInfoParamValue"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ECUC-INDEXABLE-VALUE"/>
         <xsd:group ref="AR:ECUC-PARAMETER-VALUE"/>
         <xsd:group ref="AR:ECUC-ADD-INFO-PARAM-VALUE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class ECUCDescriptionTemplate::EcucNumericalParamValue -->
   <xsd:group name="ECUC-NUMERICAL-PARAM-VALUE">
      <xsd:annotation>
         <xsd:documentation>Holding the value which is subject to variant handling.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucNumericalParamValue"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="VALUE" type="AR:NUMERICAL-VALUE-VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>Value which is subject to variant handling.

atpVariation: [RS_ECUC_00080]</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucNumericalParamValue.value";pureMM.maxOccurs="1";pureMM.minOccurs="1";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCDescriptionTemplate::EcucNumericalParamValue -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-NUMERICAL-PARAM-VALUE">
      <xsd:annotation>
         <xsd:documentation>Holding the value which is subject to variant handling.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucNumericalParamValue"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ECUC-INDEXABLE-VALUE"/>
         <xsd:group ref="AR:ECUC-PARAMETER-VALUE"/>
         <xsd:group ref="AR:ECUC-NUMERICAL-PARAM-VALUE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class ECUCDescriptionTemplate::EcucInstanceReferenceValue -->
   <xsd:group name="ECUC-INSTANCE-REFERENCE-VALUE">
      <xsd:annotation>
         <xsd:documentation>InstanceReference representation in the ECU Configuration.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucInstanceReferenceValue"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="VALUE-IREF" type="AR:ANY-INSTANCE-REF">
            <xsd:annotation>
               <xsd:documentation>InstanceReference representation in the ECU Configuration.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucInstanceReferenceValue.value";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCDescriptionTemplate::EcucInstanceReferenceValue -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-INSTANCE-REFERENCE-VALUE">
      <xsd:annotation>
         <xsd:documentation>InstanceReference representation in the ECU Configuration.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucInstanceReferenceValue"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ECUC-INDEXABLE-VALUE"/>
         <xsd:group ref="AR:ECUC-ABSTRACT-REFERENCE-VALUE"/>
         <xsd:group ref="AR:ECUC-INSTANCE-REFERENCE-VALUE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class ECUCDescriptionTemplate::EcucReferenceValue -->
   <xsd:group name="ECUC-REFERENCE-VALUE">
      <xsd:annotation>
         <xsd:documentation>Used to represent a configuration value that has a parameter definition of type EcucAbstractReferenceDef(used for all of its specializations excluding EcucInstanceReferenceDef).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucReferenceValue"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="VALUE-REF">
            <xsd:annotation>
               <xsd:documentation>Specifies the destination of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucReferenceValue.value";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:REFERRABLE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ECUCDescriptionTemplate::EcucReferenceValue -->
   <xsd:complexType abstract="false" mixed="false" name="ECUC-REFERENCE-VALUE">
      <xsd:annotation>
         <xsd:documentation>Used to represent a configuration value that has a parameter definition of type EcucAbstractReferenceDef(used for all of its specializations excluding EcucInstanceReferenceDef).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucReferenceValue"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ECUC-INDEXABLE-VALUE"/>
         <xsd:group ref="AR:ECUC-ABSTRACT-REFERENCE-VALUE"/>
         <xsd:group ref="AR:ECUC-REFERENCE-VALUE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>

<!-- element group for class ECUCDescriptionTemplate::EcucAbstractReferenceValue -->
   <xsd:group name="ECUC-ABSTRACT-REFERENCE-VALUE">
      <xsd:annotation>
         <xsd:documentation>Abstract class to be used as common parent for all reference values in the ECU Configuration Description.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucAbstractReferenceValue"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="DEFINITION-REF">
            <xsd:annotation>
               <xsd:documentation>Reference to the definition of this EcucAbstractReferenceValue subclasses in the ECU Configuration Parameter Definition.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucAbstractReferenceValue.definition";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="-10"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:ECUC-ABSTRACT-REFERENCE-DEF--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ANNOTATIONS">
            <xsd:annotation>
               <xsd:documentation>Possibility to provide additional notes while defining a model element (e.g. the ECU Configuration Parameter Values). These are not intended as documentation but are mere design notes.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucAbstractReferenceValue.annotation";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ANNOTATION" type="AR:ANNOTATION"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="EcucAbstractReferenceValue.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
 <!-- element group for class BswOverview::BswModuleDescription -->
   <xsd:group name="BSW-MODULE-DESCRIPTION">
      <xsd:annotation>
         <xsd:documentation>Root element for the description of a single BSW module or BSW cluster.
In case it describes a BSW module, the short name of this element equals the name of the BSW module.</xsd:documentation>
         <xsd:appinfo source="tags">atp.recommendedPackage="BswModuleDescriptions";mmt.qualifiedName="BswModuleDescription"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="MODULE-ID" type="AR:POSITIVE-INTEGER">
            <xsd:annotation>
               <xsd:documentation>Refers to the BSW Module Identifier defined by the AUTOSAR standard. For non-standardized modules, a proprietary identifier can be optionally chosen.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleDescription.moduleId";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="5"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="BSW-MODULE-DOCUMENTATIONS">
            <xsd:annotation>
               <xsd:documentation>This adds a documentation to the BSW module.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="bswModuleDocumentation, variationPoint.shortLabel";mmt.qualifiedName="BswModuleDescription.bswModuleDocumentation";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="6"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="SW-COMPONENT-DOCUMENTATION" type="AR:SW-COMPONENT-DOCUMENTATION"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="PROVIDED-ENTRYS">
            <xsd:annotation>
               <xsd:documentation>Specifies an entry provided by this module which can be called by other modules. This includes "main" functions and interrupt routines, but not callbacks (because the signature of a callback is defined by the caller).
This property was modified due to atpVariation (DirectedAssociationPattern).</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="providedEntry, variationPoint.shortLabel";mmt.qualifiedName="BswModuleDescription.providedEntry";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="10"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-MODULE-ENTRY-REF-CONDITIONAL" type="AR:BSW-MODULE-ENTRY-REF-CONDITIONAL"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="OUTGOING-CALLBACKS">
            <xsd:annotation>
               <xsd:documentation>Specifies a callback, which will be called from this module if required by 
another module.
This property was modified due to atpVariation (DirectedAssociationPattern).</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="outgoingCallback, variationPoint.shortLabel";mmt.qualifiedName="BswModuleDescription.outgoingCallback";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="15"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-MODULE-ENTRY-REF-CONDITIONAL" type="AR:BSW-MODULE-ENTRY-REF-CONDITIONAL"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="BSW-MODULE-DEPENDENCYS">
            <xsd:annotation>
               <xsd:documentation>Describes the dependency to another BSW module.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="BswModuleDescription.bswModuleDependency";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="20"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-MODULE-DEPENDENCY" type="AR:BSW-MODULE-DEPENDENCY"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="PROVIDED-MODE-GROUPS">
            <xsd:annotation>
               <xsd:documentation>A set of modes which is owned and provided by this module or cluster. It can be connected to the requiredModeGroups of other modules or clusters via the configuration of the BswScheduler. It can also be synchronized with modes provided via ports by an associated ServiceSwComponentType, EcuAbstractionSwComponentType or ComplexDeviceDriverSwComponentType.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="BswModuleDescription.providedModeGroup";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="25"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="MODE-DECLARATION-GROUP-PROTOTYPE" type="AR:MODE-DECLARATION-GROUP-PROTOTYPE"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="REQUIRED-MODE-GROUPS">
            <xsd:annotation>
               <xsd:documentation>Specifies that this module or cluster depends on a certain mode group. The requiredModeGroup is local to  this context and will be connected to the providedModeGroup of another module or cluster via the configuration of the BswScheduler.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="BswModuleDescription.requiredModeGroup";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="30"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="MODE-DECLARATION-GROUP-PROTOTYPE" type="AR:MODE-DECLARATION-GROUP-PROTOTYPE"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="RELEASED-TRIGGERS">
            <xsd:annotation>
               <xsd:documentation>A Trigger released by this module or cluster. It can be connected to the requiredTriggers of other modules or clusters via the configuration of the BswScheduler. It can also be synchronized with Triggers provided via ports by an associated ServiceSwComponentType, EcuAbstractionSwComponentType or ComplexDeviceDriverSwComponentType.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="BswModuleDescription.releasedTrigger";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="35"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="TRIGGER" type="AR:TRIGGER"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="REQUIRED-TRIGGERS">
            <xsd:annotation>
               <xsd:documentation>Specifies that this module or cluster reacts upon an external trigger.This requiredTrigger is declared locally to this context and will be connected to the providedTrigger of another module or cluster via the configuration of the BswScheduler.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="BswModuleDescription.requiredTrigger";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="40"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="TRIGGER" type="AR:TRIGGER"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="PROVIDED-CLIENT-SERVER-ENTRYS">
            <xsd:annotation>
               <xsd:documentation>Specifies that this module provides a client server entry which can be called from another parition or core.This entry is declared locally to this context and will be connected to the requiredClientServerEntry of another or the same module via the configuration of the BSW Scheduler.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="BswModuleDescription.providedClientServerEntry";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="45"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-MODULE-CLIENT-SERVER-ENTRY" type="AR:BSW-MODULE-CLIENT-SERVER-ENTRY"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="REQUIRED-CLIENT-SERVER-ENTRYS">
            <xsd:annotation>
               <xsd:documentation>Specifies that this module requires a client server entry which can be implemented on another parition or core.This entry is declared locally to this context and will be connected to the providedClientServerEntry of another or the same module via the configuration of the BSW Scheduler.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="BswModuleDescription.requiredClientServerEntry";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="50"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-MODULE-CLIENT-SERVER-ENTRY" type="AR:BSW-MODULE-CLIENT-SERVER-ENTRY"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="PROVIDED-DATAS">
            <xsd:annotation>
               <xsd:documentation>Specifies a data prototype provided by this module in order to be read  from another partition or core.The providedData is declared locally to this context and will be connected to the requiredData of another or the same module via the configuration of the BSW Scheduler.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="BswModuleDescription.providedData";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="55"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="VARIABLE-DATA-PROTOTYPE" type="AR:VARIABLE-DATA-PROTOTYPE"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="REQUIRED-DATAS">
            <xsd:annotation>
               <xsd:documentation>Specifies a data prototype required by this module in oder to be provided from another partition or core.The requiredData is declared locally to this context and will be connected to the providedData of another or the same module via the configuration of the BswScheduler.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="BswModuleDescription.requiredData";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="60"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="VARIABLE-DATA-PROTOTYPE" type="AR:VARIABLE-DATA-PROTOTYPE"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="INTERNAL-BEHAVIORS">
            <xsd:annotation>
               <xsd:documentation>The various BswInternalBehaviors associated with a BswModuleDescription can be distributed over several physical files. Therefore the aggregation is &lt;&lt;atpSplitable&gt;&gt;.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName";mmt.qualifiedName="BswModuleDescription.internalBehavior";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.sequenceOffset="65"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-INTERNAL-BEHAVIOR" type="AR:BSW-INTERNAL-BEHAVIOR"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswOverview::BswModuleDescription -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-MODULE-DESCRIPTION">
      <xsd:annotation>
         <xsd:documentation>Root element for the description of a single BSW module or BSW cluster.
In case it describes a BSW module, the short name of this element equals the name of the BSW module.</xsd:documentation>
         <xsd:appinfo source="tags">atp.recommendedPackage="BswModuleDescriptions";mmt.qualifiedName="BswModuleDescription"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:COLLECTABLE-ELEMENT"/>
         <xsd:group ref="AR:PACKAGEABLE-ELEMENT"/>
         <xsd:group ref="AR:AR-ELEMENT"/>
         <xsd:group ref="AR:ATP-CLASSIFIER"/>
         <xsd:group ref="AR:ATP-FEATURE"/>
         <xsd:group ref="AR:ATP-STRUCTURE-ELEMENT"/>
         <xsd:group ref="AR:BSW-MODULE-DESCRIPTION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
   <xsd:simpleType name="BSW-MODULE-DESCRIPTION--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BSW-MODULE-DESCRIPTION"/>
      </xsd:restriction>
   </xsd:simpleType>
 <!-- element group for class AbstractStructure::AtpClassifier -->
   <xsd:group name="ATP-CLASSIFIER">
      <xsd:annotation>
         <xsd:documentation>A classifier classifies M0 instances according to their features. Or: a classifier is something that has instances - an M1 classifier has M0 instances.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AtpClassifier"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <!-- Association <<atpDerived>>atpFeature skipped -->
      </xsd:sequence>
   </xsd:group>
 <!-- element group for class AbstractStructure::AtpFeature -->
   <xsd:group name="ATP-FEATURE">
      <xsd:annotation>
         <xsd:documentation>Features are properties via which a classifier classifies instances. Or: a classifier has features and every M0 instance of it will have those features.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AtpFeature"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <xsd:simpleType name="ATP-FEATURE--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ABSTRACT-PROVIDED-PORT-PROTOTYPE"/>
         <xsd:enumeration value="ABSTRACT-REQUIRED-PORT-PROTOTYPE"/>
         <xsd:enumeration value="APPLICATION-ARRAY-ELEMENT"/>
         <xsd:enumeration value="APPLICATION-COMPOSITE-ELEMENT-DATA-PROTOTYPE"/>
         <xsd:enumeration value="APPLICATION-RECORD-ELEMENT"/>
         <xsd:enumeration value="ARGUMENT-DATA-PROTOTYPE"/>
         <xsd:enumeration value="ASSEMBLY-SW-CONNECTOR"/>
         <xsd:enumeration value="ASYNCHRONOUS-SERVER-CALL-POINT"/>
         <xsd:enumeration value="ASYNCHRONOUS-SERVER-CALL-RESULT-POINT"/>
         <xsd:enumeration value="ASYNCHRONOUS-SERVER-CALL-RETURNS-EVENT"/>
         <xsd:enumeration value="ATP-FEATURE"/>
         <xsd:enumeration value="ATP-PROTOTYPE"/>
         <xsd:enumeration value="ATP-STRUCTURE-ELEMENT"/>
         <xsd:enumeration value="AUTOSAR-DATA-PROTOTYPE"/>
         <xsd:enumeration value="BACKGROUND-EVENT"/>
         <xsd:enumeration value="BSW-INTERNAL-BEHAVIOR"/>
         <xsd:enumeration value="BSW-MODULE-DESCRIPTION"/>
         <xsd:enumeration value="BSW-SERVICE-DEPENDENCY-IDENT"/>
         <xsd:enumeration value="CLIENT-SERVER-OPERATION"/>
         <xsd:enumeration value="DATA-PROTOTYPE"/>
         <xsd:enumeration value="DATA-PROTOTYPE-GROUP"/>
         <xsd:enumeration value="DATA-RECEIVE-ERROR-EVENT"/>
         <xsd:enumeration value="DATA-RECEIVED-EVENT"/>
         <xsd:enumeration value="DATA-SEND-COMPLETED-EVENT"/>
         <xsd:enumeration value="DATA-WRITE-COMPLETED-EVENT"/>
         <xsd:enumeration value="DELEGATION-SW-CONNECTOR"/>
         <xsd:enumeration value="EXTERNAL-TRIGGER-OCCURRED-EVENT"/>
         <xsd:enumeration value="EXTERNAL-TRIGGERING-POINT-IDENT"/>
         <xsd:enumeration value="IDENT-CAPTION"/>
         <xsd:enumeration value="INIT-EVENT"/>
         <xsd:enumeration value="INTERNAL-BEHAVIOR"/>
         <xsd:enumeration value="INTERNAL-TRIGGER-OCCURRED-EVENT"/>
         <xsd:enumeration value="INTERNAL-TRIGGERING-POINT"/>
         <xsd:enumeration value="MODE-ACCESS-POINT-IDENT"/>
         <xsd:enumeration value="MODE-DECLARATION"/>
         <xsd:enumeration value="MODE-DECLARATION-GROUP-PROTOTYPE"/>
         <xsd:enumeration value="MODE-DECLARATION-MAPPING"/>
         <xsd:enumeration value="MODE-SWITCH-POINT"/>
         <xsd:enumeration value="MODE-SWITCHED-ACK-EVENT"/>
         <xsd:enumeration value="MODE-TRANSITION"/>
         <xsd:enumeration value="NV-BLOCK-DESCRIPTOR"/>
         <xsd:enumeration value="OPERATION-INVOKED-EVENT"/>
         <xsd:enumeration value="P-PORT-PROTOTYPE"/>
         <xsd:enumeration value="PR-PORT-PROTOTYPE"/>
         <xsd:enumeration value="PARAMETER-ACCESS"/>
         <xsd:enumeration value="PARAMETER-DATA-PROTOTYPE"/>
         <xsd:enumeration value="PASS-THROUGH-SW-CONNECTOR"/>
         <xsd:enumeration value="PER-INSTANCE-MEMORY"/>
         <xsd:enumeration value="PORT-GROUP"/>
         <xsd:enumeration value="PORT-PROTOTYPE"/>
         <xsd:enumeration value="PORT-PROTOTYPE-BLUEPRINT"/>
         <xsd:enumeration value="R-PORT-PROTOTYPE"/>
         <xsd:enumeration value="RTE-EVENT"/>
         <xsd:enumeration value="ROOT-SW-COMPOSITION-PROTOTYPE"/>
         <xsd:enumeration value="RUNNABLE-ENTITY"/>
         <xsd:enumeration value="RUNNABLE-ENTITY-GROUP"/>
         <xsd:enumeration value="SERVER-CALL-POINT"/>
         <xsd:enumeration value="SW-COMPONENT-PROTOTYPE"/>
         <xsd:enumeration value="SW-CONNECTOR"/>
         <xsd:enumeration value="SWC-BSW-MAPPING"/>
         <xsd:enumeration value="SWC-INTERNAL-BEHAVIOR"/>
         <xsd:enumeration value="SWC-MODE-MANAGER-ERROR-EVENT"/>
         <xsd:enumeration value="SWC-MODE-SWITCH-EVENT"/>
         <xsd:enumeration value="SWC-SERVICE-DEPENDENCY"/>
         <xsd:enumeration value="SYNCHRONOUS-SERVER-CALL-POINT"/>
         <xsd:enumeration value="SYSTEM"/>
         <xsd:enumeration value="TIMING-EVENT"/>
         <xsd:enumeration value="TRANSFORMER-HARD-ERROR-EVENT"/>
         <xsd:enumeration value="TRIGGER"/>
         <xsd:enumeration value="VARIABLE-ACCESS"/>
         <xsd:enumeration value="VARIABLE-DATA-PROTOTYPE"/>
      </xsd:restriction>
   </xsd:simpleType>

 <!-- element group for class AbstractStructure::AtpStructureElement -->
   <xsd:group name="ATP-STRUCTURE-ELEMENT">
      <xsd:annotation>
         <xsd:documentation>A structure element is both a classifier and a feature. As a feature, its structure is given by the feature it owns as a classifier.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AtpStructureElement"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
 <!-- element group for class SoftwareComponentDocumentation::SwComponentDocumentation -->
   <xsd:group name="SW-COMPONENT-DOCUMENTATION">
      <xsd:annotation>
         <xsd:documentation>This class specifies the ability to write dedicated documentation to a component type according to ASAM FSX.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwComponentDocumentation"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-FEATURE-DEF" type="AR:CHAPTER">
            <xsd:annotation>
               <xsd:documentation>This element contains the definition of the physical functionality of this software component. This definition is more or less formal and is intended to be delivered from modeling tools.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwComponentDocumentation.swFeatureDef";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.roleElement="true";xml.sequenceOffset="20";xml.typeElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-FEATURE-DESC" type="AR:CHAPTER">
            <xsd:annotation>
               <xsd:documentation>This element contains the textual description of the software functionality of this software component. Expert should write this description.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwComponentDocumentation.swFeatureDesc";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.roleElement="true";xml.sequenceOffset="30";xml.typeElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-TEST-DESC" type="AR:CHAPTER">
            <xsd:annotation>
               <xsd:documentation>This element contains suggestions and hints for the test of the software functionality of this software component.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwComponentDocumentation.swTestDesc";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.roleElement="true";xml.sequenceOffset="50";xml.typeElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-CALIBRATION-NOTES" type="AR:CHAPTER">
            <xsd:annotation>
               <xsd:documentation>This element contains calibration instructions and hints for a calibration engineer.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwComponentDocumentation.swCalibrationNotes";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.roleElement="true";xml.sequenceOffset="60";xml.typeElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-MAINTENANCE-NOTES" type="AR:CHAPTER">
            <xsd:annotation>
               <xsd:documentation>This element contains information regarding the software maintenance of the component.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwComponentDocumentation.swMaintenanceNotes";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.roleElement="true";xml.sequenceOffset="70";xml.typeElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-DIAGNOSTICS-NOTES" type="AR:CHAPTER">
            <xsd:annotation>
               <xsd:documentation>This element contains general information about diagnostics issues within the component.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwComponentDocumentation.swDiagnosticsNotes";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.roleElement="true";xml.sequenceOffset="75";xml.typeElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-CARB-DOC" type="AR:CHAPTER">
            <xsd:annotation>
               <xsd:documentation>This element records the documentation requested by CARB.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwComponentDocumentation.swCarbDoc";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.roleElement="true";xml.sequenceOffset="80";xml.typeElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="CHAPTER" type="AR:CHAPTER">
            <xsd:annotation>
               <xsd:documentation>These chapters provide additional information about the software component that do not fit in the other chapters.

Note that this is subject to variation because Chapter aggregations in the role chapter are variant within the documentation in general.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwComponentDocumentation.chapter";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="postBuild";xml.roleElement="true";xml.roleWrapperElement="false";xml.sequenceOffset="100";xml.typeElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwComponentDocumentation.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class SoftwareComponentDocumentation::SwComponentDocumentation -->
   <xsd:complexType abstract="false" mixed="false" name="SW-COMPONENT-DOCUMENTATION">
      <xsd:annotation>
         <xsd:documentation>This class specifies the ability to write dedicated documentation to a component type according to ASAM FSX.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwComponentDocumentation"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SW-COMPONENT-DOCUMENTATION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class BswInterfaces::BswModuleEntryRefConditional -->
   <xsd:group name="BSW-MODULE-ENTRY-REF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleEntry"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="BSW-MODULE-ENTRY-REF">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleEntry";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:BSW-MODULE-ENTRY--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleEntryRefConditional.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswInterfaces::BswModuleEntryRefConditional -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-MODULE-ENTRY-REF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleEntry"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:BSW-MODULE-ENTRY-REF-CONDITIONAL"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class BswInterfaces::BswModuleDependency -->
   <xsd:group name="BSW-MODULE-DEPENDENCY">
      <xsd:annotation>
         <xsd:documentation>This class collects the dependencies of a BSW module or cluster on a certain other BSW module.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleDependency"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="TARGET-MODULE-ID" type="AR:POSITIVE-INTEGER">
            <xsd:annotation>
               <xsd:documentation>AUTOSAR identifier of the target module of which the dependencies are defined. 

This information is optional, because the target module may also be identified by targetModuleRef.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleDependency.targetModuleId";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="5"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TARGET-MODULE-REFS">
            <xsd:annotation>
               <xsd:documentation>Reference to the target module. It is an &lt;&lt;atpUriDef&gt;&gt; because the reference shall be used to identify the target module without actually needing the description of that target module.
This property was modified due to atpVariation (DirectedAssociationPattern).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleDependency.targetModuleRef";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="7"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpUriDef</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-MODULE-DESCRIPTION-REF-CONDITIONAL" type="AR:BSW-MODULE-DESCRIPTION-REF-CONDITIONAL"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="REQUIRED-ENTRYS">
            <xsd:annotation>
               <xsd:documentation>Indicates an entry into another modules which is required by this module.
This property was modified due to atpVariation (DirectedAssociationPattern).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleDependency.requiredEntry";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="10"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-MODULE-ENTRY-REF-CONDITIONAL" type="AR:BSW-MODULE-ENTRY-REF-CONDITIONAL"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="EXPECTED-CALLBACKS">
            <xsd:annotation>
               <xsd:documentation>Indicates a callback expected to be called from another module and implemented by this module.
This property was modified due to atpVariation (DirectedAssociationPattern).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleDependency.expectedCallback";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="15"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-MODULE-ENTRY-REF-CONDITIONAL" type="AR:BSW-MODULE-ENTRY-REF-CONDITIONAL"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SERVICE-ITEMS">
            <xsd:annotation>
               <xsd:documentation>A single item (example: Nv block) for which the quality of a service is defined.

The aggregation is marked as &lt;&lt;atpSplitable&gt;&gt; to allow for extension during the ECU configuration process.

This association is deprecated since R4.0.3, since ServiceNeeds shall be associated with the new element BswServiceDependency within the BswInternalBehavior.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName";atp.Status="removed";mmt.qualifiedName="BswModuleDependency.serviceItem";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.sequenceOffset="20"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                 
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleDependency.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswInterfaces::BswModuleDependency -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-MODULE-DEPENDENCY">
      <xsd:annotation>
         <xsd:documentation>This class collects the dependencies of a BSW module or cluster on a certain other BSW module.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleDependency"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:BSW-MODULE-DEPENDENCY"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>

<!-- element group for class ModeDeclaration::ModeDeclarationGroupPrototype -->
   <xsd:group name="MODE-DECLARATION-GROUP-PROTOTYPE">
      <xsd:annotation>
         <xsd:documentation>The ModeDeclarationGroupPrototype specifies a set of Modes (ModeDeclarationGroup) which is provided or required in the given context.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ModeDeclarationGroupPrototype"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-CALIBRATION-ACCESS" type="AR:SW-CALIBRATION-ACCESS-ENUM">
            <xsd:annotation>
               <xsd:documentation>This allows for specifying whether or not the enclosing ModeDeclarationGroupPrototype can be measured at run-time.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ModeDeclarationGroupPrototype.swCalibrationAccess";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TYPE-TREF">
            <xsd:annotation>
               <xsd:documentation>The "collection of ModeDeclarations" ( = ModeDeclarationGroup) supported by a component</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ModeDeclarationGroupPrototype.type";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">isOfType</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:MODE-DECLARATION-GROUP--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ModeDeclarationGroupPrototype.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ModeDeclaration::ModeDeclarationGroupPrototype -->
   <xsd:complexType abstract="false" mixed="false" name="MODE-DECLARATION-GROUP-PROTOTYPE">
      <xsd:annotation>
         <xsd:documentation>The ModeDeclarationGroupPrototype specifies a set of Modes (ModeDeclarationGroup) which is provided or required in the given context.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ModeDeclarationGroupPrototype"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ATP-FEATURE"/>
         <xsd:group ref="AR:ATP-PROTOTYPE"/>
         <xsd:group ref="AR:MODE-DECLARATION-GROUP-PROTOTYPE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
   <xsd:simpleType name="MODE-DECLARATION-GROUP-PROTOTYPE--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="MODE-DECLARATION-GROUP-PROTOTYPE"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class DataPrototypes::VariableDataPrototype -->
   <xsd:group name="VARIABLE-DATA-PROTOTYPE">
      <xsd:annotation>
         <xsd:documentation>A VariableDataPrototype is used to contain values in an ECU application. This means that most likely a VariableDataPrototype allocates "static" memory on the  ECU. In some cases optimization strategies might lead to a situation where the  memory allocation can be avoided.

In particular, the value of a VariableDataPrototype is likely to change as the ECU on which it is used executes.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="VariableDataPrototype"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="INIT-VALUE">
            <xsd:annotation>
               <xsd:documentation>Specifies initial value(s) of the VariableDataPrototype</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="VariableDataPrototype.initValue";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="1" minOccurs="0">
                  <xsd:element name="APPLICATION-RULE-BASED-VALUE-SPECIFICATION" type="AR:APPLICATION-RULE-BASED-VALUE-SPECIFICATION"/>
                  <xsd:element name="APPLICATION-VALUE-SPECIFICATION" type="AR:APPLICATION-VALUE-SPECIFICATION"/>
                  <xsd:element name="ARRAY-VALUE-SPECIFICATION" type="AR:ARRAY-VALUE-SPECIFICATION"/>
                  <xsd:element name="CONSTANT-REFERENCE" type="AR:CONSTANT-REFERENCE"/>
                  <xsd:element name="NUMERICAL-RULE-BASED-VALUE-SPECIFICATION" type="AR:NUMERICAL-RULE-BASED-VALUE-SPECIFICATION"/>
                  <xsd:element name="NUMERICAL-VALUE-SPECIFICATION" type="AR:NUMERICAL-VALUE-SPECIFICATION"/>
                  <xsd:element name="RECORD-VALUE-SPECIFICATION" type="AR:RECORD-VALUE-SPECIFICATION"/>
                  <xsd:element name="REFERENCE-VALUE-SPECIFICATION" type="AR:REFERENCE-VALUE-SPECIFICATION"/>
                  <xsd:element name="TEXT-VALUE-SPECIFICATION" type="AR:TEXT-VALUE-SPECIFICATION"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="VariableDataPrototype.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class DataPrototypes::VariableDataPrototype -->
   <xsd:complexType abstract="false" mixed="false" name="VARIABLE-DATA-PROTOTYPE">
      <xsd:annotation>
         <xsd:documentation>A VariableDataPrototype is used to contain values in an ECU application. This means that most likely a VariableDataPrototype allocates "static" memory on the  ECU. In some cases optimization strategies might lead to a situation where the  memory allocation can be avoided.

In particular, the value of a VariableDataPrototype is likely to change as the ECU on which it is used executes.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="VariableDataPrototype"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ATP-FEATURE"/>
         <xsd:group ref="AR:ATP-PROTOTYPE"/>
         <xsd:group ref="AR:DATA-PROTOTYPE"/>
         <xsd:group ref="AR:AUTOSAR-DATA-PROTOTYPE"/>
         <xsd:group ref="AR:VARIABLE-DATA-PROTOTYPE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
   <xsd:simpleType name="VARIABLE-DATA-PROTOTYPE--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="VARIABLE-DATA-PROTOTYPE"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class BswBehavior::BswInternalBehavior -->
   <xsd:group name="BSW-INTERNAL-BEHAVIOR">
      <xsd:annotation>
         <xsd:documentation>Specifies the behavior of a BSW module or a BSW cluster w.r.t. the code entities visible by the BSW Scheduler.
It is possible to have several different BswInternalBehaviors referring to the same BswModuleDescription.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswInternalBehavior"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="BSW-PER-INSTANCE-MEMORY-POLICYS">
            <xsd:annotation>
               <xsd:documentation>arTypedPerInstanceMemory specific policy
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="BswInternalBehavior.bswPerInstanceMemoryPolicy";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-PER-INSTANCE-MEMORY-POLICY" type="AR:BSW-PER-INSTANCE-MEMORY-POLICY"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="CLIENT-POLICYS">
            <xsd:annotation>
               <xsd:documentation>The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="clientPolicy, variationPoint.shortLabel";mmt.qualifiedName="BswInternalBehavior.clientPolicy";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-CLIENT-POLICY" type="AR:BSW-CLIENT-POLICY"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="EXCLUSIVE-AREA-POLICYS">
            <xsd:annotation>
               <xsd:documentation>The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="exclusiveAreaPolicy, variationPoint.shortLabel";mmt.qualifiedName="BswInternalBehavior.exclusiveAreaPolicy";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-EXCLUSIVE-AREA-POLICY" type="AR:BSW-EXCLUSIVE-AREA-POLICY"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="INCLUDED-DATA-TYPE-SETS">
            <xsd:annotation>
               <xsd:documentation>The includedDataTypeSet is used by a basic software module for its implementation.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="includedDataTypeSet";mmt.qualifiedName="BswInternalBehavior.includedDataTypeSet";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="INCLUDED-DATA-TYPE-SET" type="AR:INCLUDED-DATA-TYPE-SET"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="INTERNAL-TRIGGERING-POINT-POLICYS">
            <xsd:annotation>
               <xsd:documentation>The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="internalTriggeringPointPolicy, variationPoint.shortPoint";mmt.qualifiedName="BswInternalBehavior.internalTriggeringPointPolicy";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-INTERNAL-TRIGGERING-POINT-POLICY" type="AR:BSW-INTERNAL-TRIGGERING-POINT-POLICY"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="PARAMETER-POLICYS">
            <xsd:annotation>
               <xsd:documentation>The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="parameterPolicy, variatioPoint.shortLabel";mmt.qualifiedName="BswInternalBehavior.parameterPolicy";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-PARAMETER-POLICY" type="AR:BSW-PARAMETER-POLICY"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="RELEASED-TRIGGER-POLICYS">
            <xsd:annotation>
               <xsd:documentation>The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="releasedTriggerPolicy, variationPoint.shortLabel";mmt.qualifiedName="BswInternalBehavior.releasedTriggerPolicy";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-RELEASED-TRIGGER-POLICY" type="AR:BSW-RELEASED-TRIGGER-POLICY"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SEND-POLICYS">
            <xsd:annotation>
               <xsd:documentation>The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="sendPolicy, variationPoint.shortLabel";mmt.qualifiedName="BswInternalBehavior.sendPolicy";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-DATA-SEND-POLICY" type="AR:BSW-DATA-SEND-POLICY"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT-PROXYS">
            <xsd:annotation>
               <xsd:documentation>Proxy of a variation points in the C/C++ implementation.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName";mmt.qualifiedName="BswInternalBehavior.variationPointProxy";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="VARIATION-POINT-PROXY" type="AR:VARIATION-POINT-PROXY"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="INTERNAL-TRIGGERING-POINTS">
            <xsd:annotation>
               <xsd:documentation>An internal triggering point.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="BswInternalBehavior.internalTriggeringPoint";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="2"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-INTERNAL-TRIGGERING-POINT" type="AR:BSW-INTERNAL-TRIGGERING-POINT"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ENTITYS">
            <xsd:annotation>
               <xsd:documentation>A code entity for which the behavior is described
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="BswInternalBehavior.entity";pureMM.maxOccurs="-1";pureMM.minOccurs="1";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="5"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-CALLED-ENTITY" type="AR:BSW-CALLED-ENTITY"/>
                  <xsd:element name="BSW-INTERRUPT-ENTITY" type="AR:BSW-INTERRUPT-ENTITY"/>
                  <xsd:element name="BSW-SCHEDULABLE-ENTITY" type="AR:BSW-SCHEDULABLE-ENTITY"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="EVENTS">
            <xsd:annotation>
               <xsd:documentation>An event required by this module behavior.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="BswInternalBehavior.event";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="10"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-ASYNCHRONOUS-SERVER-CALL-RETURNS-EVENT" type="AR:BSW-ASYNCHRONOUS-SERVER-CALL-RETURNS-EVENT"/>
                  <xsd:element name="BSW-BACKGROUND-EVENT" type="AR:BSW-BACKGROUND-EVENT"/>
                  <xsd:element name="BSW-DATA-RECEIVED-EVENT" type="AR:BSW-DATA-RECEIVED-EVENT"/>
                  <xsd:element name="BSW-EXTERNAL-TRIGGER-OCCURRED-EVENT" type="AR:BSW-EXTERNAL-TRIGGER-OCCURRED-EVENT"/>
                  <xsd:element name="BSW-INTERNAL-TRIGGER-OCCURRED-EVENT" type="AR:BSW-INTERNAL-TRIGGER-OCCURRED-EVENT"/>
                  <xsd:element name="BSW-MODE-MANAGER-ERROR-EVENT" type="AR:BSW-MODE-MANAGER-ERROR-EVENT"/>
                  <xsd:element name="BSW-MODE-SWITCH-EVENT" type="AR:BSW-MODE-SWITCH-EVENT"/>
                  <xsd:element name="BSW-MODE-SWITCHED-ACK-EVENT" type="AR:BSW-MODE-SWITCHED-ACK-EVENT"/>
                  <xsd:element name="BSW-OPERATION-INVOKED-EVENT" type="AR:BSW-OPERATION-INVOKED-EVENT"/>
                  <xsd:element name="BSW-TIMING-EVENT" type="AR:BSW-TIMING-EVENT"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TRIGGER-DIRECT-IMPLEMENTATIONS">
            <xsd:annotation>
               <xsd:documentation>Specifies a trigger to be directly implemented via OS calls.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="triggerDirectImplementation, variationPoint.shortLabel";mmt.qualifiedName="BswInternalBehavior.triggerDirectImplementation";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="15"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-TRIGGER-DIRECT-IMPLEMENTATION" type="AR:BSW-TRIGGER-DIRECT-IMPLEMENTATION"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MODE-SENDER-POLICYS">
            <xsd:annotation>
               <xsd:documentation>Implementation policy for providing a mode group.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="modeSenderPolicy, variationPoint.shortLabel";mmt.qualifiedName="BswInternalBehavior.modeSenderPolicy";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="20"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-MODE-SENDER-POLICY" type="AR:BSW-MODE-SENDER-POLICY"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MODE-RECEIVER-POLICYS">
            <xsd:annotation>
               <xsd:documentation>Implementation policy for the reception of mode switches.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="modeReceiverPolicy, variationPoint.shortLabel";mmt.qualifiedName="BswInternalBehavior.modeReceiverPolicy";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="25"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-MODE-RECEIVER-POLICY" type="AR:BSW-MODE-RECEIVER-POLICY"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SERVICE-DEPENDENCYS">
            <xsd:annotation>
               <xsd:documentation>Defines the requirements on AUTOSAR Services for a particular item.

The aggregation is subject to variability with the purpose to support the conditional existence of ServiceNeeds.

The aggregation is splitable in order to support that ServiceNeeds might be provided in later development steps.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="serviceDependency, variationPoint.shortLabel";mmt.qualifiedName="BswInternalBehavior.serviceDependency";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="40"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-SERVICE-DEPENDENCY" type="AR:BSW-SERVICE-DEPENDENCY"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="PER-INSTANCE-PARAMETERS">
            <xsd:annotation>
               <xsd:documentation>Describes a read only memory object containing characteristic value(s)  needed by this BswInternalBehavior. The role name perInstanceParameter is chosen in analogy to the similar role in the context of SwcInternalBehavior.

In contrast to constantMemory, this object is not allocated locally by the module's code, but by the BSW Scheduler and it is accessed from the BSW module via the BSW Scheduler API. The main use case is the support of software emulation of calibration data.

The aggregation is subject to variability with the purpose to support implementation variants.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="atp.Splitkey shortName, variationPoint.shortLabel";mmt.qualifiedName="BswInternalBehavior.perInstanceParameter";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="45"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="PARAMETER-DATA-PROTOTYPE" type="AR:PARAMETER-DATA-PROTOTYPE"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SCHEDULER-NAME-PREFIXS">
            <xsd:annotation>
               <xsd:documentation>Optional definition of one or more prefixes to be used for the BswScheduler.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="schedulerNamePrefix, variationPoint.ShortLabel";mmt.qualifiedName="BswInternalBehavior.schedulerNamePrefix";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="50"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-SCHEDULER-NAME-PREFIX" type="AR:BSW-SCHEDULER-NAME-PREFIX"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="RECEPTION-POLICYS">
            <xsd:annotation>
               <xsd:documentation>Data reception policy for inter-partition and/or inter-core communication.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="receptionPolicy, variationPoint.shortLabel";mmt.qualifiedName="BswInternalBehavior.receptionPolicy";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="55"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-QUEUED-DATA-RECEPTION-POLICY" type="AR:BSW-QUEUED-DATA-RECEPTION-POLICY"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="DISTINGUISHED-PARTITIONS">
            <xsd:annotation>
               <xsd:documentation>Indicates an abstract partition context in which the enclosing BswModuleEntity can be executed.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.ShortLabel";mmt.qualifiedName="BswInternalBehavior.distinguishedPartition";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="60"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-DISTINGUISHED-PARTITION" type="AR:BSW-DISTINGUISHED-PARTITION"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswInternalBehavior -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-INTERNAL-BEHAVIOR">
      <xsd:annotation>
         <xsd:documentation>Specifies the behavior of a BSW module or a BSW cluster w.r.t. the code entities visible by the BSW Scheduler.
It is possible to have several different BswInternalBehaviors referring to the same BswModuleDescription.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswInternalBehavior"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ATP-CLASSIFIER"/>
         <xsd:group ref="AR:ATP-FEATURE"/>
         <xsd:group ref="AR:ATP-STRUCTURE-ELEMENT"/>
         <xsd:group ref="AR:INTERNAL-BEHAVIOR"/>
         <xsd:group ref="AR:BSW-INTERNAL-BEHAVIOR"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
   <xsd:simpleType name="BSW-INTERNAL-BEHAVIOR--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BSW-INTERNAL-BEHAVIOR"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="BSW-MODULE-ENTRY--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BSW-MODULE-ENTRY"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class BswOverview::BswModuleDescriptionRefConditional -->
   <xsd:group name="BSW-MODULE-DESCRIPTION-REF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleDescription"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="BSW-MODULE-DESCRIPTION-REF">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleDescription";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:BSW-MODULE-DESCRIPTION--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleDescriptionRefConditional.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswOverview::BswModuleDescriptionRefConditional -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-MODULE-DESCRIPTION-REF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleDescription"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:BSW-MODULE-DESCRIPTION-REF-CONDITIONAL"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class ServiceNeeds::BswMgrNeeds -->
   <xsd:group name="BSW-MGR-NEEDS">
      <xsd:annotation>
         <xsd:documentation>Specifies the abstract needs on the configuration of the Basic Software Manager for one "user".</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswMgrNeeds"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class ServiceNeeds::BswMgrNeeds -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-MGR-NEEDS">
      <xsd:annotation>
         <xsd:documentation>Specifies the abstract needs on the configuration of the Basic Software Manager for one "user".</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswMgrNeeds"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:SERVICE-NEEDS"/>
         <xsd:group ref="AR:BSW-MGR-NEEDS"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class ServiceNeeds::ComMgrUserNeeds -->
   <xsd:group name="COM-MGR-USER-NEEDS">
      <xsd:annotation>
         <xsd:documentation>Specifies the abstract needs on the configuration of the Communication Manager for one "user".</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ComMgrUserNeeds"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="MAX-COMM-MODE" type="AR:MAX-COMM-MODE-ENUM">
            <xsd:annotation>
               <xsd:documentation>Maximum communication mode requested by this ComM user.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ComMgrUserNeeds.maxCommMode";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ServiceNeeds::ComMgrUserNeeds -->
   <xsd:complexType abstract="false" mixed="false" name="COM-MGR-USER-NEEDS">
      <xsd:annotation>
         <xsd:documentation>Specifies the abstract needs on the configuration of the Communication Manager for one "user".</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ComMgrUserNeeds"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:SERVICE-NEEDS"/>
         <xsd:group ref="AR:COM-MGR-USER-NEEDS"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class ServiceNeeds::CryptoServiceNeeds -->
   <xsd:group name="CRYPTO-SERVICE-NEEDS">
      <xsd:annotation>
         <xsd:documentation>Specifies the needs on the configuration of the CryptoServiceManager for one ConfigID (see Specification AUTOSAR_SWS_CSM.doc). An instance of this class is used to find out which ports of an SWC belong to this ConfigID.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CryptoServiceNeeds"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="MAXIMUM-KEY-LENGTH" type="AR:POSITIVE-INTEGER">
            <xsd:annotation>
               <xsd:documentation>The maximum length of a cryptographic key, that is used by the SWC or module for this configuration.  Unit: bit.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="CryptoServiceNeeds.maximumKeyLength";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ServiceNeeds::CryptoServiceNeeds -->
   <xsd:complexType abstract="false" mixed="false" name="CRYPTO-SERVICE-NEEDS">
      <xsd:annotation>
         <xsd:documentation>Specifies the needs on the configuration of the CryptoServiceManager for one ConfigID (see Specification AUTOSAR_SWS_CSM.doc). An instance of this class is used to find out which ports of an SWC belong to this ConfigID.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CryptoServiceNeeds"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:SERVICE-NEEDS"/>
         <xsd:group ref="AR:CRYPTO-SERVICE-NEEDS"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class DataPrototypes::DataPrototype -->
   <xsd:group name="DATA-PROTOTYPE">
      <xsd:annotation>
         <xsd:documentation>Base class for prototypical roles of any data type.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DataPrototype"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-DATA-DEF-PROPS" type="AR:SW-DATA-DEF-PROPS">
            <xsd:annotation>
               <xsd:documentation>This property allows to specify data definition properties which apply on data prototype level.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="DataPrototype.swDataDefProps";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <xsd:simpleType name="DATA-PROTOTYPE--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="APPLICATION-ARRAY-ELEMENT"/>
         <xsd:enumeration value="APPLICATION-COMPOSITE-ELEMENT-DATA-PROTOTYPE"/>
         <xsd:enumeration value="APPLICATION-RECORD-ELEMENT"/>
         <xsd:enumeration value="ARGUMENT-DATA-PROTOTYPE"/>
         <xsd:enumeration value="AUTOSAR-DATA-PROTOTYPE"/>
         <xsd:enumeration value="DATA-PROTOTYPE"/>
         <xsd:enumeration value="PARAMETER-DATA-PROTOTYPE"/>
         <xsd:enumeration value="VARIABLE-DATA-PROTOTYPE"/>
      </xsd:restriction>
   </xsd:simpleType>
 <!-- element group for class DataPrototypes::AutosarDataPrototype -->
   <xsd:group name="AUTOSAR-DATA-PROTOTYPE">
      <xsd:annotation>
         <xsd:documentation>Base class for prototypical roles of an AutosarDataType.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AutosarDataPrototype"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="TYPE-TREF">
            <xsd:annotation>
               <xsd:documentation>This represents the corresponding data type.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AutosarDataPrototype.type";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">isOfType</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:AUTOSAR-DATA-TYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <xsd:simpleType name="AUTOSAR-DATA-PROTOTYPE--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ARGUMENT-DATA-PROTOTYPE"/>
         <xsd:enumeration value="AUTOSAR-DATA-PROTOTYPE"/>
         <xsd:enumeration value="PARAMETER-DATA-PROTOTYPE"/>
         <xsd:enumeration value="VARIABLE-DATA-PROTOTYPE"/>
      </xsd:restriction>
   </xsd:simpleType>
   <!-- element group for class Datatypes::AutosarDataType -->
   <xsd:group name="AUTOSAR-DATA-TYPE">
      <xsd:annotation>
         <xsd:documentation>Abstract base class for user defined AUTOSAR data types for ECU software.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AutosarDataType"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-DATA-DEF-PROPS" type="AR:SW-DATA-DEF-PROPS">
            <xsd:annotation>
               <xsd:documentation>The properties of this AutosarDataType.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AutosarDataType.swDataDefProps";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <xsd:simpleType name="AUTOSAR-DATA-TYPE--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="APPLICATION-ARRAY-DATA-TYPE"/>
         <xsd:enumeration value="APPLICATION-COMPOSITE-DATA-TYPE"/>
         <xsd:enumeration value="APPLICATION-DATA-TYPE"/>
         <xsd:enumeration value="APPLICATION-PRIMITIVE-DATA-TYPE"/>
         <xsd:enumeration value="APPLICATION-RECORD-DATA-TYPE"/>
         <xsd:enumeration value="AUTOSAR-DATA-TYPE"/>
         <xsd:enumeration value="IMPLEMENTATION-DATA-TYPE"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class Datatypes::AutosarDataTypeRefConditional -->
   <xsd:group name="AUTOSAR-DATA-TYPE-REF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AutosarDataType"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="AUTOSAR-DATA-TYPE-REF">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AutosarDataType";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:AUTOSAR-DATA-TYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AutosarDataTypeRefConditional.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Datatypes::AutosarDataTypeRefConditional -->
   <xsd:complexType abstract="false" mixed="false" name="AUTOSAR-DATA-TYPE-REF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AutosarDataType"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:AUTOSAR-DATA-TYPE-REF-CONDITIONAL"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class InternalBehavior::InternalBehavior -->
   <xsd:group name="INTERNAL-BEHAVIOR">
      <xsd:annotation>
         <xsd:documentation>Common base class (abstract) for the internal behavior of both software components and basic software modules/clusters.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="InternalBehavior"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="CONSTANT-MEMORYS">
            <xsd:annotation>
               <xsd:documentation>Describes a read only memory object containing characteristic value(s)  implemented by this InternalBehavior. The shortName of ParameterDataPrototype has to be equal to the ''C' identifier of the described constant.
The characteristic value(s) might be shared between
SwComponentPrototypes of the same SwComponentType.
The aggregation of constantMemory is subject to variability with the purpose to support variability in the software component or module implementations. Typically different algorithms in the implementation are requiring different number of memory objects.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="InternalBehavior.constantMemory";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="PARAMETER-DATA-PROTOTYPE" type="AR:PARAMETER-DATA-PROTOTYPE"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="CONSTANT-VALUE-MAPPING-REFS">
            <xsd:annotation>
               <xsd:documentation>Reference to the ConstanSpecificationMapping to be applied for the particular InternalBehavior</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="constantValueMapping";mmt.qualifiedName="InternalBehavior.constantValueMapping";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="CONSTANT-VALUE-MAPPING-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:CONSTANT-SPECIFICATION-MAPPING-SET--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="DATA-TYPE-MAPPING-REFS">
            <xsd:annotation>
               <xsd:documentation>Reference to the DataTypeMapping to be applied for the particular InternalBehavior</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="dataTypeMapping";mmt.qualifiedName="InternalBehavior.dataTypeMapping";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="DATA-TYPE-MAPPING-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:DATA-TYPE-MAPPING-SET--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="EXCLUSIVE-AREAS">
            <xsd:annotation>
               <xsd:documentation>This specifies an ExclusiveArea for this InternalBehavior. The exclusiveArea is local to the component resp. module.
The aggregation of ExclusiveAreas is subject to variability.
Note: the number of ExclusiveAreas might vary due to the conditional existence of RunnableEntities or BswModuleEntities.

The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="InternalBehavior.exclusiveArea";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="EXCLUSIVE-AREA" type="AR:EXCLUSIVE-AREA"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="EXCLUSIVE-AREA-NESTING-ORDERS">
            <xsd:annotation>
               <xsd:documentation>This represents the set of ExclusiveAreaNestingOrder owned by the InternalBehavior.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="InternalBehavior.exclusiveAreaNestingOrder";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="EXCLUSIVE-AREA-NESTING-ORDER" type="AR:EXCLUSIVE-AREA-NESTING-ORDER"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="STATIC-MEMORYS">
            <xsd:annotation>
               <xsd:documentation>Describes a read and writeable static memory object representing measurment variables implemented by this software component. Static is used in the meaning of non temporary and does not necessarily specify a linker encapsulation. This kind of memory is only supported if supportsMultipleInstantiation is FALSE.
The shortName of the VariableDataPrototype has to be equal with the ''C' identifier of the described variable.
The aggregation of staticMemory is subject to variability with the purpose to support variability in the software components implementations. Typically different algorithms in the implementation are requiring different number of memory objects.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="InternalBehavior.staticMemory";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="VARIABLE-DATA-PROTOTYPE" type="AR:VARIABLE-DATA-PROTOTYPE"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>

<xsd:complexType name="SW-IMPL-POLICY-ENUM">
      <xsd:annotation>
         <xsd:documentation>Specifies the implementation strategy with respect to consistency mechanisms of variables.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwImplPolicyEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SW-IMPL-POLICY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="SW-IMPL-POLICY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CONST">
            <xsd:annotation>
               <xsd:documentation>forced implementation such that the  running software within the ECU  shall not modify it. For example implemented with the "const" modifier in C.  This can be applied for parameters (not for those in NVRAM) as well as argument  data prototypes.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwImplPolicyEnum.const"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FIXED">
            <xsd:annotation>
               <xsd:documentation>This data element is fixed. In particular this indicates, that it  might also be implemented  e.g. as in place data, (#DEFINE).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwImplPolicyEnum.fixed"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MEASUREMENT-POINT">
            <xsd:annotation>
               <xsd:documentation>The data element is created for measurement purposes only.  The data element is never read directly within the ECU software. In contrast to  a "standard" data element in an unconnected provide port is, this unconnection  is guaranteed for  measurementPoint data elements.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwImplPolicyEnum.measurementPoint"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="QUEUED">
            <xsd:annotation>
               <xsd:documentation>The content of the data element is queued and the data element has 'event' semantics, i.e. data elements are stored in a queue and all data  elements are processed in 'first in first out' order. 
The queuing is intended to be implemented by RTE Generator.
This value is not applicable for parameters.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwImplPolicyEnum.queued"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STANDARD">
            <xsd:annotation>
               <xsd:documentation>This is applicable for all kinds of data elements. For variable  data prototypes the 'last is best' semantics applies. For parameter there is no  specific implementation directive.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwImplPolicyEnum.standard"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="SW-SERVICE-IMPL-POLICY-ENUM">
      <xsd:annotation>
         <xsd:documentation>This specifies the legal values for the implementation policies for services (in AUTOSAR: BswModuleEntry-s).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwServiceImplPolicyEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SW-SERVICE-IMPL-POLICY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="SW-SERVICE-IMPL-POLICY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="INLINE">
            <xsd:annotation>
               <xsd:documentation>inline service definition.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwServiceImplPolicyEnum.inline"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="INLINE-CONDITIONAL">
            <xsd:annotation>
               <xsd:documentation>The service (in AUTOSAR: BswModuleEntry) is implemented in a way that it either resolves to an inline function or to a standard function depending on conditions set at a later point in time.

This could be handled by using the AUTOSAR compiler abstraction macros (INLINE, LOCAL_INLINE) and/or by further compiler switches depending on ECU configuration values.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwServiceImplPolicyEnum.inlineConditional"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MACRO">
            <xsd:annotation>
               <xsd:documentation>macro service definition.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwServiceImplPolicyEnum.macro"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STANDARD">
            <xsd:annotation>
               <xsd:documentation>Standard service and default value, if nothing is defined.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwServiceImplPolicyEnum.standard"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class MultidimensionalTime::MultidimensionalTime -->
   <xsd:group name="MULTIDIMENSIONAL-TIME">
      <xsd:annotation>
         <xsd:documentation>This is used to specify a multidimensional time value based on ASAM CSE codes. It is specified by a code which defined the basis of the time and a scaling factor which finally determines the time value.

If for example the cseCode is 100 and the cseCodeFactor is 360, it represents 360 angular degrees.
If the cseCode is 2 and the cseCodeFactor is 50 it represents 50 microseconds</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MultidimensionalTime"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="CSE-CODE" type="AR:CSE-CODE-TYPE-STRING">
            <xsd:annotation>
               <xsd:documentation>Specifies the time base by means of CSE codes.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MultidimensionalTime.cseCode";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="CSE-CODE-FACTOR" type="AR:INTEGER">
            <xsd:annotation>
               <xsd:documentation>The scaling factor for the time value based on the specified CSE code.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MultidimensionalTime.cseCodeFactor";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class MultidimensionalTime::MultidimensionalTime -->
   <xsd:complexType abstract="false" mixed="false" name="MULTIDIMENSIONAL-TIME">
      <xsd:annotation>
         <xsd:documentation>This is used to specify a multidimensional time value based on ASAM CSE codes. It is specified by a code which defined the basis of the time and a scaling factor which finally determines the time value.

If for example the cseCode is 100 and the cseCodeFactor is 360, it represents 360 angular degrees.
If the cseCode is 2 and the cseCodeFactor is 50 it represents 50 microseconds</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MultidimensionalTime"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:MULTIDIMENSIONAL-TIME"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:complexType name="SW-CALIBRATION-ACCESS-ENUM">
      <xsd:annotation>
         <xsd:documentation>Determines the access rights to a data object w.r.t. measurement and calibration.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwCalibrationAccessEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SW-CALIBRATION-ACCESS-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="SW-CALIBRATION-ACCESS-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NOT-ACCESSIBLE">
            <xsd:annotation>
               <xsd:documentation>The element will not be accessible via MCD tools, i.e. will not appear in the ASAP file.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwCalibrationAccessEnum.notAccessible"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="READ-ONLY">
            <xsd:annotation>
               <xsd:documentation>The element will only appear as read-only in an ASAP file.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwCalibrationAccessEnum.readOnly"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="READ-WRITE">
            <xsd:annotation>
               <xsd:documentation>The element will appear in the ASAP file with both read and write access.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwCalibrationAccessEnum.readWrite"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
 <xsd:simpleType name="MODE-DECLARATION-GROUP--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="MODE-DECLARATION-GROUP"/>
      </xsd:restriction>
   </xsd:simpleType>
 <!-- element group for class Constants::ApplicationRuleBasedValueSpecification -->
   <xsd:group name="APPLICATION-RULE-BASED-VALUE-SPECIFICATION">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents rule based values for DataPrototypes typed by ApplicationDataTypes (ApplicationArrayDataType or a compound ApplicationPrimitiveDataType which also boils down to an array-nature).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ApplicationRuleBasedValueSpecification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="CATEGORY" type="AR:IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>This represents the category of the RuleBasedValueSpecification</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ApplicationRuleBasedValueSpecification.category";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="-20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-AXIS-CONTS">
            <xsd:annotation>
               <xsd:documentation>This represents the axis values of a Compound Primitive Data Type (curve or map).

The first swAxisCont describes the x-axis, the second swAxisCont describes the y-axis, the third swAxisCont describes the z-axis. In addition to this, the axis can be denoted in swAxisIndex.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ApplicationRuleBasedValueSpecification.swAxisCont";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="RULE-BASED-AXIS-CONT" type="AR:RULE-BASED-AXIS-CONT"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-VALUE-CONT" type="AR:RULE-BASED-VALUE-CONT">
            <xsd:annotation>
               <xsd:documentation>This represents the values of an array or Compound Primitive Data Type.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ApplicationRuleBasedValueSpecification.swValueCont";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Constants::ApplicationRuleBasedValueSpecification -->
   <xsd:complexType abstract="false" mixed="false" name="APPLICATION-RULE-BASED-VALUE-SPECIFICATION">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents rule based values for DataPrototypes typed by ApplicationDataTypes (ApplicationArrayDataType or a compound ApplicationPrimitiveDataType which also boils down to an array-nature).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ApplicationRuleBasedValueSpecification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:VALUE-SPECIFICATION"/>
         <xsd:group ref="AR:ABSTRACT-RULE-BASED-VALUE-SPECIFICATION"/>
         <xsd:group ref="AR:APPLICATION-RULE-BASED-VALUE-SPECIFICATION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class Constants::ApplicationValueSpecification -->
   <xsd:group name="APPLICATION-VALUE-SPECIFICATION">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents values for DataPrototypes typed by ApplicationDataTypes (this includes in particular compound primitives). 

For further details refer to ASAM CDF 2.0. This meta-class corresponds to some extent with SW-INSTANCE in ASAM CDF 2.0.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ApplicationValueSpecification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="CATEGORY" type="AR:IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>Specifies to which category of ApplicationDataType this ApplicationValueSpecification can be applied (e.g. as an initial value), thus imposing constraints on the structure and semantics of the contained values, see [constr_1006] and [constr_2051].</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ApplicationValueSpecification.category";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-AXIS-CONTS">
            <xsd:annotation>
               <xsd:documentation>This represents the axis values of a Compound Primitive Data Type (curve or map).

The first swAxisCont describes the x-axis, the second swAxisCont describes the y-axis, the third swAxisCont describes the z-axis. In addition to this, the axis can be denoted in swAxisIndex.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ApplicationValueSpecification.swAxisCont";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="SW-AXIS-CONT" type="AR:SW-AXIS-CONT"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-VALUE-CONT" type="AR:SW-VALUE-CONT">
            <xsd:annotation>
               <xsd:documentation>This represents the values of a Compound Primitive Data Type.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ApplicationValueSpecification.swValueCont";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Constants::ApplicationValueSpecification -->
   <xsd:complexType abstract="false" mixed="false" name="APPLICATION-VALUE-SPECIFICATION">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents values for DataPrototypes typed by ApplicationDataTypes (this includes in particular compound primitives). 

For further details refer to ASAM CDF 2.0. This meta-class corresponds to some extent with SW-INSTANCE in ASAM CDF 2.0.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ApplicationValueSpecification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:VALUE-SPECIFICATION"/>
         <xsd:group ref="AR:APPLICATION-VALUE-SPECIFICATION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class Constants::ArrayValueSpecification -->
   <xsd:group name="ARRAY-VALUE-SPECIFICATION">
      <xsd:annotation>
         <xsd:documentation>Specifies the values for an array.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ArrayValueSpecification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ELEMENTS">
            <xsd:annotation>
               <xsd:documentation>The value for a single array element. All ValueSpecifications aggregated by ArrayValueSpecification shall have the same structure.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ArrayValueSpecification.element";pureMM.maxOccurs="-1";pureMM.minOccurs="1";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="APPLICATION-RULE-BASED-VALUE-SPECIFICATION" type="AR:APPLICATION-RULE-BASED-VALUE-SPECIFICATION"/>
                  <xsd:element name="APPLICATION-VALUE-SPECIFICATION" type="AR:APPLICATION-VALUE-SPECIFICATION"/>
                  <xsd:element name="ARRAY-VALUE-SPECIFICATION" type="AR:ARRAY-VALUE-SPECIFICATION"/>
                  <xsd:element name="CONSTANT-REFERENCE" type="AR:CONSTANT-REFERENCE"/>
                  <xsd:element name="NUMERICAL-RULE-BASED-VALUE-SPECIFICATION" type="AR:NUMERICAL-RULE-BASED-VALUE-SPECIFICATION"/>
                  <xsd:element name="NUMERICAL-VALUE-SPECIFICATION" type="AR:NUMERICAL-VALUE-SPECIFICATION"/>
                  <xsd:element name="RECORD-VALUE-SPECIFICATION" type="AR:RECORD-VALUE-SPECIFICATION"/>
                  <xsd:element name="REFERENCE-VALUE-SPECIFICATION" type="AR:REFERENCE-VALUE-SPECIFICATION"/>
                  <xsd:element name="TEXT-VALUE-SPECIFICATION" type="AR:TEXT-VALUE-SPECIFICATION"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Constants::ArrayValueSpecification -->
   <xsd:complexType abstract="false" mixed="false" name="ARRAY-VALUE-SPECIFICATION">
      <xsd:annotation>
         <xsd:documentation>Specifies the values for an array.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ArrayValueSpecification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:VALUE-SPECIFICATION"/>
         <xsd:group ref="AR:ARRAY-VALUE-SPECIFICATION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class Constants::ConstantReference -->
   <xsd:group name="CONSTANT-REFERENCE">
      <xsd:annotation>
         <xsd:documentation>Instead of defining this value inline, a constant is referenced.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ConstantReference"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="CONSTANT-REF">
            <xsd:annotation>
               <xsd:documentation>The referenced constant.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ConstantReference.constant";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:CONSTANT-SPECIFICATION--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Constants::ConstantReference -->
   <xsd:complexType abstract="false" mixed="false" name="CONSTANT-REFERENCE">
      <xsd:annotation>
         <xsd:documentation>Instead of defining this value inline, a constant is referenced.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ConstantReference"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:VALUE-SPECIFICATION"/>
         <xsd:group ref="AR:CONSTANT-REFERENCE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class Constants::NumericalRuleBasedValueSpecification -->
   <xsd:group name="NUMERICAL-RULE-BASED-VALUE-SPECIFICATION">
      <xsd:annotation>
         <xsd:documentation>This meta-class is used to support a rule-based initialization approach for data types with an array-nature (ImplementationDataType of category ARRAY).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="NumericalRuleBasedValueSpecification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="RULE-BASED-VALUES" type="AR:RULE-BASED-VALUE-SPECIFICATION">
            <xsd:annotation>
               <xsd:documentation>This represents the rule based value specification for the array.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="NumericalRuleBasedValueSpecification.ruleBasedValues";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.roleElement="true";xml.roleWrapperElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Constants::NumericalRuleBasedValueSpecification -->
   <xsd:complexType abstract="false" mixed="false" name="NUMERICAL-RULE-BASED-VALUE-SPECIFICATION">
      <xsd:annotation>
         <xsd:documentation>This meta-class is used to support a rule-based initialization approach for data types with an array-nature (ImplementationDataType of category ARRAY).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="NumericalRuleBasedValueSpecification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:VALUE-SPECIFICATION"/>
         <xsd:group ref="AR:ABSTRACT-RULE-BASED-VALUE-SPECIFICATION"/>
         <xsd:group ref="AR:NUMERICAL-RULE-BASED-VALUE-SPECIFICATION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class Constants::NumericalValueSpecification -->
   <xsd:group name="NUMERICAL-VALUE-SPECIFICATION">
      <xsd:annotation>
         <xsd:documentation>A numerical  ValueSpecification which is intended to be assigned to a Primitive data element.
Note that the numerical value is a variant, it can be computed by a formula.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="NumericalValueSpecification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="VALUE" type="AR:NUMERICAL-VALUE-VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This is the value itself.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="NumericalValueSpecification.value";pureMM.maxOccurs="1";pureMM.minOccurs="1";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Constants::NumericalValueSpecification -->
   <xsd:complexType abstract="false" mixed="false" name="NUMERICAL-VALUE-SPECIFICATION">
      <xsd:annotation>
         <xsd:documentation>A numerical  ValueSpecification which is intended to be assigned to a Primitive data element.
Note that the numerical value is a variant, it can be computed by a formula.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="NumericalValueSpecification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:VALUE-SPECIFICATION"/>
         <xsd:group ref="AR:NUMERICAL-VALUE-SPECIFICATION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class Constants::ValueSpecification -->
   <xsd:group name="VALUE-SPECIFICATION">
      <xsd:annotation>
         <xsd:documentation>Base class for expressions leading to a value which can be used to initialize a data object.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ValueSpecification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="SHORT-LABEL" type="AR:IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>This can be used to identify particular value specifications for human readers, for example elements of a record type.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ValueSpecification.shortLabel";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ValueSpecification.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
 <!-- element group for class Constants::AbstractRuleBasedValueSpecification -->
   <xsd:group name="ABSTRACT-RULE-BASED-VALUE-SPECIFICATION">
      <xsd:annotation>
         <xsd:documentation>This represents an abstract base class for all rule-based value specifications.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AbstractRuleBasedValueSpecification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
<!-- element group for class Constants::RecordValueSpecification -->
   <xsd:group name="RECORD-VALUE-SPECIFICATION">
      <xsd:annotation>
         <xsd:documentation>Specifies the values for a record.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RecordValueSpecification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="FIELDS">
            <xsd:annotation>
               <xsd:documentation>The value for a single record field. This could also be mapped explicitly to a record element of the data type using the shortName of the ValueSpecification. But this would introduce a relationship to the data type that is too strong. As of now, it is only important that the structure of the data type matches the structure of the ValueSpecification indepenently of the shortNames.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RecordValueSpecification.field";pureMM.maxOccurs="-1";pureMM.minOccurs="1";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="APPLICATION-RULE-BASED-VALUE-SPECIFICATION" type="AR:APPLICATION-RULE-BASED-VALUE-SPECIFICATION"/>
                  <xsd:element name="APPLICATION-VALUE-SPECIFICATION" type="AR:APPLICATION-VALUE-SPECIFICATION"/>
                  <xsd:element name="ARRAY-VALUE-SPECIFICATION" type="AR:ARRAY-VALUE-SPECIFICATION"/>
                  <xsd:element name="CONSTANT-REFERENCE" type="AR:CONSTANT-REFERENCE"/>
                  <xsd:element name="NUMERICAL-RULE-BASED-VALUE-SPECIFICATION" type="AR:NUMERICAL-RULE-BASED-VALUE-SPECIFICATION"/>
                  <xsd:element name="NUMERICAL-VALUE-SPECIFICATION" type="AR:NUMERICAL-VALUE-SPECIFICATION"/>
                  <xsd:element name="RECORD-VALUE-SPECIFICATION" type="AR:RECORD-VALUE-SPECIFICATION"/>
                  <xsd:element name="REFERENCE-VALUE-SPECIFICATION" type="AR:REFERENCE-VALUE-SPECIFICATION"/>
                  <xsd:element name="TEXT-VALUE-SPECIFICATION" type="AR:TEXT-VALUE-SPECIFICATION"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Constants::RecordValueSpecification -->
   <xsd:complexType abstract="false" mixed="false" name="RECORD-VALUE-SPECIFICATION">
      <xsd:annotation>
         <xsd:documentation>Specifies the values for a record.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RecordValueSpecification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:VALUE-SPECIFICATION"/>
         <xsd:group ref="AR:RECORD-VALUE-SPECIFICATION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class Constants::TextValueSpecification -->
   <xsd:group name="TEXT-VALUE-SPECIFICATION">
      <xsd:annotation>
         <xsd:documentation>The purpose of TextValueSpecification is to define the labels that correspond to enumeration values.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TextValueSpecification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="VALUE" type="AR:VERBATIM-STRING">
            <xsd:annotation>
               <xsd:documentation>This is the value itself.

Note that vt uses the | operator to separate the values for the different bitfield masks in case that the semantics of the related DataPrototype is described by means of a BITFIELD_TEXTTABLE in the associated CompuMethod.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="TextValueSpecification.value";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Constants::TextValueSpecification -->
   <xsd:complexType abstract="false" mixed="false" name="TEXT-VALUE-SPECIFICATION">
      <xsd:annotation>
         <xsd:documentation>The purpose of TextValueSpecification is to define the labels that correspond to enumeration values.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TextValueSpecification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:VALUE-SPECIFICATION"/>
         <xsd:group ref="AR:TEXT-VALUE-SPECIFICATION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class DataDefProperties::SwDataDefProps -->
   <xsd:group name="SW-DATA-DEF-PROPS">
      <xsd:annotation>
         <xsd:documentation>This class is a collection of properties relevant for data objects under various aspects. One could consider this class as a "pattern of inheritance by aggregation". The properties can be applied to all objects of all classes in which SwDataDefProps is aggregated.

Note that not all of the attributes or associated elements are useful all of the time. Hence, the process definition (e.g. expressed with an OCL or a Document Control Instance MSR-DCI) has the task of implementing limitations.

SwDataDefProps covers various aspects:

* Structure of the data element for calibration use cases: is it a single value, a curve, or a map, but also the recordLayouts which specify how such elements are mapped/converted to the DataTypes in the programming language (or in AUTOSAR). This is mainly expressed by properties like swRecordLayout and swCalprmAxisSet 

* Implementation aspects, mainly expressed by swImplPolicy, swVariableAccessImplPolicy, swAddrMethod, swPointerTagetProps, baseType, implementationDataType and additionalNativeTypeQualifier

* Access policy for the MCD system, mainly expressed by swCalibrationAccess 

* Semantics of the data element, mainly expressed by compuMethod and/or unit, dataConstr, invalidValue

* Code generation policy provided by swRecordLayout</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps";vh.latestBindingTime="codeGenerationTime"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-DATA-DEF-PROPS-VARIANTS">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.SwDataDefPropsVariant";pureMM.maxOccurs="-1";pureMM.minOccurs="1";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="SW-DATA-DEF-PROPS-CONDITIONAL" type="AR:SW-DATA-DEF-PROPS-CONDITIONAL"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class DataDefProperties::SwDataDefProps -->
   <xsd:complexType abstract="false" mixed="false" name="SW-DATA-DEF-PROPS">
      <xsd:annotation>
         <xsd:documentation>This class is a collection of properties relevant for data objects under various aspects. One could consider this class as a "pattern of inheritance by aggregation". The properties can be applied to all objects of all classes in which SwDataDefProps is aggregated.

Note that not all of the attributes or associated elements are useful all of the time. Hence, the process definition (e.g. expressed with an OCL or a Document Control Instance MSR-DCI) has the task of implementing limitations.

SwDataDefProps covers various aspects:

* Structure of the data element for calibration use cases: is it a single value, a curve, or a map, but also the recordLayouts which specify how such elements are mapped/converted to the DataTypes in the programming language (or in AUTOSAR). This is mainly expressed by properties like swRecordLayout and swCalprmAxisSet 

* Implementation aspects, mainly expressed by swImplPolicy, swVariableAccessImplPolicy, swAddrMethod, swPointerTagetProps, baseType, implementationDataType and additionalNativeTypeQualifier

* Access policy for the MCD system, mainly expressed by swCalibrationAccess 

* Semantics of the data element, mainly expressed by compuMethod and/or unit, dataConstr, invalidValue

* Code generation policy provided by swRecordLayout</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps";vh.latestBindingTime="codeGenerationTime"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SW-DATA-DEF-PROPS"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class Constants::ReferenceValueSpecification -->
   <xsd:group name="REFERENCE-VALUE-SPECIFICATION">
      <xsd:annotation>
         <xsd:documentation>Specifies a reference to a data prototype to be used as an initial value for a pointer in the software.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ReferenceValueSpecification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="REFERENCE-VALUE-REF">
            <xsd:annotation>
               <xsd:documentation>The referenced data prototype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ReferenceValueSpecification.referenceValue";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:DATA-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Constants::ReferenceValueSpecification -->
   <xsd:complexType abstract="false" mixed="false" name="REFERENCE-VALUE-SPECIFICATION">
      <xsd:annotation>
         <xsd:documentation>Specifies a reference to a data prototype to be used as an initial value for a pointer in the software.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ReferenceValueSpecification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:VALUE-SPECIFICATION"/>
         <xsd:group ref="AR:REFERENCE-VALUE-SPECIFICATION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class BswBehavior::BswPerInstanceMemoryPolicy -->
   <xsd:group name="BSW-PER-INSTANCE-MEMORY-POLICY">
      <xsd:annotation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswPerInstanceMemoryPolicy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="AR-TYPED-PER-INSTANCE-MEMORY-REF">
            <xsd:annotation>
               <xsd:documentation>The arTypedPerInstanceMemory for which the BSW Scheduler using this policy</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswPerInstanceMemoryPolicy.arTypedPerInstanceMemory";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:VARIABLE-DATA-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswPerInstanceMemoryPolicy.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswPerInstanceMemoryPolicy -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-PER-INSTANCE-MEMORY-POLICY">
      <xsd:annotation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswPerInstanceMemoryPolicy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:BSW-API-OPTIONS"/>
         <xsd:group ref="AR:BSW-PER-INSTANCE-MEMORY-POLICY"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class BswBehavior::BswClientPolicy -->
   <xsd:group name="BSW-CLIENT-POLICY">
      <xsd:annotation>
         <xsd:documentation>The requiredClientServerEntry for which the BSW Scheduler using this policy.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswClientPolicy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="REQUIRED-CLIENT-SERVER-ENTRY-REF">
            <xsd:annotation>
               <xsd:documentation>The requiredClientServerEntry for which the BSW Scheduler using this policy.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswClientPolicy.requiredClientServerEntry";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:BSW-MODULE-CLIENT-SERVER-ENTRY--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswClientPolicy.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswClientPolicy -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-CLIENT-POLICY">
      <xsd:annotation>
         <xsd:documentation>The requiredClientServerEntry for which the BSW Scheduler using this policy.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswClientPolicy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:BSW-API-OPTIONS"/>
         <xsd:group ref="AR:BSW-CLIENT-POLICY"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class BswBehavior::BswExclusiveAreaPolicy -->
   <xsd:group name="BSW-EXCLUSIVE-AREA-POLICY">
      <xsd:annotation>
         <xsd:documentation>The ExclusiveArea for which the BSW Scheduler using this policy.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswExclusiveAreaPolicy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="EXCLUSIVE-AREA-REF">
            <xsd:annotation>
               <xsd:documentation>The ExclusiveArea for which the BSW Scheduler using this policy.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswExclusiveAreaPolicy.exclusiveArea";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:EXCLUSIVE-AREA--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswExclusiveAreaPolicy.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswExclusiveAreaPolicy -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-EXCLUSIVE-AREA-POLICY">
      <xsd:annotation>
         <xsd:documentation>The ExclusiveArea for which the BSW Scheduler using this policy.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswExclusiveAreaPolicy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:BSW-API-OPTIONS"/>
         <xsd:group ref="AR:BSW-EXCLUSIVE-AREA-POLICY"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class IncludedDataTypes::IncludedDataTypeSet -->
   <xsd:group name="INCLUDED-DATA-TYPE-SET">
      <xsd:annotation>
         <xsd:documentation>An includedDataTypeSet declares that a set of AutosarDataType is used by a basic software module or a software component for its implementation and the AutosarDataType becomes part of the contract. 

This information is required if the AutosarDataType is not used for any DataPrototype owned by this software component or if the enumeration literals, lowerLimit and upperLimit constants shall be generated with a literalPrefix.

The optional literalPrefix is used to add a common prefix on enumeration literals, lowerLimit and upperLimit constants created by the RTE.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="IncludedDataTypeSet"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="DATA-TYPE-REFS">
            <xsd:annotation>
               <xsd:documentation>AutosarDataType belonging to the includedDataTypeSet</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="IncludedDataTypeSet.dataType";pureMM.maxOccurs="-1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="DATA-TYPE-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:AUTOSAR-DATA-TYPE--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="LITERAL-PREFIX" type="AR:IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>LiteralPrefix defines a common prefix for all AutosarDataTypes of the includedDataTypeSet to be added on enumeration literals, lowerLimit and upperLimit constants created by the RTE.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="IncludedDataTypeSet.literalPrefix";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class IncludedDataTypes::IncludedDataTypeSet -->
   <xsd:complexType abstract="false" mixed="false" name="INCLUDED-DATA-TYPE-SET">
      <xsd:annotation>
         <xsd:documentation>An includedDataTypeSet declares that a set of AutosarDataType is used by a basic software module or a software component for its implementation and the AutosarDataType becomes part of the contract. 

This information is required if the AutosarDataType is not used for any DataPrototype owned by this software component or if the enumeration literals, lowerLimit and upperLimit constants shall be generated with a literalPrefix.

The optional literalPrefix is used to add a common prefix on enumeration literals, lowerLimit and upperLimit constants created by the RTE.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="IncludedDataTypeSet"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:INCLUDED-DATA-TYPE-SET"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class BswBehavior::BswApiOptions -->
   <xsd:group name="BSW-API-OPTIONS">
      <xsd:annotation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswApiOptions"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ENABLE-TAKE-ADDRESS" type="AR:BOOLEAN">
            <xsd:annotation>
               <xsd:documentation>If set to true, the BSW Module is able to use the API reference for deriving a pointer to an object</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswApiOptions.enableTakeAddress";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
<!-- element group for class BswBehavior::BswInternalTriggeringPointPolicy -->
   <xsd:group name="BSW-INTERNAL-TRIGGERING-POINT-POLICY">
      <xsd:annotation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswInternalTriggeringPointPolicy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="BSW-INTERNAL-TRIGGERING-POINT-REF">
            <xsd:annotation>
               <xsd:documentation>The BswInternalTriggeringPoint for which the BSW Scheduler using this policy.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswInternalTriggeringPointPolicy.bswInternalTriggeringPoint";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:BSW-INTERNAL-TRIGGERING-POINT--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswInternalTriggeringPointPolicy.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswInternalTriggeringPointPolicy -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-INTERNAL-TRIGGERING-POINT-POLICY">
      <xsd:annotation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswInternalTriggeringPointPolicy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:BSW-API-OPTIONS"/>
         <xsd:group ref="AR:BSW-INTERNAL-TRIGGERING-POINT-POLICY"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class BswBehavior::BswParameterPolicy -->
   <xsd:group name="BSW-PARAMETER-POLICY">
      <xsd:annotation>
         <xsd:documentation>The perInstanceParameter for which the BSW Scheduler using this policy.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswParameterPolicy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="PER-INSTANCE-PARAMETER-REF">
            <xsd:annotation>
               <xsd:documentation>The perInstanceParameter for which the BSW Scheduler using this policy.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswParameterPolicy.perInstanceParameter";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:PARAMETER-DATA-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswParameterPolicy.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswParameterPolicy -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-PARAMETER-POLICY">
      <xsd:annotation>
         <xsd:documentation>The perInstanceParameter for which the BSW Scheduler using this policy.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswParameterPolicy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:BSW-API-OPTIONS"/>
         <xsd:group ref="AR:BSW-PARAMETER-POLICY"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class BswBehavior::BswReleasedTriggerPolicy -->
   <xsd:group name="BSW-RELEASED-TRIGGER-POLICY">
      <xsd:annotation>
         <xsd:documentation>The Trigger for which the BSW Scheduler using this policy.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswReleasedTriggerPolicy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="RELEASED-TRIGGER-REF">
            <xsd:annotation>
               <xsd:documentation>The Trigger for which the BSW Scheduler using this policy.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswReleasedTriggerPolicy.releasedTrigger";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:TRIGGER--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswReleasedTriggerPolicy.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswReleasedTriggerPolicy -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-RELEASED-TRIGGER-POLICY">
      <xsd:annotation>
         <xsd:documentation>The Trigger for which the BSW Scheduler using this policy.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswReleasedTriggerPolicy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:BSW-API-OPTIONS"/>
         <xsd:group ref="AR:BSW-RELEASED-TRIGGER-POLICY"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class BswBehavior::BswDataSendPolicy -->
   <xsd:group name="BSW-DATA-SEND-POLICY">
      <xsd:annotation>
         <xsd:documentation>The data sent over the BSW Scheduler using this policy.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswDataSendPolicy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="PROVIEDE-DATA-REF">
            <xsd:annotation>
               <xsd:documentation>The data sent over the BSW Scheduler using this policy.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswDataSendPolicy.proviedeData";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:VARIABLE-DATA-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswDataSendPolicy.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswDataSendPolicy -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-DATA-SEND-POLICY">
      <xsd:annotation>
         <xsd:documentation>The data sent over the BSW Scheduler using this policy.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswDataSendPolicy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:BSW-API-OPTIONS"/>
         <xsd:group ref="AR:BSW-DATA-SEND-POLICY"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class BswBehavior::BswInternalTriggeringPoint -->
   <xsd:group name="BSW-INTERNAL-TRIGGERING-POINT">
      <xsd:annotation>
         <xsd:documentation>Represents the activation point for one or more BswInternalTriggerOccurredEvents.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswInternalTriggeringPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-IMPL-POLICY" type="AR:SW-IMPL-POLICY-ENUM">
            <xsd:annotation>
               <xsd:documentation>This attribute, when set to value queued, specifies a queued processing of the internal trigger event.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswInternalTriggeringPoint.swImplPolicy";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswInternalTriggeringPoint.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswInternalTriggeringPoint -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-INTERNAL-TRIGGERING-POINT">
      <xsd:annotation>
         <xsd:documentation>Represents the activation point for one or more BswInternalTriggerOccurredEvents.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswInternalTriggeringPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:BSW-INTERNAL-TRIGGERING-POINT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
   <xsd:simpleType name="BSW-INTERNAL-TRIGGERING-POINT--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BSW-INTERNAL-TRIGGERING-POINT"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class BswBehavior::BswCalledEntity -->
   <xsd:group name="BSW-CALLED-ENTITY">
      <xsd:annotation>
         <xsd:documentation>BSW module entity which is designed to be called from another BSW module or cluster.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswCalledEntity"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswCalledEntity -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-CALLED-ENTITY">
      <xsd:annotation>
         <xsd:documentation>BSW module entity which is designed to be called from another BSW module or cluster.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswCalledEntity"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:EXECUTABLE-ENTITY"/>
         <xsd:group ref="AR:BSW-MODULE-ENTITY"/>
         <xsd:group ref="AR:BSW-CALLED-ENTITY"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class BswBehavior::BswInterruptEntity -->
   <xsd:group name="BSW-INTERRUPT-ENTITY">
      <xsd:annotation>
         <xsd:documentation>BSW module entity, which is designed to be triggered by an interrupt.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswInterruptEntity"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="INTERRUPT-CATEGORY" type="AR:BSW-INTERRUPT-CATEGORY">
            <xsd:annotation>
               <xsd:documentation>Category of the interrupt</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswInterruptEntity.interruptCategory";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="INTERRUPT-SOURCE" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>Allows a textual documentation of the intended interrupt source.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswInterruptEntity.interruptSource";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswInterruptEntity -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-INTERRUPT-ENTITY">
      <xsd:annotation>
         <xsd:documentation>BSW module entity, which is designed to be triggered by an interrupt.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswInterruptEntity"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:EXECUTABLE-ENTITY"/>
         <xsd:group ref="AR:BSW-MODULE-ENTITY"/>
         <xsd:group ref="AR:BSW-INTERRUPT-ENTITY"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class BswBehavior::BswSchedulableEntity -->
   <xsd:group name="BSW-SCHEDULABLE-ENTITY">
      <xsd:annotation>
         <xsd:documentation>BSW module entity, which is designed for control by the BSW Scheduler. It may for example implement a so-called "main" function.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswSchedulableEntity"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswSchedulableEntity -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-SCHEDULABLE-ENTITY">
      <xsd:annotation>
         <xsd:documentation>BSW module entity, which is designed for control by the BSW Scheduler. It may for example implement a so-called "main" function.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswSchedulableEntity"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:EXECUTABLE-ENTITY"/>
         <xsd:group ref="AR:BSW-MODULE-ENTITY"/>
         <xsd:group ref="AR:BSW-SCHEDULABLE-ENTITY"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class BswBehavior::BswAsynchronousServerCallReturnsEvent -->
   <xsd:group name="BSW-ASYNCHRONOUS-SERVER-CALL-RETURNS-EVENT">
      <xsd:annotation>
         <xsd:documentation>This is the "callback" event for asynchronous Client-Server-Communication via the BSW Scheduler which is thrown after completion of the asynchronous Client-Server call.

Its eventSource specifies the call point to be used for retrieving the result.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswAsynchronousServerCallReturnsEvent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="EVENT-SOURCE-REF">
            <xsd:annotation>
               <xsd:documentation>The call point to be used for retrieving the result.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswAsynchronousServerCallReturnsEvent.eventSource";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:BSW-ASYNCHRONOUS-SERVER-CALL-RESULT-POINT--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswAsynchronousServerCallReturnsEvent -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-ASYNCHRONOUS-SERVER-CALL-RETURNS-EVENT">
      <xsd:annotation>
         <xsd:documentation>This is the "callback" event for asynchronous Client-Server-Communication via the BSW Scheduler which is thrown after completion of the asynchronous Client-Server call.

Its eventSource specifies the call point to be used for retrieving the result.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswAsynchronousServerCallReturnsEvent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ABSTRACT-EVENT"/>
         <xsd:group ref="AR:BSW-EVENT"/>
         <xsd:group ref="AR:BSW-SCHEDULE-EVENT"/>
         <xsd:group ref="AR:BSW-ASYNCHRONOUS-SERVER-CALL-RETURNS-EVENT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class BswBehavior::BswBackgroundEvent -->
   <xsd:group name="BSW-BACKGROUND-EVENT">
      <xsd:annotation>
         <xsd:documentation>A recurring BswEvent which is used to perform background activities. It is similar to a BswTimingEvent but has no fixed time period and is activated only with low priority.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswBackgroundEvent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswBackgroundEvent -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-BACKGROUND-EVENT">
      <xsd:annotation>
         <xsd:documentation>A recurring BswEvent which is used to perform background activities. It is similar to a BswTimingEvent but has no fixed time period and is activated only with low priority.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswBackgroundEvent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ABSTRACT-EVENT"/>
         <xsd:group ref="AR:BSW-EVENT"/>
         <xsd:group ref="AR:BSW-SCHEDULE-EVENT"/>
         <xsd:group ref="AR:BSW-BACKGROUND-EVENT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class BswBehavior::BswDataReceivedEvent -->
   <xsd:group name="BSW-DATA-RECEIVED-EVENT">
      <xsd:annotation>
         <xsd:documentation>This event is thrown on reception of the referenced data via Sender-Receiver-Communication over the BSW Scheduler.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswDataReceivedEvent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="DATA-REF">
            <xsd:annotation>
               <xsd:documentation>The received data.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswDataReceivedEvent.data";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:VARIABLE-DATA-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswDataReceivedEvent -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-DATA-RECEIVED-EVENT">
      <xsd:annotation>
         <xsd:documentation>This event is thrown on reception of the referenced data via Sender-Receiver-Communication over the BSW Scheduler.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswDataReceivedEvent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ABSTRACT-EVENT"/>
         <xsd:group ref="AR:BSW-EVENT"/>
         <xsd:group ref="AR:BSW-SCHEDULE-EVENT"/>
         <xsd:group ref="AR:BSW-DATA-RECEIVED-EVENT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class BswBehavior::BswExternalTriggerOccurredEvent -->
   <xsd:group name="BSW-EXTERNAL-TRIGGER-OCCURRED-EVENT">
      <xsd:annotation>
         <xsd:documentation>A BswEvent resulting from a trigger released by another module or cluster.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswExternalTriggerOccurredEvent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="TRIGGER-REF">
            <xsd:annotation>
               <xsd:documentation>The trigger associated with this event. The trigger is external to this module.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswExternalTriggerOccurredEvent.trigger";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:TRIGGER--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswExternalTriggerOccurredEvent -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-EXTERNAL-TRIGGER-OCCURRED-EVENT">
      <xsd:annotation>
         <xsd:documentation>A BswEvent resulting from a trigger released by another module or cluster.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswExternalTriggerOccurredEvent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ABSTRACT-EVENT"/>
         <xsd:group ref="AR:BSW-EVENT"/>
         <xsd:group ref="AR:BSW-SCHEDULE-EVENT"/>
         <xsd:group ref="AR:BSW-EXTERNAL-TRIGGER-OCCURRED-EVENT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class BswBehavior::BswInternalTriggerOccurredEvent -->
   <xsd:group name="BSW-INTERNAL-TRIGGER-OCCURRED-EVENT">
      <xsd:annotation>
         <xsd:documentation>A BswEvent, which can happen sporadically. The event is activated by explicit calls from the module to the BSW Scheduler. The main purpose for such an event is to cause a context switch, e.g. from an ISR context into a task context. Activation and switching are handled within the same module or cluster only.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswInternalTriggerOccurredEvent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="EVENT-SOURCE-REF">
            <xsd:annotation>
               <xsd:documentation>The activation point is the source of this event.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswInternalTriggerOccurredEvent.eventSource";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:BSW-INTERNAL-TRIGGERING-POINT--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswInternalTriggerOccurredEvent -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-INTERNAL-TRIGGER-OCCURRED-EVENT">
      <xsd:annotation>
         <xsd:documentation>A BswEvent, which can happen sporadically. The event is activated by explicit calls from the module to the BSW Scheduler. The main purpose for such an event is to cause a context switch, e.g. from an ISR context into a task context. Activation and switching are handled within the same module or cluster only.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswInternalTriggerOccurredEvent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ABSTRACT-EVENT"/>
         <xsd:group ref="AR:BSW-EVENT"/>
         <xsd:group ref="AR:BSW-SCHEDULE-EVENT"/>
         <xsd:group ref="AR:BSW-INTERNAL-TRIGGER-OCCURRED-EVENT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
 <!-- element group for class BswBehavior::BswModeManagerErrorEvent -->
   <xsd:group name="BSW-MODE-MANAGER-ERROR-EVENT">
      <xsd:annotation>
         <xsd:documentation>This represents the ability to react on errors occurring during mode handling.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswModeManagerErrorEvent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="MODE-GROUP-REF">
            <xsd:annotation>
               <xsd:documentation>This represents the ModeDeclarationGroupPrototype for which the error behavior of the mode manager applies.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModeManagerErrorEvent.modeGroup";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:MODE-DECLARATION-GROUP-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswModeManagerErrorEvent -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-MODE-MANAGER-ERROR-EVENT">
      <xsd:annotation>
         <xsd:documentation>This represents the ability to react on errors occurring during mode handling.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswModeManagerErrorEvent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ABSTRACT-EVENT"/>
         <xsd:group ref="AR:BSW-EVENT"/>
         <xsd:group ref="AR:BSW-SCHEDULE-EVENT"/>
         <xsd:group ref="AR:BSW-MODE-MANAGER-ERROR-EVENT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class BswBehavior::BswModeSwitchEvent -->
   <xsd:group name="BSW-MODE-SWITCH-EVENT">
      <xsd:annotation>
         <xsd:documentation>A BswEvent resulting from a mode switch.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswModeSwitchEvent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ACTIVATION" type="AR:MODE-ACTIVATION-KIND">
            <xsd:annotation>
               <xsd:documentation>Kind of activation w.r.t. to the referred mode.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModeSwitchEvent.activation";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MODE-IREFS">
            <xsd:annotation>
               <xsd:documentation>Reference to one or two Modes that initiate the Mode Switch Event.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModeSwitchEvent.mode";pureMM.maxOccurs="2";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="2" minOccurs="0">
                  <xsd:element name="MODE-IREF" type="AR:MODE-IN-BSW-MODULE-DESCRIPTION-INSTANCE-REF"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswModeSwitchEvent -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-MODE-SWITCH-EVENT">
      <xsd:annotation>
         <xsd:documentation>A BswEvent resulting from a mode switch.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswModeSwitchEvent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ABSTRACT-EVENT"/>
         <xsd:group ref="AR:BSW-EVENT"/>
         <xsd:group ref="AR:BSW-SCHEDULE-EVENT"/>
         <xsd:group ref="AR:BSW-MODE-SWITCH-EVENT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
 <!-- element group for class BswBehavior::BswModeSwitchedAckEvent -->
   <xsd:group name="BSW-MODE-SWITCHED-ACK-EVENT">
      <xsd:annotation>
         <xsd:documentation>The event is raised after a switch of the referenced mode group has been acknowledged or an error occurs. The referenced mode group must be provided by this module.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswModeSwitchedAckEvent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="MODE-GROUP-REF">
            <xsd:annotation>
               <xsd:documentation>A mode group provided by this module. The acknowledgement of a switch of this group raises this event.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModeSwitchedAckEvent.modeGroup";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:MODE-DECLARATION-GROUP-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswModeSwitchedAckEvent -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-MODE-SWITCHED-ACK-EVENT">
      <xsd:annotation>
         <xsd:documentation>The event is raised after a switch of the referenced mode group has been acknowledged or an error occurs. The referenced mode group must be provided by this module.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswModeSwitchedAckEvent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ABSTRACT-EVENT"/>
         <xsd:group ref="AR:BSW-EVENT"/>
         <xsd:group ref="AR:BSW-SCHEDULE-EVENT"/>
         <xsd:group ref="AR:BSW-MODE-SWITCHED-ACK-EVENT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class BswBehavior::BswOperationInvokedEvent -->
   <xsd:group name="BSW-OPERATION-INVOKED-EVENT">
      <xsd:annotation>
         <xsd:documentation>This event is thrown on operation invocation in Client-Server-Communication via the BSW Scheduler. Its "entry" reference provides the BswClientServerEntry that is called subsequently.

Note this event is not needed in case of direct function calls.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswOperationInvokedEvent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ENTRY-REF">
            <xsd:annotation>
               <xsd:documentation>The providedClientServerEntry invoked by this event.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswOperationInvokedEvent.entry";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:BSW-MODULE-CLIENT-SERVER-ENTRY--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswOperationInvokedEvent -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-OPERATION-INVOKED-EVENT">
      <xsd:annotation>
         <xsd:documentation>This event is thrown on operation invocation in Client-Server-Communication via the BSW Scheduler. Its "entry" reference provides the BswClientServerEntry that is called subsequently.

Note this event is not needed in case of direct function calls.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswOperationInvokedEvent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ABSTRACT-EVENT"/>
         <xsd:group ref="AR:BSW-EVENT"/>
         <xsd:group ref="AR:BSW-OPERATION-INVOKED-EVENT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class BswBehavior::BswTimingEvent -->
   <xsd:group name="BSW-TIMING-EVENT">
      <xsd:annotation>
         <xsd:documentation>A recurring BswEvent driven by a time period.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswTimingEvent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="PERIOD" type="AR:TIME-VALUE">
            <xsd:annotation>
               <xsd:documentation>Requirement for the time period (in seconds) by which this event is triggered.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswTimingEvent.period";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswTimingEvent -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-TIMING-EVENT">
      <xsd:annotation>
         <xsd:documentation>A recurring BswEvent driven by a time period.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswTimingEvent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ABSTRACT-EVENT"/>
         <xsd:group ref="AR:BSW-EVENT"/>
         <xsd:group ref="AR:BSW-SCHEDULE-EVENT"/>
         <xsd:group ref="AR:BSW-TIMING-EVENT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class InternalBehavior::ExecutableEntity -->
   <xsd:group name="EXECUTABLE-ENTITY">
      <xsd:annotation>
         <xsd:documentation>Abstraction of executable code.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ExecutableEntity"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ACTIVATION-REASONS">
            <xsd:annotation>
               <xsd:documentation>If the ExecutableEntity provides at least one activationReason element the RTE resp. BSW Scheduler shall provide means to read the activation vector of this executable entity execution.

If no activationReason element is provided the feature of being able to determine the activating RTEEvent is disabled for this ExecutableEntity.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ExecutableEntity.activationReason";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="EXECUTABLE-ENTITY-ACTIVATION-REASON" type="AR:EXECUTABLE-ENTITY-ACTIVATION-REASON"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="CAN-ENTER-EXCLUSIVE-AREA-REFS">
            <xsd:annotation>
               <xsd:documentation>This means that the executable entity can enter/leave the referenced exclusive area through explicit API calls.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ExecutableEntity.canEnterExclusiveArea";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="CAN-ENTER-EXCLUSIVE-AREA-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:EXCLUSIVE-AREA--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="EXCLUSIVE-AREA-NESTING-ORDER-REFS">
            <xsd:annotation>
               <xsd:documentation>This represents the set of ExclusiveAreaNestingOrders recognized by this ExecutableEntity.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ExecutableEntity.exclusiveAreaNestingOrder";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="EXCLUSIVE-AREA-NESTING-ORDER-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:EXCLUSIVE-AREA-NESTING-ORDER--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MINIMUM-START-INTERVAL" type="AR:TIME-VALUE">
            <xsd:annotation>
               <xsd:documentation>Specifies the time in seconds by which two consecutive starts of an ExecutableEntity are guaranteed to be separated.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ExecutableEntity.minimumStartInterval";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="REENTRANCY-LEVEL" type="AR:REENTRANCY-LEVEL-ENUM">
            <xsd:annotation>
               <xsd:documentation>The reentrancy level of this ExecutableEntity. See the documentation of the enumeration type ReentrancyLevelEnum for details.

Please note that nonReentrant interfaces can have also reentrant or multicoreReentrant implementations, and reentrant interfaces can also have multicoreReentrant implementations.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ExecutableEntity.reentrancyLevel";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="RUNS-INSIDE-EXCLUSIVE-AREA-REFS">
            <xsd:annotation>
               <xsd:documentation>The executable entity runs completely inside the referenced exclusive area.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ExecutableEntity.runsInsideExclusiveArea";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="RUNS-INSIDE-EXCLUSIVE-AREA-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:EXCLUSIVE-AREA--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-ADDR-METHOD-REF">
            <xsd:annotation>
               <xsd:documentation>Addressing method related to this code entity. Via an association to the same SwAddrMethod, it can be specified that several code entities (even of different modules or components)  shall be located in the same memory without already specifying the memory section itself.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ExecutableEntity.swAddrMethod";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:SW-ADDR-METHOD--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <xsd:simpleType name="EXECUTABLE-ENTITY--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BSW-CALLED-ENTITY"/>
         <xsd:enumeration value="BSW-INTERRUPT-ENTITY"/>
         <xsd:enumeration value="BSW-MODULE-ENTITY"/>
         <xsd:enumeration value="BSW-SCHEDULABLE-ENTITY"/>
         <xsd:enumeration value="EXECUTABLE-ENTITY"/>
         <xsd:enumeration value="RUNNABLE-ENTITY"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class BswBehavior::BswModuleEntity -->
   <xsd:group name="BSW-MODULE-ENTITY">
      <xsd:annotation>
         <xsd:documentation>Specifies the smallest code fragment which can be described for a BSW module or cluster within AUTOSAR.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleEntity"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ACCESSED-MODE-GROUPS">
            <xsd:annotation>
               <xsd:documentation>A mode group which is accessed via API call by this entity. It must be a ModeDeclarationGroupPrototype required by this module or cluster.
This property was modified due to atpVariation (DirectedAssociationPattern).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleEntity.accessedModeGroup";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="MODE-DECLARATION-GROUP-PROTOTYPE-REF-CONDITIONAL" type="AR:MODE-DECLARATION-GROUP-PROTOTYPE-REF-CONDITIONAL"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ACTIVATION-POINTS">
            <xsd:annotation>
               <xsd:documentation>Activation point used by the module entity to activate one or more internal triggers.
This property was modified due to atpVariation (DirectedAssociationPattern).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleEntity.activationPoint";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-INTERNAL-TRIGGERING-POINT-REF-CONDITIONAL" type="AR:BSW-INTERNAL-TRIGGERING-POINT-REF-CONDITIONAL"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="CALL-POINTS">
            <xsd:annotation>
               <xsd:documentation>A call point used in the code of this entitiy.

The variablity of this association is especially targeted at debug scenarios: It is possible to have one variant calling into the AUTOSAR debug module and another one which doesn't.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleEntity.callPoint";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-ASYNCHRONOUS-SERVER-CALL-POINT" type="AR:BSW-ASYNCHRONOUS-SERVER-CALL-POINT"/>
                  <xsd:element name="BSW-ASYNCHRONOUS-SERVER-CALL-RESULT-POINT" type="AR:BSW-ASYNCHRONOUS-SERVER-CALL-RESULT-POINT"/>
                  <xsd:element name="BSW-DIRECT-CALL-POINT" type="AR:BSW-DIRECT-CALL-POINT"/>
                  <xsd:element name="BSW-SYNCHRONOUS-SERVER-CALL-POINT" type="AR:BSW-SYNCHRONOUS-SERVER-CALL-POINT"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="CALLED-ENTRYS">
            <xsd:annotation>
               <xsd:documentation>The entry of another (or the same) BSW module which is called by this entry (usually via C function call). This information allows to set up a model of call chains.

The variablity of this association is especially targeted at debug scenarios: It is possible to have one variant calling into the AUTOSAR debug module and another one which doesn't.

Note that this relation has been merked as obsolete, since the more powerful definition of a callPoint should be used.
This property was modified due to atpVariation (DirectedAssociationPattern).</xsd:documentation>
               <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="BswModuleEntity.calledEntry";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-MODULE-ENTRY-REF-CONDITIONAL" type="AR:BSW-MODULE-ENTRY-REF-CONDITIONAL"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="DATA-RECEIVE-POINTS">
            <xsd:annotation>
               <xsd:documentation>The data is received via the BSW Scheduler.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleEntity.dataReceivePoint";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-VARIABLE-ACCESS" type="AR:BSW-VARIABLE-ACCESS"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="DATA-SEND-POINTS">
            <xsd:annotation>
               <xsd:documentation>The data is sent via the BSW Scheduler.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleEntity.dataSendPoint";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-VARIABLE-ACCESS" type="AR:BSW-VARIABLE-ACCESS"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="IMPLEMENTED-ENTRY-REF">
            <xsd:annotation>
               <xsd:documentation>The entry which is implemented by this module entity.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleEntity.implementedEntry";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:BSW-MODULE-ENTRY--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ISSUED-TRIGGERS">
            <xsd:annotation>
               <xsd:documentation>A trigger issued by this entity via BSW Scheduler API call. It must be a BswTrigger released (i.e. owned) by this module or cluster.
This property was modified due to atpVariation (DirectedAssociationPattern).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleEntity.issuedTrigger";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="TRIGGER-REF-CONDITIONAL" type="AR:TRIGGER-REF-CONDITIONAL"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MANAGED-MODE-GROUPS">
            <xsd:annotation>
               <xsd:documentation>A mode group which is managed by this entity. It must be a ModeDeclarationGroupPrototype provided by this module or cluster.
This property was modified due to atpVariation (DirectedAssociationPattern).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleEntity.managedModeGroup";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="MODE-DECLARATION-GROUP-PROTOTYPE-REF-CONDITIONAL" type="AR:MODE-DECLARATION-GROUP-PROTOTYPE-REF-CONDITIONAL"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SCHEDULER-NAME-PREFIX-REF">
            <xsd:annotation>
               <xsd:documentation>A prefix to be used in generated names for the BswModuleScheduler in the context of this BswModuleEntity, for example entry point prototypes, macros for dealing with exclusive areas, header file names.

Details are defined in the SWS RTE.

The prefix supersedes default rules for the prefix of those names.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleEntity.schedulerNamePrefix";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:BSW-SCHEDULER-NAME-PREFIX--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleEntity.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <xsd:simpleType name="BSW-MODULE-ENTITY--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BSW-CALLED-ENTITY"/>
         <xsd:enumeration value="BSW-INTERRUPT-ENTITY"/>
         <xsd:enumeration value="BSW-MODULE-ENTITY"/>
         <xsd:enumeration value="BSW-SCHEDULABLE-ENTITY"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class InternalBehavior::AbstractEvent -->
   <xsd:group name="ABSTRACT-EVENT">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the abstract ability to model an event that can be taken to implement application software or basic software in AUTOSAR.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AbstractEvent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ACTIVATION-REASON-REPRESENTATION-REF">
            <xsd:annotation>
               <xsd:documentation>If the activationReasonRepresentation is referenced from the enclosing AbstractEvent this shall be taken as an indication that the latter contributes to the activating vector of this ExecutableEntity that owns the referenced ExecutableEntityActivationReason.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AbstractEvent.activationReasonRepresentation";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:EXECUTABLE-ENTITY-ACTIVATION-REASON--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <xsd:simpleType name="ABSTRACT-EVENT--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ABSTRACT-EVENT"/>
         <xsd:enumeration value="ASYNCHRONOUS-SERVER-CALL-RETURNS-EVENT"/>
         <xsd:enumeration value="BACKGROUND-EVENT"/>
         <xsd:enumeration value="BSW-ASYNCHRONOUS-SERVER-CALL-RETURNS-EVENT"/>
         <xsd:enumeration value="BSW-BACKGROUND-EVENT"/>
         <xsd:enumeration value="BSW-DATA-RECEIVED-EVENT"/>
         <xsd:enumeration value="BSW-EVENT"/>
         <xsd:enumeration value="BSW-EXTERNAL-TRIGGER-OCCURRED-EVENT"/>
         <xsd:enumeration value="BSW-INTERNAL-TRIGGER-OCCURRED-EVENT"/>
         <xsd:enumeration value="BSW-MODE-MANAGER-ERROR-EVENT"/>
         <xsd:enumeration value="BSW-MODE-SWITCH-EVENT"/>
         <xsd:enumeration value="BSW-MODE-SWITCHED-ACK-EVENT"/>
         <xsd:enumeration value="BSW-OPERATION-INVOKED-EVENT"/>
         <xsd:enumeration value="BSW-SCHEDULE-EVENT"/>
         <xsd:enumeration value="BSW-TIMING-EVENT"/>
         <xsd:enumeration value="DATA-RECEIVE-ERROR-EVENT"/>
         <xsd:enumeration value="DATA-RECEIVED-EVENT"/>
         <xsd:enumeration value="DATA-SEND-COMPLETED-EVENT"/>
         <xsd:enumeration value="DATA-WRITE-COMPLETED-EVENT"/>
         <xsd:enumeration value="EXTERNAL-TRIGGER-OCCURRED-EVENT"/>
         <xsd:enumeration value="INIT-EVENT"/>
         <xsd:enumeration value="INTERNAL-TRIGGER-OCCURRED-EVENT"/>
         <xsd:enumeration value="MODE-SWITCHED-ACK-EVENT"/>
         <xsd:enumeration value="OPERATION-INVOKED-EVENT"/>
         <xsd:enumeration value="RTE-EVENT"/>
         <xsd:enumeration value="SWC-MODE-MANAGER-ERROR-EVENT"/>
         <xsd:enumeration value="SWC-MODE-SWITCH-EVENT"/>
         <xsd:enumeration value="TIMING-EVENT"/>
         <xsd:enumeration value="TRANSFORMER-HARD-ERROR-EVENT"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class BswBehavior::BswEvent -->
   <xsd:group name="BSW-EVENT">
      <xsd:annotation>
         <xsd:documentation>Base class of various kinds of events which are used to trigger a BswModuleEntity of this BSW module or cluster. The event is local to the BSW module or cluster. The short name of the meta-class instance is intended as an input to configure the required API of the BSW Scheduler.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswEvent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="CONTEXT-LIMITATION-REFS">
            <xsd:annotation>
               <xsd:documentation>The existence of this reference indicates that the usage of the event is limited to the context of the referred BswDistinguishedPartitions.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswEvent.contextLimitation";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="CONTEXT-LIMITATION-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:BSW-DISTINGUISHED-PARTITION--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="DISABLED-IN-MODE-IREFS">
            <xsd:annotation>
               <xsd:documentation>The modes, in which this event is disabled.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="disabledInMode";mmt.qualifiedName="BswEvent.disabledInMode";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="DISABLED-IN-MODE-IREF" type="AR:MODE-IN-BSW-MODULE-DESCRIPTION-INSTANCE-REF"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="STARTS-ON-EVENT-REF">
            <xsd:annotation>
               <xsd:documentation>The entity which is started by the event.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswEvent.startsOnEvent";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:BSW-MODULE-ENTITY--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswEvent.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
 <!-- element group for class BswBehavior::BswScheduleEvent -->
   <xsd:group name="BSW-SCHEDULE-EVENT">
      <xsd:annotation>
         <xsd:documentation>BswEvent that is able to start a BswSchedulabeEntity.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswScheduleEvent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
<!-- element group for class BswBehavior::BswTriggerDirectImplementation -->
   <xsd:group name="BSW-TRIGGER-DIRECT-IMPLEMENTATION">
      <xsd:annotation>
         <xsd:documentation>Specifies a released trigger to be directly implemented via OS calls, for example in a Complex Driver module.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswTriggerDirectImplementation"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="MASTERED-TRIGGER-REF">
            <xsd:annotation>
               <xsd:documentation>The trigger which is directly mastered by this module.

There may be several different BswTriggerDirectImplementations mastering the same Trigger. This may be required e.g. due to memory partitioning.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswTriggerDirectImplementation.masteredTrigger";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:TRIGGER--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TASK" type="AR:IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>The name of the OS task, which is controlled by the referred trigger. This means, that the module uses the trigger condition to directly activate an OS task instead of calling an API of the BswScheduler. The task name is required by the RTE generator resp. BswScheduler to raise the appropriate events in components or modules receiving the trigger.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswTriggerDirectImplementation.task";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswTriggerDirectImplementation.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswTriggerDirectImplementation -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-TRIGGER-DIRECT-IMPLEMENTATION">
      <xsd:annotation>
         <xsd:documentation>Specifies a released trigger to be directly implemented via OS calls, for example in a Complex Driver module.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswTriggerDirectImplementation"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:BSW-TRIGGER-DIRECT-IMPLEMENTATION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 
<!-- element group for class BswBehavior::BswModeReceiverPolicy -->
   <xsd:group name="BSW-MODE-RECEIVER-POLICY">
      <xsd:annotation>
         <xsd:documentation>Specifies the details for the reception of a mode switch for the referred mode group.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswModeReceiverPolicy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ENHANCED-MODE-API" type="AR:BOOLEAN">
            <xsd:annotation>
               <xsd:documentation>This controls the creation of the enhanced mode API that returns information about the previous mode and the next mode. If set to TRUE the enhanced mode API is supposed to be generated. For more details please refer to the SWS_RTE.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModeReceiverPolicy.enhancedModeApi";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="REQUIRED-MODE-GROUP-REF">
            <xsd:annotation>
               <xsd:documentation>The required mode group for which the policy is specified.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModeReceiverPolicy.requiredModeGroup";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:MODE-DECLARATION-GROUP-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SUPPORTS-ASYNCHRONOUS-MODE-SWITCH" type="AR:BOOLEAN">
            <xsd:annotation>
               <xsd:documentation>Specifies whether the module can handle the reception of an asynchronous mode switch (true) or not (false).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModeReceiverPolicy.supportsAsynchronousModeSwitch";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModeReceiverPolicy.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswModeReceiverPolicy -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-MODE-RECEIVER-POLICY">
      <xsd:annotation>
         <xsd:documentation>Specifies the details for the reception of a mode switch for the referred mode group.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswModeReceiverPolicy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:BSW-MODE-RECEIVER-POLICY"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
   
 <!-- element group for class BswBehavior::BswServiceDependency -->
   <xsd:group name="BSW-SERVICE-DEPENDENCY">
      <xsd:annotation>
         <xsd:documentation>Specialization of ServiceDependency in the context of an BswInternalBehavior. It allows to associate BswModuleEntries and data defined for a BSW module or cluster to a given ServiceNeeds element.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswServiceDependency"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="IDENT" type="AR:BSW-SERVICE-DEPENDENCY-IDENT">
            <xsd:annotation>
               <xsd:documentation>This adds the ability to become referrable to BswServiceDependency.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Status="shallBecomeMandatory";mmt.qualifiedName="BswServiceDependency.ident";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="-100"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ASSIGNED-DATAS">
            <xsd:annotation>
               <xsd:documentation>Defines the role of an associated data object (owned by this module or cluster) in the context of the ServiceNeeds element.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswServiceDependency.assignedData";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ROLE-BASED-DATA-ASSIGNMENT" type="AR:ROLE-BASED-DATA-ASSIGNMENT"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ASSIGNED-ENTRY-ROLES">
            <xsd:annotation>
               <xsd:documentation>Defines the role of an associated BswModuleEntry in the context of the ServiceNeeds element.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="assignedEntryRole, variationPoint.shortLabel";mmt.qualifiedName="BswServiceDependency.assignedEntryRole";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ROLE-BASED-BSW-MODULE-ENTRY-ASSIGNMENT" type="AR:ROLE-BASED-BSW-MODULE-ENTRY-ASSIGNMENT"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SERVICE-NEEDS">
            <xsd:annotation>
               <xsd:documentation>The associated ServiceNeeds.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswServiceDependency.serviceNeeds";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="1" minOccurs="0">
                  
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswServiceDependency.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>


 <!-- element group for class BswBehavior::BswSchedulerNamePrefix -->
   <xsd:group name="BSW-SCHEDULER-NAME-PREFIX">
      <xsd:annotation>
         <xsd:documentation>A prefix to be used in names of generated code artifacts which make up the interface of a BSW module to the BswScheduler.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswSchedulerNamePrefix"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswSchedulerNamePrefix.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswSchedulerNamePrefix -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-SCHEDULER-NAME-PREFIX">
      <xsd:annotation>
         <xsd:documentation>A prefix to be used in names of generated code artifacts which make up the interface of a BSW module to the BswScheduler.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswSchedulerNamePrefix"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:IMPLEMENTATION-PROPS"/>
         <xsd:group ref="AR:BSW-SCHEDULER-NAME-PREFIX"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
   <xsd:simpleType name="BSW-SCHEDULER-NAME-PREFIX--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BSW-SCHEDULER-NAME-PREFIX"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class BswBehavior::BswQueuedDataReceptionPolicy -->
   <xsd:group name="BSW-QUEUED-DATA-RECEPTION-POLICY">
      <xsd:annotation>
         <xsd:documentation>Reception policy attributes specific for queued receiving.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswQueuedDataReceptionPolicy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="QUEUE-LENGTH" type="AR:POSITIVE-INTEGER">
            <xsd:annotation>
               <xsd:documentation>Length of queue for received events.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswQueuedDataReceptionPolicy.queueLength";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswQueuedDataReceptionPolicy -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-QUEUED-DATA-RECEPTION-POLICY">
      <xsd:annotation>
         <xsd:documentation>Reception policy attributes specific for queued receiving.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswQueuedDataReceptionPolicy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:BSW-API-OPTIONS"/>
         <xsd:group ref="AR:BSW-DATA-RECEPTION-POLICY"/>
         <xsd:group ref="AR:BSW-QUEUED-DATA-RECEPTION-POLICY"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class BswBehavior::BswDistinguishedPartition -->
   <xsd:group name="BSW-DISTINGUISHED-PARTITION">
      <xsd:annotation>
         <xsd:documentation>Each instance of this meta-class represents an abstract partition in which context the code of the enclosing  BswModuleBehavior can be executed.

The intended use case is to distinguish between several partitions in order to implement different behavior per partition, for example to behave either as a master or satellite in a multicore ECU with shared BSW code.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswDistinguishedPartition"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswDistinguishedPartition.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswDistinguishedPartition -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-DISTINGUISHED-PARTITION">
      <xsd:annotation>
         <xsd:documentation>Each instance of this meta-class represents an abstract partition in which context the code of the enclosing  BswModuleBehavior can be executed.

The intended use case is to distinguish between several partitions in order to implement different behavior per partition, for example to behave either as a master or satellite in a multicore ECU with shared BSW code.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswDistinguishedPartition"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:BSW-DISTINGUISHED-PARTITION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
   <xsd:simpleType name="BSW-DISTINGUISHED-PARTITION--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BSW-DISTINGUISHED-PARTITION"/>
      </xsd:restriction>
   </xsd:simpleType>
 <!-- element group for class DataPrototypes::ParameterDataPrototype -->
   <xsd:group name="PARAMETER-DATA-PROTOTYPE">
      <xsd:annotation>
         <xsd:documentation>A parameter element used for parameter interface and internal behavior, supporting signal like parameter and characteristic value communication patterns and parameter and characteristic value definition.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ParameterDataPrototype"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="INIT-VALUE">
            <xsd:annotation>
               <xsd:documentation>Specifies initial value(s) of the ParameterDataPrototype</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ParameterDataPrototype.initValue";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="1" minOccurs="0">
                  <xsd:element name="APPLICATION-RULE-BASED-VALUE-SPECIFICATION" type="AR:APPLICATION-RULE-BASED-VALUE-SPECIFICATION"/>
                  <xsd:element name="APPLICATION-VALUE-SPECIFICATION" type="AR:APPLICATION-VALUE-SPECIFICATION"/>
                  <xsd:element name="ARRAY-VALUE-SPECIFICATION" type="AR:ARRAY-VALUE-SPECIFICATION"/>
                  <xsd:element name="CONSTANT-REFERENCE" type="AR:CONSTANT-REFERENCE"/>
                  <xsd:element name="NUMERICAL-RULE-BASED-VALUE-SPECIFICATION" type="AR:NUMERICAL-RULE-BASED-VALUE-SPECIFICATION"/>
                  <xsd:element name="NUMERICAL-VALUE-SPECIFICATION" type="AR:NUMERICAL-VALUE-SPECIFICATION"/>
                  <xsd:element name="RECORD-VALUE-SPECIFICATION" type="AR:RECORD-VALUE-SPECIFICATION"/>
                  <xsd:element name="REFERENCE-VALUE-SPECIFICATION" type="AR:REFERENCE-VALUE-SPECIFICATION"/>
                  <xsd:element name="TEXT-VALUE-SPECIFICATION" type="AR:TEXT-VALUE-SPECIFICATION"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ParameterDataPrototype.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class DataPrototypes::ParameterDataPrototype -->
   <xsd:complexType abstract="false" mixed="false" name="PARAMETER-DATA-PROTOTYPE">
      <xsd:annotation>
         <xsd:documentation>A parameter element used for parameter interface and internal behavior, supporting signal like parameter and characteristic value communication patterns and parameter and characteristic value definition.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ParameterDataPrototype"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ATP-FEATURE"/>
         <xsd:group ref="AR:ATP-PROTOTYPE"/>
         <xsd:group ref="AR:DATA-PROTOTYPE"/>
         <xsd:group ref="AR:AUTOSAR-DATA-PROTOTYPE"/>
         <xsd:group ref="AR:PARAMETER-DATA-PROTOTYPE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
   <xsd:simpleType name="PARAMETER-DATA-PROTOTYPE--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="PARAMETER-DATA-PROTOTYPE"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="CONSTANT-SPECIFICATION-MAPPING-SET--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CONSTANT-SPECIFICATION-MAPPING-SET"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="DATA-TYPE-MAPPING-SET--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DATA-TYPE-MAPPING-SET"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class InternalBehavior::ExclusiveArea -->
   <xsd:group name="EXCLUSIVE-AREA">
      <xsd:annotation>
         <xsd:documentation>Prevents an executable entity running in the area from being preempted.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ExclusiveArea"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ExclusiveArea.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class InternalBehavior::ExclusiveArea -->
   <xsd:complexType abstract="false" mixed="false" name="EXCLUSIVE-AREA">
      <xsd:annotation>
         <xsd:documentation>Prevents an executable entity running in the area from being preempted.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ExclusiveArea"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:EXCLUSIVE-AREA"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
   <xsd:simpleType name="EXCLUSIVE-AREA--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="EXCLUSIVE-AREA"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class InternalBehavior::ExclusiveAreaNestingOrder -->
   <xsd:group name="EXCLUSIVE-AREA-NESTING-ORDER">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to define a nesting order of ExclusiveAreas. A nesting order (that may occur in the executable code) is formally defined to be able to analyze the resource locking behavior.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ExclusiveAreaNestingOrder"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="EXCLUSIVE-AREA-REFS">
            <xsd:annotation>
               <xsd:documentation>This represents a specific scenario of how ExclusiveAreas can be used in terms of the nesting order.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ExclusiveAreaNestingOrder.exclusiveArea";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="EXCLUSIVE-AREA-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:EXCLUSIVE-AREA--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ExclusiveAreaNestingOrder.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class InternalBehavior::ExclusiveAreaNestingOrder -->
   <xsd:complexType abstract="false" mixed="false" name="EXCLUSIVE-AREA-NESTING-ORDER">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to define a nesting order of ExclusiveAreas. A nesting order (that may occur in the executable code) is formally defined to be able to analyze the resource locking behavior.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ExclusiveAreaNestingOrder"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:EXCLUSIVE-AREA-NESTING-ORDER"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
   <xsd:simpleType name="EXCLUSIVE-AREA-NESTING-ORDER--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="EXCLUSIVE-AREA-NESTING-ORDER"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:complexType name="MAX-COMM-MODE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Maximum bus communication mode required by a user of the Communication Manager Service.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MaxCommModeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:MAX-COMM-MODE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="MAX-COMM-MODE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="FULL">
            <xsd:annotation>
               <xsd:documentation>Full communication is requested.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MaxCommModeEnum.full"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NONE">
            <xsd:annotation>
               <xsd:documentation>No communication is requested.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MaxCommModeEnum.none"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SILENT">
            <xsd:annotation>
               <xsd:documentation>Silent communication is requested: Only listening but not "talking".</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MaxCommModeEnum.silent"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>

  <!-- element group for class Implementation::ImplementationProps -->
   <xsd:group name="IMPLEMENTATION-PROPS">
      <xsd:annotation>
         <xsd:documentation>Defines a symbol to be used as (depending on the concrete case) either a complete replacement or a prefix when generating code artifacts.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ImplementationProps"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="SYMBOL" type="AR:C-IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>The symbol to be used as (depending on the concrete case) either a complete replacement or a prefix.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ImplementationProps.symbol";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
 <!-- element group for class BswBehavior::BswDataReceptionPolicy -->
   <xsd:group name="BSW-DATA-RECEPTION-POLICY">
      <xsd:annotation>
         <xsd:documentation>Specifies the reception policy for the referred data in sender-receiver communication over the BSW Scheduler. To be used for inter-partition and/or inter-core communication.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswDataReceptionPolicy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="RECEIVED-DATA-REF">
            <xsd:annotation>
               <xsd:documentation>The data received over the BSW Scheduler using this policy.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswDataReceptionPolicy.receivedData";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:VARIABLE-DATA-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswDataReceptionPolicy.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>

   <!-- complex type for class BswBehavior::BswServiceDependency -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-SERVICE-DEPENDENCY">
      <xsd:annotation>
         <xsd:documentation>Specialization of ServiceDependency in the context of an BswInternalBehavior. It allows to associate BswModuleEntries and data defined for a BSW module or cluster to a given ServiceNeeds element.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswServiceDependency"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SERVICE-DEPENDENCY"/>
         <xsd:group ref="AR:BSW-SERVICE-DEPENDENCY"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:complexType name="CSE-CODE-TYPE-STRING">
      <xsd:annotation>
         <xsd:documentation>This primitive represents an ASAM CSE (Codes for Scaling Units) based on the definition in the ASAM-MCD-2MC-ASAP2  specification.

The particular semantics is specified in [TPS_GST_00354].</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CseCodeType";xml.xsd.customType="CSE-CODE-TYPE-STRING";xml.xsd.type="unsignedInt"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:CSE-CODE-TYPE-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="CSE-CODE-TYPE-STRING--SIMPLE">
      <xsd:restriction base="xsd:unsignedInt"/>
   </xsd:simpleType>
 <xsd:complexType name="INTEGER">
      <xsd:annotation>
         <xsd:documentation>An instance of Integer is an element in the set of integer numbers ( ..., -2, -1, 0, 1, 2, ...).  

The value can be expressed in decimal, octal, hexadecimal and binary representation. Negative numbers can only be expressed in decimal notation

Range is from -2147483648 and 2147483647.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Integer";xml.xsd.customType="INTEGER";xml.xsd.pattern="[+\-]?[1-9][0-9]*|0x[0-9a-f]+|0[0-7]*|0b[0-1]+";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:INTEGER--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
<!-- element group for class ServiceNeeds::ServiceDependency -->
   <xsd:group name="SERVICE-DEPENDENCY">
      <xsd:annotation>
         <xsd:documentation>Collects all dependencies of a software module or component on an  AUTOSAR Service related to a specific item (e.g. an NVRAM Block, a diagnostic event etc.). It defines the quality of service (ServiceNeeds) of this item as well as (optionally) references to additional elements.

This information is required for tools in order to generate the related basic software configuration and ServiceSwComponentTypes.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ServiceDependency"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ASSIGNED-DATA-TYPES">
            <xsd:annotation>
               <xsd:documentation>This is the role of the assignment data type in the given context.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ServiceDependency.assignedDataType";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ROLE-BASED-DATA-TYPE-ASSIGNMENT" type="AR:ROLE-BASED-DATA-TYPE-ASSIGNMENT"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SYMBOLIC-NAME-PROPS" type="AR:SYMBOLIC-NAME-PROPS">
            <xsd:annotation>
               <xsd:documentation>This attribute can be taken to contribute to the creation of symbolic name values.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ServiceDependency.symbolicNameProps";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- element group for class ServiceNeeds::ServiceNeeds -->
   <xsd:group name="SERVICE-NEEDS">
      <xsd:annotation>
         <xsd:documentation>This expresses the abstract needs that a Software Component or Basic Software Module has on the configuration of an AUTOSAR Service to which it will be connected. "Abstract needs" means that the model abstracts from the Configuration Parameters of the underlying Basic Software.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ServiceNeeds"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <xsd:simpleType name="SERVICE-NEEDS--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         
      </xsd:restriction>
   </xsd:simpleType>
 <!-- element group for class BswBehavior::BswModeSenderPolicy -->
   <xsd:group name="BSW-MODE-SENDER-POLICY">
      <xsd:annotation>
         <xsd:documentation>Specifies the details for the sending of a mode switch for the referred mode group.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswModeSenderPolicy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ACK-REQUEST" type="AR:BSW-MODE-SWITCH-ACK-REQUEST">
            <xsd:annotation>
               <xsd:documentation>Request for acknowledgement</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModeSenderPolicy.ackRequest";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ENHANCED-MODE-API" type="AR:BOOLEAN">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModeSenderPolicy.enhancedModeApi";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="PROVIDED-MODE-GROUP-REF">
            <xsd:annotation>
               <xsd:documentation>The provided mode group for which the policy is specified.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModeSenderPolicy.providedModeGroup";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:MODE-DECLARATION-GROUP-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="QUEUE-LENGTH" type="AR:POSITIVE-INTEGER">
            <xsd:annotation>
               <xsd:documentation>Length of call queue on the sender side. The queue is implemented by the RTE resp.BswScheduler. The value must be greater or equal to 0. Setting the value of queueLength to 0 implies non-queued communication.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModeSenderPolicy.queueLength";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModeSenderPolicy.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswModeSenderPolicy -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-MODE-SENDER-POLICY">
      <xsd:annotation>
         <xsd:documentation>Specifies the details for the sending of a mode switch for the referred mode group.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswModeSenderPolicy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:BSW-MODE-SENDER-POLICY"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class Constants::RuleBasedAxisCont -->
   <xsd:group name="RULE-BASED-AXIS-CONT">
      <xsd:annotation>
         <xsd:documentation>This represents the values for the axis of a compound primitive (curve, map).

For standard and fix axes,  SwAxisCont contains the values of the axis directly. 

The axis values of SwAxisCont with the category CURVE_AXIS, COM_AXIS, RES_AXIS are for display only. For editing and processing, only the values in the related GroupAxis are binding.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RuleBasedAxisCont"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="CATEGORY" type="AR:CALPRM-AXIS-CATEGORY-ENUM">
            <xsd:annotation>
               <xsd:documentation>This category specifies the particular axis types: 

* FIX_AXIS 
* STD_AXIS 
* COM_AXIS 
* CURVE_AXIS  (swArraysize necessary) 
* RES_AXIS  (swArraysize necessary)</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RuleBasedAxisCont.category";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="UNIT-REF">
            <xsd:annotation>
               <xsd:documentation>This represents the physical unit of the provided values.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RuleBasedAxisCont.unit";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:UNIT--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-ARRAYSIZE" type="AR:VALUE-LIST">
            <xsd:annotation>
               <xsd:documentation>For multidimensional compound primitivies (curve, map ...) it is necessary to know the dimensions.They are specified using swArraySize.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RuleBasedAxisCont.swArraysize";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="40"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-AXIS-INDEX" type="AR:AXIS-INDEX-TYPE">
            <xsd:annotation>
               <xsd:documentation>This property allows to explicitly assign the axis contents to a particular axis. It is specified by numbers where 1 corresponds to the x-axis.
It is also possible to derive the axis association from the sequence of the parent.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RuleBasedAxisCont.swAxisIndex";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="50"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="RULE-BASED-VALUES" type="AR:RULE-BASED-VALUE-SPECIFICATION">
            <xsd:annotation>
               <xsd:documentation>This represents the rule based value specification for the axis of a compound primitive (curve, map).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RuleBasedAxisCont.ruleBasedValues";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.roleElement="true";xml.roleWrapperElement="false";xml.sequenceOffset="80";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Constants::RuleBasedAxisCont -->
   <xsd:complexType abstract="false" mixed="false" name="RULE-BASED-AXIS-CONT">
      <xsd:annotation>
         <xsd:documentation>This represents the values for the axis of a compound primitive (curve, map).

For standard and fix axes,  SwAxisCont contains the values of the axis directly. 

The axis values of SwAxisCont with the category CURVE_AXIS, COM_AXIS, RES_AXIS are for display only. For editing and processing, only the values in the related GroupAxis are binding.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RuleBasedAxisCont"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:RULE-BASED-AXIS-CONT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class Constants::RuleBasedValueCont -->
   <xsd:group name="RULE-BASED-VALUE-CONT">
      <xsd:annotation>
         <xsd:documentation>This represents the values of a compound primitive (CURVE, MAP, CUBOID, CUBE_4, CUBE_5, VAL_BLK) or an array.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RuleBasedValueCont"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="UNIT-REF">
            <xsd:annotation>
               <xsd:documentation>This represents the physical unit of the provided values.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RuleBasedValueCont.unit";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:UNIT--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-ARRAYSIZE" type="AR:VALUE-LIST">
            <xsd:annotation>
               <xsd:documentation>This attribute defines the size of each dimension for compound primitivies
CURVE, MAP, CUBOID, CUBE_4, CUBE_5, COM_AXIS, RES_AXIS, CURVE_AXIS, VAL_BLK, STRING.

For each dimension one value has to be defined, e.g. one in case of COM_AXIS and two or more in case of MAP.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RuleBasedValueCont.swArraysize";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="40"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="RULE-BASED-VALUES" type="AR:RULE-BASED-VALUE-SPECIFICATION">
            <xsd:annotation>
               <xsd:documentation>This represents the rule based value specification for the array or compound primitive (CURVE, MAP, CUBOID, CUBE_4, CUBE_5, VAL_BLK).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RuleBasedValueCont.ruleBasedValues";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.roleElement="true";xml.roleWrapperElement="false";xml.sequenceOffset="80";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Constants::RuleBasedValueCont -->
   <xsd:complexType abstract="false" mixed="false" name="RULE-BASED-VALUE-CONT">
      <xsd:annotation>
         <xsd:documentation>This represents the values of a compound primitive (CURVE, MAP, CUBOID, CUBE_4, CUBE_5, VAL_BLK) or an array.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RuleBasedValueCont"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:RULE-BASED-VALUE-CONT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class CalibrationValue::SwAxisCont -->
   <xsd:group name="SW-AXIS-CONT">
      <xsd:annotation>
         <xsd:documentation>This represents the values for the axis of a compound primitive (curve, map).

For standard and fix axes,  SwAxisCont contains the values of the axis directly. 

The axis values of SwAxisCont with the category CURVE_AXIS, COM_AXIS, RES_AXIS are for display only. For editing and processing, only the values in the related GroupAxis are binding.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisCont"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="CATEGORY" type="AR:CALPRM-AXIS-CATEGORY-ENUM">
            <xsd:annotation>
               <xsd:documentation>This category specifies the particular axis types: 

* FIX_AXIS 
* STD_AXIS 
* COM_AXIS 
* CURVE_AXIS  (swArraysize necessary) 
* RES_AXIS  (swArraysize necessary)</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisCont.category";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="UNIT-REF">
            <xsd:annotation>
               <xsd:documentation>This represents the physical unit of the provided values.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisCont.unit";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:UNIT--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="UNIT-DISPLAY-NAME" type="AR:SINGLE-LANGUAGE-UNIT-NAMES">
            <xsd:annotation>
               <xsd:documentation>This represents the display name which is used for the physical unit of the axis.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisCont.unitDisplayName";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="40"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-AXIS-INDEX" type="AR:AXIS-INDEX-TYPE">
            <xsd:annotation>
               <xsd:documentation>This property allows to explicitly assign the axis contents to a particular axis. It is specified by numbers where 1 corresponds to the x-axis.
It is also possible to derive the axis association from the sequence of the parent.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisCont.swAxisIndex";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="50"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-ARRAYSIZE" type="AR:VALUE-LIST">
            <xsd:annotation>
               <xsd:documentation>For multidimensional compound primitivies (curve, map ...) it is necessary to know the dimensions.They are specified using swArraySize.

* RES_AXIS
* CURVE_AXIS</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisCont.swArraysize";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="70"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-VALUES-PHYS" type="AR:SW-VALUES">
            <xsd:annotation>
               <xsd:documentation>swValuesPhys represents the values in the physical domain.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisCont.swValuesPhys";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="80"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class CalibrationValue::SwAxisCont -->
   <xsd:complexType abstract="false" mixed="false" name="SW-AXIS-CONT">
      <xsd:annotation>
         <xsd:documentation>This represents the values for the axis of a compound primitive (curve, map).

For standard and fix axes,  SwAxisCont contains the values of the axis directly. 

The axis values of SwAxisCont with the category CURVE_AXIS, COM_AXIS, RES_AXIS are for display only. For editing and processing, only the values in the related GroupAxis are binding.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisCont"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SW-AXIS-CONT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class CalibrationValue::SwValueCont -->
   <xsd:group name="SW-VALUE-CONT">
      <xsd:annotation>
         <xsd:documentation>This metaclass represents the content of one particular SwInstance.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwValueCont"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="UNIT-REF">
            <xsd:annotation>
               <xsd:documentation>This represents the physical unit of the provided values.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwValueCont.unit";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:UNIT--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="UNIT-DISPLAY-NAME" type="AR:SINGLE-LANGUAGE-UNIT-NAMES">
            <xsd:annotation>
               <xsd:documentation>This specifies how the physical units of the current value set shall be displayed in documents or in user interfaces of tools.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwValueCont.unitDisplayName";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-ARRAYSIZE" type="AR:VALUE-LIST">
            <xsd:annotation>
               <xsd:documentation>This attribute defines the size of each dimension for compound primitivies
CURVE, MAP, CUBOID, CUB_4, CUBE_5, COM_AXIS, RES_AXIS, CURVE_AXIS, VAL_BLK, STRING.

For each dimension one value has to be defined, e.g. one in case of COM_AXIS and two or more in case of MAP.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwValueCont.swArraysize";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="40"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-VALUES-PHYS" type="AR:SW-VALUES">
            <xsd:annotation>
               <xsd:documentation>swValuesPhys represents the values in the physical domain.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwValueCont.swValuesPhys";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="50"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class CalibrationValue::SwValueCont -->
   <xsd:complexType abstract="false" mixed="false" name="SW-VALUE-CONT">
      <xsd:annotation>
         <xsd:documentation>This metaclass represents the content of one particular SwInstance.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwValueCont"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SW-VALUE-CONT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:simpleType name="CONSTANT-SPECIFICATION--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CONSTANT-SPECIFICATION"/>
      </xsd:restriction>
   </xsd:simpleType>
 <!-- element group for class Constants::RuleBasedValueSpecification -->
   <xsd:group name="RULE-BASED-VALUE-SPECIFICATION">
      <xsd:annotation>
         <xsd:documentation>This meta-class is used to support a rule-based initialization approach for data types with an array-nature (ApplicationArrayDataType and ImplementationDataType of category ARRAY) or a compound ApplicationPrimitiveDataType (which also boils down to an array-nature).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RuleBasedValueSpecification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="RULE" type="AR:IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>This denotes the name of the rule of the RuleBasedValueSpecification. The rule determines the calculation specification according which the arguments are used to calculated the values.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RuleBasedValueSpecification.rule";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ARGUMENTSS">
            <xsd:annotation>
               <xsd:documentation>This represents the arguments for the RuleBasedValueSpecification.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RuleBasedValueSpecification.arguments";pureMM.maxOccurs="-1";pureMM.minOccurs="1";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="RULE-ARGUMENTS" type="AR:RULE-ARGUMENTS"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MAX-SIZE-TO-FILL" type="AR:INTEGER">
            <xsd:annotation>
               <xsd:documentation>If a rule is chosen which does not fill until the end, this determines until which size the rule shall fill the values.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RuleBasedValueSpecification.maxSizeToFill";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="40"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Constants::RuleBasedValueSpecification -->
   <xsd:complexType abstract="false" mixed="false" name="RULE-BASED-VALUE-SPECIFICATION">
      <xsd:annotation>
         <xsd:documentation>This meta-class is used to support a rule-based initialization approach for data types with an array-nature (ApplicationArrayDataType and ImplementationDataType of category ARRAY) or a compound ApplicationPrimitiveDataType (which also boils down to an array-nature).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RuleBasedValueSpecification"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:RULE-BASED-VALUE-SPECIFICATION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class DataDefProperties::SwDataDefPropsConditional -->
   <xsd:group name="SW-DATA-DEF-PROPS-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefPropsConditional"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefPropsConditional.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class DataDefProperties::SwDataDefPropsConditional -->
   <xsd:complexType abstract="false" mixed="false" name="SW-DATA-DEF-PROPS-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefPropsConditional"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SW-DATA-DEF-PROPS-CONTENT"/>
         <xsd:group ref="AR:SW-DATA-DEF-PROPS-CONDITIONAL"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class InternalBehavior::ExecutableEntityActivationReason -->
   <xsd:group name="EXECUTABLE-ENTITY-ACTIVATION-REASON">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to define the reason for the activation of the enclosing ExecutableEntity.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ExecutableEntityActivationReason"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="BIT-POSITION" type="AR:POSITIVE-INTEGER">
            <xsd:annotation>
               <xsd:documentation>This attribute allows for defining the position of the enclosing ExecutableEntityActivationReason in the activation vector.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ExecutableEntityActivationReason.bitPosition";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class InternalBehavior::ExecutableEntityActivationReason -->
   <xsd:complexType abstract="false" mixed="false" name="EXECUTABLE-ENTITY-ACTIVATION-REASON">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to define the reason for the activation of the enclosing ExecutableEntity.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ExecutableEntityActivationReason"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:IMPLEMENTATION-PROPS"/>
         <xsd:group ref="AR:EXECUTABLE-ENTITY-ACTIVATION-REASON"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
   <xsd:simpleType name="EXECUTABLE-ENTITY-ACTIVATION-REASON--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="EXECUTABLE-ENTITY-ACTIVATION-REASON"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:complexType name="TIME-VALUE">
      <xsd:annotation>
         <xsd:documentation>This primitive type is taken for expressing time values. The numerical value is supposed to be interpreted in the physical unit second.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TimeValue";xml.xsd.customType="TIME-VALUE";xml.xsd.type="double"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:TIME-VALUE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="TIME-VALUE--SIMPLE">
      <xsd:restriction base="xsd:double"/>
   </xsd:simpleType>
<xsd:complexType name="REENTRANCY-LEVEL-ENUM">
      <xsd:annotation>
         <xsd:documentation>Specifies if and in which kinds of environments an entity is reentrant.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ReentrancyLevelEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:REENTRANCY-LEVEL-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="REENTRANCY-LEVEL-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="MULTICORE-REENTRANT">
            <xsd:annotation>
               <xsd:documentation>Unlimited concurrent execution of this entity is possible, including preemption and parallel execution on multi core systems.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ReentrancyLevelEnum.multicoreReentrant"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NON-REENTRANT">
            <xsd:annotation>
               <xsd:documentation>Concurrent execution of this entity is not possible.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ReentrancyLevelEnum.nonReentrant"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SINGLE-CORE-REENTRANT">
            <xsd:annotation>
               <xsd:documentation>Pseudo-concurrent execution (i.e. preemption) of this entity is possible on single core systems.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ReentrancyLevelEnum.singleCoreReentrant"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="SW-ADDR-METHOD--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="SW-ADDR-METHOD"/>
      </xsd:restriction>
   </xsd:simpleType>
 <!-- element group for class ModeDeclaration::ModeDeclarationGroupPrototypeRefConditional -->
   <xsd:group name="MODE-DECLARATION-GROUP-PROTOTYPE-REF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ModeDeclarationGroupPrototype"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="MODE-DECLARATION-GROUP-PROTOTYPE-REF">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ModeDeclarationGroupPrototype";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:MODE-DECLARATION-GROUP-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ModeDeclarationGroupPrototypeRefConditional.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ModeDeclaration::ModeDeclarationGroupPrototypeRefConditional -->
   <xsd:complexType abstract="false" mixed="false" name="MODE-DECLARATION-GROUP-PROTOTYPE-REF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ModeDeclarationGroupPrototype"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:MODE-DECLARATION-GROUP-PROTOTYPE-REF-CONDITIONAL"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class DataDefProperties::SwDataDefPropsContent -->
   <xsd:group name="SW-DATA-DEF-PROPS-CONTENT">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefPropsContent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="STEP-SIZE" type="AR:FLOAT">
            <xsd:annotation>
               <xsd:documentation>This attribute can be used to define a value which is added to or subtracted from the value of a DataPrototype when using up/down keys while calibrating.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.stepSize";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ANNOTATIONS">
            <xsd:annotation>
               <xsd:documentation>This aggregation allows to add annotations (yellow pads ...) related to the current data object.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.annotation";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.roleElement="true";xml.roleWrapperElement="true";xml.sequenceOffset="20";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ANNOTATION" type="AR:ANNOTATION"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-ADDR-METHOD-REF">
            <xsd:annotation>
               <xsd:documentation>Addressing method related to this data object. Via an association to the same SwAddrMethod it can be specified that several DataPrototypes shall be located in the same memory without already specifying the memory section itself.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.swAddrMethod";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:SW-ADDR-METHOD--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-ALIGNMENT" type="AR:ALIGNMENT-TYPE">
            <xsd:annotation>
               <xsd:documentation>The attribute describes the intended alignment of the DataPrototype. If the attribute is not defined the alignment is determined by the swBaseType size and the memoryAllocationKeywordPolicy of the referenced SwAddrMethod.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.swAlignment";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="33"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="BASE-TYPE-REF">
            <xsd:annotation>
               <xsd:documentation>Base type associated with the containing data object.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.baseType";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="50"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:SW-BASE-TYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-BIT-REPRESENTATION" type="AR:SW-BIT-REPRESENTATION">
            <xsd:annotation>
               <xsd:documentation>Description of the binary representation in case of a bit variable.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.swBitRepresentation";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="60"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-CALIBRATION-ACCESS" type="AR:SW-CALIBRATION-ACCESS-ENUM">
            <xsd:annotation>
               <xsd:documentation>Specifies the read or write access by MCD tools for this data object.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.swCalibrationAccess";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="70"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-VALUE-BLOCK-SIZE" type="AR:NUMERICAL-VALUE-VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This represents the size of a Value Block</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.swValueBlockSize";pureMM.maxOccurs="1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="80"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-CALPRM-AXIS-SET" type="AR:SW-CALPRM-AXIS-SET">
            <xsd:annotation>
               <xsd:documentation>This specifies the properties of the axes in case of a curve or map etc. This is mainly applicable to calibration parameters.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.swCalprmAxisSet";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="90"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-TEXT-PROPS" type="AR:SW-TEXT-PROPS">
            <xsd:annotation>
               <xsd:documentation>the specific properties if the data object is a text object.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.swTextProps";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="120"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-COMPARISON-VARIABLES">
            <xsd:annotation>
               <xsd:documentation>Variables used for comparison in an MCD process.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.swComparisonVariable";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.sequenceOffset="170";xml.typeElement="false"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:group ref="AR:SW-VARIABLE-REF-PROXY"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="COMPU-METHOD-REF">
            <xsd:annotation>
               <xsd:documentation>Computation method associated with the semantics of this data object.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.compuMethod";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="180"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:COMPU-METHOD--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="DATA-CONSTR-REF">
            <xsd:annotation>
               <xsd:documentation>Data constraint for this data object.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.dataConstr";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="190"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:DATA-CONSTR--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-DATA-DEPENDENCY" type="AR:SW-DATA-DEPENDENCY">
            <xsd:annotation>
               <xsd:documentation>Describes how the value of the data object has to be calculated from the value of another data object (by the MCD system).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.swDataDependency";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="200"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="DISPLAY-FORMAT" type="AR:DISPLAY-FORMAT-STRING">
            <xsd:annotation>
               <xsd:documentation>This property describes how a number is to be rendered e.g. in documents or in a measurement and calibration system.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.displayFormat";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="210"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="IMPLEMENTATION-DATA-TYPE-REF">
            <xsd:annotation>
               <xsd:documentation>This association denotes the ImplementationDataType of a data declaration via its aggregated SwDataDefProps. It is used whenever a data declaration is not directly referring to a base type. Especially

* redefinition of an ImplementationDataType via a "typedef" to another ImplementationDatatype
* the target type of a pointer (see SwPointerTargetProps), if it does not refer to a base type directly
* the data type of an array or record element within an ImplementationDataType, if it does not refer to a base type directly
* the data type of an SwServiceArg, if it does not refer to a base type directly</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.implementationDataType";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="215"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:IMPLEMENTATION-DATA-TYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-HOST-VARIABLE" type="AR:SW-VARIABLE-REF-PROXY">
            <xsd:annotation>
               <xsd:documentation>Contains a reference to a variable which serves as a host-variable for a bit variable. Only applicable to bit objects.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.swHostVariable";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="220";xml.typeElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-IMPL-POLICY" type="AR:SW-IMPL-POLICY-ENUM">
            <xsd:annotation>
               <xsd:documentation>Implementation policy for this data object.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.swImplPolicy";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="230"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ADDITIONAL-NATIVE-TYPE-QUALIFIER" type="AR:NATIVE-DECLARATION-STRING">
            <xsd:annotation>
               <xsd:documentation>This attribute is used to declare native qualifiers of the programming language which can neither be deduced from the baseType (e.g. because the data object describes a pointer) nor from other more abstract attributes. Examples are qualifiers like "volatile", "strict" or "enum" of the C-language. All such declarations have to be put into one string.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.additionalNativeTypeQualifier";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="235"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-INTENDED-RESOLUTION" type="AR:NUMERICAL-VALUE">
            <xsd:annotation>
               <xsd:documentation>The purpose of this element is to describe the requested quantization of data objects early on in the design process. 

The resolution ultimately occurs via the conversion formula present (compuMethod), which specifies the transition from the physical world to the standardized world (and vice-versa) (here, "the slope per bit" is present implicitly in the conversion formula). 

In the case of a development phase without a fixed conversion formula, a pre-specification can occur through swIntendedResolution.

The resolution is specified in the physical domain according to the property "unit".</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.swIntendedResolution";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="240"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-INTERPOLATION-METHOD" type="AR:IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>This is a keyword identifying the mathematical method to be applied for interpolation. The keyword needs to be related to the interpolation routine which needs to be invoked.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.swInterpolationMethod";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="250"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="INVALID-VALUE">
            <xsd:annotation>
               <xsd:documentation>Optional value to express invalidity of the actual data element.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.invalidValue";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="255"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="1" minOccurs="0">
                  <xsd:element name="APPLICATION-RULE-BASED-VALUE-SPECIFICATION" type="AR:APPLICATION-RULE-BASED-VALUE-SPECIFICATION"/>
                  <xsd:element name="APPLICATION-VALUE-SPECIFICATION" type="AR:APPLICATION-VALUE-SPECIFICATION"/>
                  <xsd:element name="ARRAY-VALUE-SPECIFICATION" type="AR:ARRAY-VALUE-SPECIFICATION"/>
                  <xsd:element name="CONSTANT-REFERENCE" type="AR:CONSTANT-REFERENCE"/>
                  <xsd:element name="NUMERICAL-RULE-BASED-VALUE-SPECIFICATION" type="AR:NUMERICAL-RULE-BASED-VALUE-SPECIFICATION"/>
                  <xsd:element name="NUMERICAL-VALUE-SPECIFICATION" type="AR:NUMERICAL-VALUE-SPECIFICATION"/>
                  <xsd:element name="RECORD-VALUE-SPECIFICATION" type="AR:RECORD-VALUE-SPECIFICATION"/>
                  <xsd:element name="REFERENCE-VALUE-SPECIFICATION" type="AR:REFERENCE-VALUE-SPECIFICATION"/>
                  <xsd:element name="TEXT-VALUE-SPECIFICATION" type="AR:TEXT-VALUE-SPECIFICATION"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MC-FUNCTION" type="AR:IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>Specifies the name of a "Function" (in the sense of the MC system) to which this data object belongs. This corresponds to the Function in ASAM MCD 2MC /ASAP2 which defines the characteristic resp. which provides the measurement as output.

The function name is only used for support of MC systems. It can be predefined on the level of software component design. If it  is not  predefined, it could be filled out with a reasonable name, e.g. the component  prototype name, from the ECU extract. 

Note: This attribute is deprecated because an explicit model of MC functions can be set up by using the meta-class McFunction.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="SwDataDefProps.mcFunction";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="257"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-IS-VIRTUAL" type="AR:BOOLEAN">
            <xsd:annotation>
               <xsd:documentation>This element distinguishes virtual objects. Virtual objects do not appear in the memory, their derivation is much more dependent on other objects and hence they shall have a swDataDependency .</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.swIsVirtual";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="260"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-POINTER-TARGET-PROPS" type="AR:SW-POINTER-TARGET-PROPS">
            <xsd:annotation>
               <xsd:documentation>Specifies that the containing data object is a pointer to another data object.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.swPointerTargetProps";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="280"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-RECORD-LAYOUT-REF">
            <xsd:annotation>
               <xsd:documentation>Record layout for this data object.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.swRecordLayout";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="290"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:SW-RECORD-LAYOUT--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-REFRESH-TIMING" type="AR:MULTIDIMENSIONAL-TIME">
            <xsd:annotation>
               <xsd:documentation>This element specifies the frequency in which the object involved shall be or is called or calculated.  This timing can be collected from the task in which write access processes to the variable run. But this cannot be done by the MCD system. 

So this attribute can be used in an early phase to express the desired refresh timing and later on to specify the real refresh timing.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.swRefreshTiming";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="300"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="UNIT-REF">
            <xsd:annotation>
               <xsd:documentation>Physical unit associated with the semantics of this data object. This attribute applies if no compuMethod is specified. If both units (this as well as via compuMethod) are specified the units shall be compatible.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.unit";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="350"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:UNIT--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VALUE-AXIS-DATA-TYPE-REF">
            <xsd:annotation>
               <xsd:documentation>The referenced ApplicationPrimitiveDataType represents the primitive data type of the value axis within a compound primitive (e.g. curve, map). It supersedes CompuMethod, Unit, and BaseType.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDefProps.valueAxisDataType";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="355"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:APPLICATION-PRIMITIVE-DATA-TYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
 <!-- element group for class BswBehavior::BswInternalTriggeringPointRefConditional -->
   <xsd:group name="BSW-INTERNAL-TRIGGERING-POINT-REF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswInternalTriggeringPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="BSW-INTERNAL-TRIGGERING-POINT-REF">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswInternalTriggeringPoint";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:BSW-INTERNAL-TRIGGERING-POINT--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswInternalTriggeringPointRefConditional.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswInternalTriggeringPointRefConditional -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-INTERNAL-TRIGGERING-POINT-REF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswInternalTriggeringPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:BSW-INTERNAL-TRIGGERING-POINT-REF-CONDITIONAL"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class BswBehavior::BswAsynchronousServerCallPoint -->
   <xsd:group name="BSW-ASYNCHRONOUS-SERVER-CALL-POINT">
      <xsd:annotation>
         <xsd:documentation>Represents an asynchronous procedure call point via the BSW Scheduler.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswAsynchronousServerCallPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="CALLED-ENTRY-REF">
            <xsd:annotation>
               <xsd:documentation>The entry to be called.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswAsynchronousServerCallPoint.calledEntry";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:BSW-MODULE-CLIENT-SERVER-ENTRY--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswAsynchronousServerCallPoint -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-ASYNCHRONOUS-SERVER-CALL-POINT">
      <xsd:annotation>
         <xsd:documentation>Represents an asynchronous procedure call point via the BSW Scheduler.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswAsynchronousServerCallPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:BSW-MODULE-CALL-POINT"/>
         <xsd:group ref="AR:BSW-ASYNCHRONOUS-SERVER-CALL-POINT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
   <xsd:simpleType name="BSW-ASYNCHRONOUS-SERVER-CALL-POINT--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BSW-ASYNCHRONOUS-SERVER-CALL-POINT"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class BswBehavior::BswAsynchronousServerCallResultPoint -->
   <xsd:group name="BSW-ASYNCHRONOUS-SERVER-CALL-RESULT-POINT">
      <xsd:annotation>
         <xsd:documentation>The callback point for an BswAsynchronousServerCallPoint i.e. the point at which the result can be retrieved from the BSW Scheduler.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswAsynchronousServerCallResultPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ASYNCHRONOUS-SERVER-CALL-POINT-REF">
            <xsd:annotation>
               <xsd:documentation>The call point invoking the call to which the result belongs.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswAsynchronousServerCallResultPoint.asynchronousServerCallPoint";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:BSW-ASYNCHRONOUS-SERVER-CALL-POINT--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswAsynchronousServerCallResultPoint -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-ASYNCHRONOUS-SERVER-CALL-RESULT-POINT">
      <xsd:annotation>
         <xsd:documentation>The callback point for an BswAsynchronousServerCallPoint i.e. the point at which the result can be retrieved from the BSW Scheduler.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswAsynchronousServerCallResultPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:BSW-MODULE-CALL-POINT"/>
         <xsd:group ref="AR:BSW-ASYNCHRONOUS-SERVER-CALL-RESULT-POINT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
   <xsd:simpleType name="BSW-ASYNCHRONOUS-SERVER-CALL-RESULT-POINT--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BSW-ASYNCHRONOUS-SERVER-CALL-RESULT-POINT"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class BswBehavior::BswDirectCallPoint -->
   <xsd:group name="BSW-DIRECT-CALL-POINT">
      <xsd:annotation>
         <xsd:documentation>Represents a concrete point in the code from where a BswModuleEntry is called directly, i.e. not via the BSW Scheduler. 

This information can be used to analyze call tree and resource locking scenarios. It is not needed to configure the BSW Scheduler.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswDirectCallPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="CALLED-ENTRY-REF">
            <xsd:annotation>
               <xsd:documentation>The BswModuleEntry called at this point.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswDirectCallPoint.calledEntry";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:BSW-MODULE-ENTRY--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="CALLED-FROM-WITHIN-EXCLUSIVE-AREA-REF">
            <xsd:annotation>
               <xsd:documentation>This indicates that the call point is located at the deepest level inside one or more ExclusiveAreas that are nested in the given order.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswDirectCallPoint.calledFromWithinExclusiveArea";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:EXCLUSIVE-AREA-NESTING-ORDER--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswDirectCallPoint -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-DIRECT-CALL-POINT">
      <xsd:annotation>
         <xsd:documentation>Represents a concrete point in the code from where a BswModuleEntry is called directly, i.e. not via the BSW Scheduler. 

This information can be used to analyze call tree and resource locking scenarios. It is not needed to configure the BSW Scheduler.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswDirectCallPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:BSW-MODULE-CALL-POINT"/>
         <xsd:group ref="AR:BSW-DIRECT-CALL-POINT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class BswBehavior::BswSynchronousServerCallPoint -->
   <xsd:group name="BSW-SYNCHRONOUS-SERVER-CALL-POINT">
      <xsd:annotation>
         <xsd:documentation>Represents a synchronous procedure call point via the BSW Scheduler.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswSynchronousServerCallPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="CALLED-ENTRY-REF">
            <xsd:annotation>
               <xsd:documentation>The entry to be called.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswSynchronousServerCallPoint.calledEntry";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:BSW-MODULE-CLIENT-SERVER-ENTRY--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="CALLED-FROM-WITHIN-EXCLUSIVE-AREA-REF">
            <xsd:annotation>
               <xsd:documentation>This indicates that the call point is located at the deepest level inside one or more ExclusiveAreas that are nested in the given order.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswSynchronousServerCallPoint.calledFromWithinExclusiveArea";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:EXCLUSIVE-AREA-NESTING-ORDER--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswSynchronousServerCallPoint -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-SYNCHRONOUS-SERVER-CALL-POINT">
      <xsd:annotation>
         <xsd:documentation>Represents a synchronous procedure call point via the BSW Scheduler.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswSynchronousServerCallPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:BSW-MODULE-CALL-POINT"/>
         <xsd:group ref="AR:BSW-SYNCHRONOUS-SERVER-CALL-POINT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class BswBehavior::BswVariableAccess -->
   <xsd:group name="BSW-VARIABLE-ACCESS">
      <xsd:annotation>
         <xsd:documentation>The presence of a BswVariableAccess implies that a BswModuleEntity needs access to a VariableDataPrototype via the BSW Scheduler.

The kind of access is specified by the role in which the class is used.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswVariableAccess"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ACCESSED-VARIABLE-REF">
            <xsd:annotation>
               <xsd:documentation>The data accessed via the BSW Scheduler.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswVariableAccess.accessedVariable";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:VARIABLE-DATA-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="CONTEXT-LIMITATION-REFS">
            <xsd:annotation>
               <xsd:documentation>The existence of this reference indicates that the variable is recevied resp. sent only in the context of the referred BswDistinguishedPartitions.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswVariableAccess.contextLimitation";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="CONTEXT-LIMITATION-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:BSW-DISTINGUISHED-PARTITION--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswVariableAccess.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswVariableAccess -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-VARIABLE-ACCESS">
      <xsd:annotation>
         <xsd:documentation>The presence of a BswVariableAccess implies that a BswModuleEntity needs access to a VariableDataPrototype via the BSW Scheduler.

The kind of access is specified by the role in which the class is used.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswVariableAccess"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:BSW-VARIABLE-ACCESS"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class TriggerDeclaration::TriggerRefConditional -->
   <xsd:group name="TRIGGER-REF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Trigger"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="TRIGGER-REF">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Trigger";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:TRIGGER--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="TriggerRefConditional.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class TriggerDeclaration::TriggerRefConditional -->
   <xsd:complexType abstract="false" mixed="false" name="TRIGGER-REF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Trigger"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:TRIGGER-REF-CONDITIONAL"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:complexType name="BSW-INTERRUPT-CATEGORY">
      <xsd:annotation>
         <xsd:documentation>Category of the interrupt service</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswInterruptCategory"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:BSW-INTERRUPT-CATEGORY--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="BSW-INTERRUPT-CATEGORY--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CAT-1">
            <xsd:annotation>
               <xsd:documentation>Cat1 interrupt routines are not controlled by the OS and are only allowed to make a very limited selection of OS calls to enable and disable all interrupts. The BswInterruptEntity  is implemented by the interrupt service routine, which is directly called from the interrupt vector (not via the OS).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswInterruptCategory.cat1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CAT-2">
            <xsd:annotation>
               <xsd:documentation>Cat2 interrupt routines are controlled by the OS and they are allowed to make OS calls. The BswInterruptEntity  is implemented by the interrupt handler, which is called from the OS.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswInterruptCategory.cat2"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
 <xsd:complexType name="MODE-ACTIVATION-KIND">
      <xsd:annotation>
         <xsd:documentation>Kind of mode switch condition used for activation of an event, as further described for each enumeration field.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ModeActivationKind"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:MODE-ACTIVATION-KIND--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="MODE-ACTIVATION-KIND--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ON-ENTRY">
            <xsd:annotation>
               <xsd:documentation>On entering the referred mode.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ModeActivationKind.onEntry"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ON-EXIT">
            <xsd:annotation>
               <xsd:documentation>On exiting the referred mode.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ModeActivationKind.onExit"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ON-TRANSITION">
            <xsd:annotation>
               <xsd:documentation>On transition of the 1st referred mode to the 2nd referred mode.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ModeActivationKind.onTransition"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
 <!-- element group for class BswBehavior::BswModuleCallPoint -->
   <xsd:group name="BSW-MODULE-CALL-POINT">
      <xsd:annotation>
         <xsd:documentation>Represents a point at which a BswModuleEntity handles a procedure call into a BswModuleEntry, either directly or via the BSW Scheduler.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleCallPoint"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="CONTEXT-LIMITATION-REFS">
            <xsd:annotation>
               <xsd:documentation>The existence of this reference indicates that the call point is used only in the context of the referred BswDistinguishedPartitions.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleCallPoint.contextLimitation";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="CONTEXT-LIMITATION-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:BSW-DISTINGUISHED-PARTITION--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModuleCallPoint.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
 <!-- element group for class InstanceRefs::ModeInBswModuleDescriptionInstanceRef -->
   <xsd:group name="MODE-IN-BSW-MODULE-DESCRIPTION-INSTANCE-REF">
      <xsd:annotation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ModeInBswModuleDescriptionInstanceRef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject,instanceRef</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <!-- Association <<atpDerived>>base skipped -->
         <xsd:element maxOccurs="1" minOccurs="0" name="CONTEXT-MODE-DECLARATION-GROUP-REF">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ModeInBswModuleDescriptionInstanceRef.contextModeDeclarationGroup";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:MODE-DECLARATION-GROUP-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TARGET-MODE-REF">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ModeInBswModuleDescriptionInstanceRef.targetMode";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:MODE-DECLARATION--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class InstanceRefs::ModeInBswModuleDescriptionInstanceRef -->
   <xsd:complexType abstract="false" mixed="false" name="MODE-IN-BSW-MODULE-DESCRIPTION-INSTANCE-REF">
      <xsd:annotation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ModeInBswModuleDescriptionInstanceRef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject,instanceRef</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ATP-INSTANCE-REF"/>
         <xsd:group ref="AR:MODE-IN-BSW-MODULE-DESCRIPTION-INSTANCE-REF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class ServiceMapping::BswServiceDependencyIdent -->
   <xsd:group name="BSW-SERVICE-DEPENDENCY-IDENT">
      <xsd:annotation>
         <xsd:documentation>This meta-class is created to add the ability to become the target of a reference to the non-Referrable BswServiceDependency.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswServiceDependencyIdent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class ServiceMapping::BswServiceDependencyIdent -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-SERVICE-DEPENDENCY-IDENT">
      <xsd:annotation>
         <xsd:documentation>This meta-class is created to add the ability to become the target of a reference to the non-Referrable BswServiceDependency.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswServiceDependencyIdent"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:ATP-CLASSIFIER"/>
         <xsd:group ref="AR:ATP-FEATURE"/>
         <xsd:group ref="AR:ATP-STRUCTURE-ELEMENT"/>
         <xsd:group ref="AR:IDENT-CAPTION"/>
         <xsd:group ref="AR:BSW-SERVICE-DEPENDENCY-IDENT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
   <xsd:simpleType name="BSW-SERVICE-DEPENDENCY-IDENT--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BSW-SERVICE-DEPENDENCY-IDENT"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class ServiceNeeds::RoleBasedDataAssignment -->
   <xsd:group name="ROLE-BASED-DATA-ASSIGNMENT">
      <xsd:annotation>
         <xsd:documentation>This class specifies an assignment of a role to a particular data object in the SwcInternalBehavior of a software component (or in the BswModuleBehavior of a module or cluster) in the context of an AUTOSAR Service.

With this assignment, the role of the data can be mapped to a specific ServiceNeeds element, so that a tool is able to create the correct access.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RoleBasedDataAssignment"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ROLE" type="AR:IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>This is the role of the assigned data in the given context, for example for an NVRAM Block it is used to distinguish between an mirror block and a ROM default block. Possible values need to be specified on M1 level.

This also is intended to support the so called "Signal based Approach" of the DCM. In this use case the name of the involved data element is required. This name shall be taken from the DataElement referenced by the property usedDataElement.

The following values are standardized:
* '''ramBlock''' indicates data to be used as a mirror for an NVRAM Block.
* '''defaultData''' indicates constant data to be used as default in the context of this ServiceNeeds, e.g. for an NVRAM Block.
* '''signalBasedDiagnostics''' indicates the RoleBasedDataAssignment shall be used for signal based diagnostics.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RoleBasedDataAssignment.role";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="USED-DATA-ELEMENT" type="AR:AUTOSAR-VARIABLE-REF">
            <xsd:annotation>
               <xsd:documentation>The VariableDataPrototype used in this role, e.g. 

* Permanent RAM Block of an NVRAM Block which shall belong to the same SwcInternalBehavior or BswInternalBehavior.

* In the role signalBasedDiagnostics it has to refer to a VariableDataPrototype in a SenderReceiverInterface or a NvDataInterface.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RoleBasedDataAssignment.usedDataElement";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="USED-PARAMETER-ELEMENT" type="AR:AUTOSAR-PARAMETER-REF">
            <xsd:annotation>
               <xsd:documentation>The ParameterDataPrototype used in this role, e.g. 

* ROM Block of an NVRAM Block. It shall belong to the same SwcInternalBehavior or BswInternalbehavior.

* In the role signalBasedDiagnostics it has to refer to a ParameterDataPrototype in a ParameterInterface.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RoleBasedDataAssignment.usedParameterElement";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="USED-PIM-REF">
            <xsd:annotation>
               <xsd:documentation>The (untyped) PerInstanceMemory used in this role (e.g. as a Permanent RAM Block for an NVRAM Block).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RoleBasedDataAssignment.usedPim";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:PER-INSTANCE-MEMORY--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RoleBasedDataAssignment.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ServiceNeeds::RoleBasedDataAssignment -->
   <xsd:complexType abstract="false" mixed="false" name="ROLE-BASED-DATA-ASSIGNMENT">
      <xsd:annotation>
         <xsd:documentation>This class specifies an assignment of a role to a particular data object in the SwcInternalBehavior of a software component (or in the BswModuleBehavior of a module or cluster) in the context of an AUTOSAR Service.

With this assignment, the role of the data can be mapped to a specific ServiceNeeds element, so that a tool is able to create the correct access.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RoleBasedDataAssignment"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ROLE-BASED-DATA-ASSIGNMENT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class BswBehavior::RoleBasedBswModuleEntryAssignment -->
   <xsd:group name="ROLE-BASED-BSW-MODULE-ENTRY-ASSIGNMENT">
      <xsd:annotation>
         <xsd:documentation>This class specifies an assignment of a role to a particular BswModuleEntry (usually a configurable callback). 

With this assignment, the role of the callback is mapped to a specific ServiceNeeds element, so that a tool is able to create appropriate configuration values for the module that implements the AUTOSAR Service.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RoleBasedBswModuleEntryAssignment"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ASSIGNED-ENTRY-REF">
            <xsd:annotation>
               <xsd:documentation>The assigned entry. It should be a providedEntry or expectedCallback of the module or cluster that requires the ServiceNeeds.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RoleBasedBswModuleEntryAssignment.assignedEntry";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:BSW-MODULE-ENTRY--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ROLE" type="AR:IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>This is the role of the assigned BswModuleEntry in the given context. The attribute is required (for example) because different kind of callbacks may be associated with the same ServiceNeeds (e.g. end-notification vs. error-notification).

The value must be the role name of a configurable function call (usually a callback) as standardized in the Software Specification of the related AUTOSAR Service.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RoleBasedBswModuleEntryAssignment.role";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RoleBasedBswModuleEntryAssignment.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::RoleBasedBswModuleEntryAssignment -->
   <xsd:complexType abstract="false" mixed="false" name="ROLE-BASED-BSW-MODULE-ENTRY-ASSIGNMENT">
      <xsd:annotation>
         <xsd:documentation>This class specifies an assignment of a role to a particular BswModuleEntry (usually a configurable callback). 

With this assignment, the role of the callback is mapped to a specific ServiceNeeds element, so that a tool is able to create appropriate configuration values for the module that implements the AUTOSAR Service.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RoleBasedBswModuleEntryAssignment"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ROLE-BASED-BSW-MODULE-ENTRY-ASSIGNMENT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class ServiceMapping::RoleBasedDataTypeAssignment -->
   <xsd:group name="ROLE-BASED-DATA-TYPE-ASSIGNMENT">
      <xsd:annotation>
         <xsd:documentation>This class specifies an assignment of a role to a particular data type of a software component (or in the BswModuleBehavior of a module or cluster) in the context of an AUTOSAR Service.

With this assignment, the role of the data type can be mapped to a specific ServiceNeeds element, so that a tool is able to create the correct access.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RoleBasedDataTypeAssignment"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ROLE" type="AR:IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>This is the role of the associated data type in the given context.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RoleBasedDataTypeAssignment.role";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="USED-IMPLEMENTATION-DATA-TYPE-REF">
            <xsd:annotation>
               <xsd:documentation>This represents the associated ImplementationDataType.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RoleBasedDataTypeAssignment.usedImplementationDataType";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:IMPLEMENTATION-DATA-TYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RoleBasedDataTypeAssignment.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ServiceMapping::RoleBasedDataTypeAssignment -->
   <xsd:complexType abstract="false" mixed="false" name="ROLE-BASED-DATA-TYPE-ASSIGNMENT">
      <xsd:annotation>
         <xsd:documentation>This class specifies an assignment of a role to a particular data type of a software component (or in the BswModuleBehavior of a module or cluster) in the context of an AUTOSAR Service.

With this assignment, the role of the data type can be mapped to a specific ServiceNeeds element, so that a tool is able to create the correct access.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RoleBasedDataTypeAssignment"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ROLE-BASED-DATA-TYPE-ASSIGNMENT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class ServiceNeeds::SymbolicNameProps -->
   <xsd:group name="SYMBOLIC-NAME-PROPS">
      <xsd:annotation>
         <xsd:documentation>This meta-class can be taken to contribute to the creation of symbolic name values.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SymbolicNameProps"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class ServiceNeeds::SymbolicNameProps -->
   <xsd:complexType abstract="false" mixed="false" name="SYMBOLIC-NAME-PROPS">
      <xsd:annotation>
         <xsd:documentation>This meta-class can be taken to contribute to the creation of symbolic name values.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SymbolicNameProps"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:IMPLEMENTATION-PROPS"/>
         <xsd:group ref="AR:SYMBOLIC-NAME-PROPS"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class BswBehavior::BswModeSwitchAckRequest -->
   <xsd:group name="BSW-MODE-SWITCH-ACK-REQUEST">
      <xsd:annotation>
         <xsd:documentation>Requests acknowledgements that a mode switch has been processed  successfully</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswModeSwitchAckRequest"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="TIMEOUT" type="AR:TIME-VALUE">
            <xsd:annotation>
               <xsd:documentation>Number of seconds before an error is reported.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswModeSwitchAckRequest.timeout";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswBehavior::BswModeSwitchAckRequest -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-MODE-SWITCH-ACK-REQUEST">
      <xsd:annotation>
         <xsd:documentation>Requests acknowledgements that a mode switch has been processed  successfully</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswModeSwitchAckRequest"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:BSW-MODE-SWITCH-ACK-REQUEST"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:complexType name="CALPRM-AXIS-CATEGORY-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enum specifies the possible values of the category property within  SwCalprmAxis.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CalprmAxisCategoryEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:CALPRM-AXIS-CATEGORY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="CALPRM-AXIS-CATEGORY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="COM-AXIS">
            <xsd:annotation>
               <xsd:documentation>COM-AXIS is equal to an STD_AXIS, the difference is, that a COM-AXIS is an shared axis, that means this axis can be used multiple times by different curves or maps. This value is obsolete.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="CalprmAxisCategoryEnum.comAxis_O";xml.name="COM-AXIS"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="COM_AXIS">
            <xsd:annotation>
               <xsd:documentation>COM_AXIS is equal to an STD_AXIS, the difference is, that a COM_AXIS is an shared axis, that means this axis can be used multiple times by different CURVEs,  MAPs, CUBOIDs, CUBE_4s, and CUBE_5s.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="CalprmAxisCategoryEnum.comAxis";xml.name="COM_AXIS"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CURVE-AXIS">
            <xsd:annotation>
               <xsd:documentation>CURVE-AXIS uses a separate CURVE to rescale the axis. The referenced CURVE is used to lookup an axis index, and the index value is used by the controller to determine the operating point in the CURVE or MAP. This value is obsolete.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="CalprmAxisCategoryEnum.curveAxis_O";xml.name="CURVE-AXIS"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CURVE_AXIS">
            <xsd:annotation>
               <xsd:documentation>CURVE_AXIS uses a separate CURVE to rescale the axis. The referenced CURVE is used to lookup an axis index, and the index value is used by the controller to determine the operating point in the CURVE, MAP, CUBOID, CUBE_4, or CUBE_5.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="CalprmAxisCategoryEnum.curveAxis";xml.name="CURVE_AXIS"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FIX-AXIS">
            <xsd:annotation>
               <xsd:documentation>FIX-AXIS means that the input axis is not stored. The axis is calculated using parameters  and so on it is also not possible to modify the axis points. This value is obsolete.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="CalprmAxisCategoryEnum.fixAXIS_O";xml.name="FIX-AXIS"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FIX_AXIS">
            <xsd:annotation>
               <xsd:documentation>FIX_AXIS means that the input axis is not stored. The axis is calculated using parameters  and so on it is also not possible to modify the axis points.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="CalprmAxisCategoryEnum.fixAXIS";xml.name="FIX_AXIS"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RES-AXIS">
            <xsd:annotation>
               <xsd:documentation>RES-AXIS is also an shared axis like COM_AXIS, the difference is that this kind of axis can be used for rescaling. This value is obsolete.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="CalprmAxisCategoryEnum.resAxis_O";xml.name="RES-AXIS"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RES_AXIS">
            <xsd:annotation>
               <xsd:documentation>RES_AXIS is also an shared axis like COM_AXIS, the difference is that this kind of axis can be used for rescaling.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="CalprmAxisCategoryEnum.resAxis";xml.name="RES_AXIS"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STD-AXIS">
            <xsd:annotation>
               <xsd:documentation>STD-AXIS means that input and output axis definition are stored within this CURVE.
There is no shared or calculated axis. This value is obsolete.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="CalprmAxisCategoryEnum.stdAxis_O";xml.name="STD-AXIS"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STD_AXIS">
            <xsd:annotation>
               <xsd:documentation>STD_AXIS means that input and output axis definition are stored within this CURVE, MAP, CUBOID, CUBE_4, and CUBE_5.

There is no shared or calculated axis.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="CalprmAxisCategoryEnum.stdAxis";xml.name="STD_AXIS"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>

 <xsd:simpleType name="UNIT--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="UNIT"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class DataDefProperties::ValueList -->
   <xsd:group name="VALUE-LIST">
      <xsd:annotation>
         <xsd:documentation>This is a generic list of numerical values.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ValueList"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixed,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="VF" type="AR:NUMERICAL-VALUE-VARIATION-POINT">
               <xsd:annotation>
                  <xsd:documentation>This is one entry in the list of numerical values</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="ValueList.vf";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.roleElement="true";xml.roleWrapperElement="false";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="V" type="AR:NUMERICAL-VALUE">
               <xsd:annotation>
                  <xsd:documentation>This is a particular numerical value without variation.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="ValueList.v";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="30"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
         </xsd:choice>
      </xsd:choice>
   </xsd:group>
   <!-- complex type for class DataDefProperties::ValueList -->
   <xsd:complexType abstract="false" mixed="false" name="VALUE-LIST">
      <xsd:annotation>
         <xsd:documentation>This is a generic list of numerical values.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ValueList"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixed,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:VALUE-LIST"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:complexType name="AXIS-INDEX-TYPE">
      <xsd:annotation>
         <xsd:documentation>This meta-class specifies an axis in a curve/map data object. The index satisfies  the following convention:

* 0 output "axis"
* 1 input axis 1 (X input axis e.g. of a CURVE)
* 2 input axis 2 (Y input axis e.g. of a MAP)
* 3 input axis 3 (Z input axis e.g. of a CUBOID)
* 4 input axis 3 (Z4 input axis e.g. of a CUBE_4)
* 5 input axis 3 (Z5 input axis e.g. of a CUBE_5)
* 6..9 etc.

The output "axis" provides access to the output value of the parameter. Note that this access is usually performed via an index according to the input axis.

In addition to this, the Values STRING and ARRAY support specific iterations.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AxisIndexType";xml.xsd.customType="AXIS-INDEX-TYPE";xml.xsd.pattern="[0-9]+|STRING|ARRAY";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:AXIS-INDEX-TYPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="AXIS-INDEX-TYPE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[0-9]+|STRING|ARRAY"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class RPTScenario::IdentCaption -->
   <xsd:group name="IDENT-CAPTION">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the caption. This allows having some meta classes optionally identifiable.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="IdentCaption"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>

<!-- element group for class CalibrationValue::SwValues -->
   <xsd:group name="SW-VALUES">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents a list of values. These values can either be the input values of a curve (abscissa values) or the associated values (ordinate values). 

In case of multidimensional structures, the values are ordered such that the lowest index runs the fastest. In particular for maps and cuboids etc. the resulting long value list can be subsectioned using ValueGroup. But the processing needs to be done as if vg is not there.

Note that numerical values and textual values should not be mixed.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwValues"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixed,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="VTF" type="AR:NUMERICAL-OR-TEXT">
               <xsd:annotation>
                  <xsd:documentation>Thias aggregation represents the ability to provide a value that is either numerical or text which existence is subject to variability.

From the formal point of view, the aggregation needs to have the multiplicity 1 because SwValues is modelled with stereotype &lt;&lt;atpMixed&gt;&gt;. Nevertheless, the existence of vtf is optional and subject to constraints.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="SwValues.vtf";pureMM.maxOccurs="-1";pureMM.minOccurs="1";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="VF" type="AR:NUMERICAL-VALUE-VARIATION-POINT">
               <xsd:annotation>
                  <xsd:documentation>This allows to specify the value as VariationPoint. It is distinguished to non variant for sake of compatibility to ASAM CDF 2.0.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="SwValues.vf";pureMM.maxOccurs="1";pureMM.minOccurs="1";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="20"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="VT" type="AR:VERBATIM-STRING">
               <xsd:annotation>
                  <xsd:documentation>This represents the values of textual data elements (Strings). Note that vt uses the | to separate the values for the different bitfield masks in case that the semantics of the related DataPrototype is described by means of a BITFIELD_TEXTTABLE in the associated CompuMethod.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="SwValues.vt";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="30"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="V" type="AR:NUMERICAL-VALUE">
               <xsd:annotation>
                  <xsd:documentation>This is a non variant Value. It is provided for sake of Compatibility to ASAM CDF.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="SwValues.v";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="40"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="VG" type="AR:VALUE-GROUP">
               <xsd:annotation>
                  <xsd:documentation>This allows to have intersections in the values in order to support specific rendering (eg. using stylesheets). For tools it is important that the v values are always processed in the same (flattened) order and the tool is able to interpret it without respecting vg.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="SwValues.vg";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="50"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
         </xsd:choice>
      </xsd:choice>
   </xsd:group>
   <!-- complex type for class CalibrationValue::SwValues -->
   <xsd:complexType abstract="false" mixed="false" name="SW-VALUES">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents a list of values. These values can either be the input values of a curve (abscissa values) or the associated values (ordinate values). 

In case of multidimensional structures, the values are ordered such that the lowest index runs the fastest. In particular for maps and cuboids etc. the resulting long value list can be subsectioned using ValueGroup. But the processing needs to be done as if vg is not there.

Note that numerical values and textual values should not be mixed.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwValues"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixed,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SW-VALUES"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class Constants::RuleArguments -->
   <xsd:group name="RULE-ARGUMENTS">
      <xsd:annotation>
         <xsd:documentation>This represents the arguments for a rule-based value specification.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RuleArguments"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixed,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="V" type="AR:NUMERICAL-VALUE">
               <xsd:annotation>
                  <xsd:documentation>This represents a numerical value for the RuleBasedValueSpecification.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="RuleArguments.v";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="VF" type="AR:NUMERICAL-VALUE-VARIATION-POINT">
               <xsd:annotation>
                  <xsd:documentation>This represents a numerical value for the RuleBasedValueSpecification which may subject to variability. The latest binding time of the VariationPoint shall be preCompileTime.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="RuleArguments.vf";pureMM.maxOccurs="1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="VT" type="AR:VERBATIM-STRING">
               <xsd:annotation>
                  <xsd:documentation>This represents a textual value for the RuleBasedValueSpecification.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="RuleArguments.vt";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="VTF" type="AR:NUMERICAL-OR-TEXT">
               <xsd:annotation>
                  <xsd:documentation>This aggregation represents the ability to provide a value that is either numerical or text which existence is subject to variability.

The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="RuleArguments.vtf";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="VARIATION-POINT" type="AR:VARIATION-POINT">
               <xsd:annotation>
                  <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
                  <xsd:appinfo source="tags">mmt.qualifiedName="RuleArguments.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
               </xsd:annotation>
            </xsd:element>
         </xsd:choice>
      </xsd:choice>
   </xsd:group>
   <!-- complex type for class Constants::RuleArguments -->
   <xsd:complexType abstract="false" mixed="false" name="RULE-ARGUMENTS">
      <xsd:annotation>
         <xsd:documentation>This represents the arguments for a rule-based value specification.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RuleArguments"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixed,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:RULE-ARGUMENTS"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:complexType name="FLOAT">
      <xsd:annotation>
         <xsd:documentation>An instance of Float is an element from the set of real numbers. The value must comply with IEEE 754 and is limited to what can be expressed by a 64 bit binary representation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Float";xml.xsd.customType="FLOAT";xml.xsd.type="double"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:FLOAT--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="FLOAT--SIMPLE">
      <xsd:restriction base="xsd:double"/>
   </xsd:simpleType>
<xsd:complexType name="ALIGNMENT-TYPE">
      <xsd:annotation>
         <xsd:documentation>This primitive represents the alignment of objects within a memory section. The value is in number of bits or UNKNOWN (deprecated), 8 , 16, 32 UNSPECIFIED or BOOLEAN. Typical values for numbers are 8, 16, 32.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AlignmentType";xml.xsd.customType="ALIGNMENT-TYPE";xml.xsd.pattern="[1-9][0-9]*|0x[0-9a-f]*|0[0-7]*|0b[0-1]*|UNSPECIFIED|UNKNOWN|BOOLEAN";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ALIGNMENT-TYPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="ALIGNMENT-TYPE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[1-9][0-9]*|0x[0-9a-f]*|0[0-7]*|0b[0-1]*|UNSPECIFIED|UNKNOWN|BOOLEAN"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="SW-BASE-TYPE--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="SW-BASE-TYPE"/>
      </xsd:restriction>
   </xsd:simpleType>
 <!-- element group for class DataDefProperties::SwBitRepresentation -->
   <xsd:group name="SW-BIT-REPRESENTATION">
      <xsd:annotation>
         <xsd:documentation>Description of the structure of a bit variable: Comprises of the bitPosition in a memory object (e.g. swHostVariable, which stands parallel to swBitRepresentation) and the numberOfBits . In this way, interrelated memory areas can be described. Non-related memory areas are not supported.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwBitRepresentation"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="BIT-POSITION" type="AR:INTEGER">
            <xsd:annotation>
               <xsd:documentation>If the "bit data object" is hosted within another data object (e.g. if the memory can be accessed via byte as well as bit address), this attribute specifies the position of the data object. The count starts at zero (0).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwBitRepresentation.bitPosition";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="NUMBER-OF-BITS" type="AR:INTEGER">
            <xsd:annotation>
               <xsd:documentation>Number of bits allocated by a "bit data object" within its host data object.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwBitRepresentation.numberOfBits";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class DataDefProperties::SwBitRepresentation -->
   <xsd:complexType abstract="false" mixed="false" name="SW-BIT-REPRESENTATION">
      <xsd:annotation>
         <xsd:documentation>Description of the structure of a bit variable: Comprises of the bitPosition in a memory object (e.g. swHostVariable, which stands parallel to swBitRepresentation) and the numberOfBits . In this way, interrelated memory areas can be described. Non-related memory areas are not supported.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwBitRepresentation"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SW-BIT-REPRESENTATION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class CalibrationParameter::SwCalprmAxisSet -->
   <xsd:group name="SW-CALPRM-AXIS-SET">
      <xsd:annotation>
         <xsd:documentation>This element specifies the input parameter axes (abscissas) of parameters (and variables, if these are used adaptively).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwCalprmAxisSet"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="SW-CALPRM-AXIS" type="AR:SW-CALPRM-AXIS">
            <xsd:annotation>
               <xsd:documentation>One axis belonging to this SwCalprmAxisSet</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwCalprmAxisSet.swCalprmAxis";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.roleElement="true";xml.roleWrapperElement="false";xml.sequenceOffset="20";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class CalibrationParameter::SwCalprmAxisSet -->
   <xsd:complexType abstract="false" mixed="false" name="SW-CALPRM-AXIS-SET">
      <xsd:annotation>
         <xsd:documentation>This element specifies the input parameter axes (abscissas) of parameters (and variables, if these are used adaptively).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwCalprmAxisSet"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SW-CALPRM-AXIS-SET"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class DataDefProperties::SwTextProps -->
   <xsd:group name="SW-TEXT-PROPS">
      <xsd:annotation>
         <xsd:documentation>This meta-class expresses particular properties applicable to strings in variables or calibration parameters.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwTextProps"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ARRAY-SIZE-SEMANTICS" type="AR:ARRAY-SIZE-SEMANTICS-ENUM">
            <xsd:annotation>
               <xsd:documentation>This attribute controls the semantics of the arraysize for the array representing the string in an ImplementationDataType. 

It is there to support a safe conversion between ApplicationDatatype and ImplementationDatatype, even for variable length strings as required e.g. for Support of SAE J1939.

In conjunction with swFillCharacter, it provides the following options:

* FixedLengthString:  FixedSize - no fillcharacter
* TerminatedStringFixedLengthCommunication: FixedSize - with fillcharacter
* VariableLengthString: VariableSize - no fillcharacter
* TerminatedStringVariableLengthCommunication: VariableSize with fillcharacter</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwTextProps.arraySizeSemantics";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-MAX-TEXT-SIZE" type="AR:INTEGER-VALUE-VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>Specifies the maximum text size in characters. Note the size in bytes depends on the encoding in the corresponding baseType.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwTextProps.swMaxTextSize";pureMM.maxOccurs="1";pureMM.minOccurs="1";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="BASE-TYPE-REF">
            <xsd:annotation>
               <xsd:documentation>This is the base type of one character in the string. In particular this baseType denotes the intended encoding of the characters in the string  on level of ApplicationDataType.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwTextProps.baseType";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:SW-BASE-TYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-FILL-CHARACTER" type="AR:INTEGER">
            <xsd:annotation>
               <xsd:documentation>Filler character for text parameter to pad up to the maximum length swMaxTextSize.

The value will be interpreted according to the encoding specified in the associated base type of the data object, e.g. 0x30 (hex) represents the ASCII character zero as filler character and 0 (dec) represents an end of string as filler character.

The usage of the fill character depends on the arraySizeSemantics.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwTextProps.swFillCharacter";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="40"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class DataDefProperties::SwTextProps -->
   <xsd:complexType abstract="false" mixed="false" name="SW-TEXT-PROPS">
      <xsd:annotation>
         <xsd:documentation>This meta-class expresses particular properties applicable to strings in variables or calibration parameters.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwTextProps"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SW-TEXT-PROPS"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class DatadictionaryProxies::SwVariableRefProxy -->
   <xsd:group name="SW-VARIABLE-REF-PROXY">
      <xsd:annotation>
         <xsd:documentation>Proxy class for several kinds of references to a variable.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwVariableRefProxy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="AUTOSAR-VARIABLE" type="AR:AUTOSAR-VARIABLE-REF">
            <xsd:annotation>
               <xsd:documentation>This represents the reference to a Variable in an Autosar system. Note that the target of the reference within AutosarVariableRef shall be typed by a  primitive data type</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwVariableRefProxy.autosarVariable";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MC-DATA-INSTANCE-VAR-REF">
            <xsd:annotation>
               <xsd:documentation>This reference is used in the McSupport file to express the final instance of input values etc. It is not allowed to use this outside of an McDataInstance.

The referenced mcDataInstance shall be originated from a VariableDataPrototype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwVariableRefProxy.mcDataInstanceVar";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:MC-DATA-INSTANCE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class DatadictionaryProxies::SwVariableRefProxy -->
   <xsd:complexType abstract="false" mixed="false" name="SW-VARIABLE-REF-PROXY">
      <xsd:annotation>
         <xsd:documentation>Proxy class for several kinds of references to a variable.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwVariableRefProxy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SW-VARIABLE-REF-PROXY"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:simpleType name="DATA-CONSTR--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DATA-CONSTR"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class DataDefProperties::SwDataDependency -->
   <xsd:group name="SW-DATA-DEPENDENCY">
      <xsd:annotation>
         <xsd:documentation>This element describes the interdependencies of data objects, e.g. variables and parameters. 

Use cases:
* Calculate the value of a calibration parameter (by the MCD system) from the value(s) of other calibration parameters.
* Virtual data - that means the data object is not directly in the ecu and this property describes how the "virtual variable" can be computed from the real ones (by the MCD system).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDependency"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-DATA-DEPENDENCY-FORMULA" type="AR:COMPU-GENERIC-MATH">
            <xsd:annotation>
               <xsd:documentation>This element describes the formula with which the dependencies between the participating objects are defined.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDependency.swDataDependencyFormula";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-DATA-DEPENDENCY-ARGS" type="AR:SW-DATA-DEPENDENCY-ARGS">
            <xsd:annotation>
               <xsd:documentation>Specifies the arguments used in the data dependency. Note that this is 0..1 since the aggregated class is a container (atpMixed).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDependency.swDataDependencyArgs";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="40"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class DataDefProperties::SwDataDependency -->
   <xsd:complexType abstract="false" mixed="false" name="SW-DATA-DEPENDENCY">
      <xsd:annotation>
         <xsd:documentation>This element describes the interdependencies of data objects, e.g. variables and parameters. 

Use cases:
* Calculate the value of a calibration parameter (by the MCD system) from the value(s) of other calibration parameters.
* Virtual data - that means the data object is not directly in the ecu and this property describes how the "virtual variable" can be computed from the real ones (by the MCD system).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDependency"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SW-DATA-DEPENDENCY"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:complexType name="DISPLAY-FORMAT-STRING">
      <xsd:annotation>
         <xsd:documentation>This is a display format specifier for the display of values  e.g. in documents or in measurement and calibration systems. 

The display format specifier is a subset of the ANSI C printf specifiers with the following
form:

  % [flags] [width] [.prec] type character 

For more details refer to "ASAM-HarmonizedDataObjects-V1.1.pdf" chapter 13.3.2 DISPLAY OF DATA. 

Due to the numerical nature of value settings, only the following type characters are allowed:

* d:  Signed decimal integer 
* i:  Signed decimal integer 
* o:  Unsigned octal integer 
* u:  Unsigned decimal integer 
* x:  Unsigned hexadecimal integer, using "abcdef" 
* X:  Unsigned hexadecimal integer, using "ABCDEF" 
* e:  Signed value having the form [-]d.dddd e [sign]ddd where d is a single decimal digit, dddd is one or more decimal digits, ddd is exactly three decimal digits, and sign is + or - 
* E:  Identical to the e format except that E rather than e introduces the exponent 
* f:  Signed value having the form [-]dddd.dddd, where dddd is one or more decimal digits; the number of digits before the decimal point depends on the magnitude of the number, and the number of digits after the decimal point depends on the requested precision 
* g:  Signed value printed in f or e format, whichever is more compact for the given value and precision; trailing zeros are truncated, and the decimal point appears only if one or more digits follow it 
* G:  Identical to the g format, except that E, rather than e, introduces the exponent (where appropriate)</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DisplayFormatString";xml.xsd.customType="DISPLAY-FORMAT-STRING";xml.xsd.pattern="%[ \-+#]?[0-9]*(\.[0-9])?[diouxXfeEgGcs]";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DISPLAY-FORMAT-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="DISPLAY-FORMAT-STRING--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="%[ \-+#]?[0-9]*(\.[0-9])?[diouxXfeEgGcs]"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:complexType name="NATIVE-DECLARATION-STRING">
      <xsd:annotation>
         <xsd:documentation>This string contains a native data declaration of a data type in a programming language. It is basically a string, but white-space must be preserved.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="NativeDeclarationString";xml.xsd.customType="NATIVE-DECLARATION-STRING";xml.xsd.type="string";xml.xsd.whiteSpace="preserve"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:NATIVE-DECLARATION-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="NATIVE-DECLARATION-STRING--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:whiteSpace value="preserve"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="SW-RECORD-LAYOUT--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="SW-RECORD-LAYOUT"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class DataDefProperties::SwPointerTargetProps -->
   <xsd:group name="SW-POINTER-TARGET-PROPS">
      <xsd:annotation>
         <xsd:documentation>This element defines, that the data object (which is specified by the aggregating element) contains a reference to another data object or to a function in the CPU code. This corresponds to a pointer in the C-language.

The attributes of this element describe the category and the detailed properties of the target which is either a data description or a function signature.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwPointerTargetProps"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="TARGET-CATEGORY" type="AR:IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>This specifies the category of the target:

* In case of a data pointer, it shall specify the category of the referenced data.

* In case of a function pointer, it could be used to denote the category of the referenced BswModuleEntry. Since currently no categories for BswModuleEntry are defined it will be empty.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwPointerTargetProps.targetCategory";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="5"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-DATA-DEF-PROPS" type="AR:SW-DATA-DEF-PROPS">
            <xsd:annotation>
               <xsd:documentation>The properties of the target data type.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwPointerTargetProps.swDataDefProps";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="FUNCTION-POINTER-SIGNATURE-REF">
            <xsd:annotation>
               <xsd:documentation>The referenced BswModuleEntry serves as the signature of a function pointer definition. Primary use case: function pointer passed as argument to other function.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwPointerTargetProps.functionPointerSignature";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="40"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:BSW-MODULE-ENTRY--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class DataDefProperties::SwPointerTargetProps -->
   <xsd:complexType abstract="false" mixed="false" name="SW-POINTER-TARGET-PROPS">
      <xsd:annotation>
         <xsd:documentation>This element defines, that the data object (which is specified by the aggregating element) contains a reference to another data object or to a function in the CPU code. This corresponds to a pointer in the C-language.

The attributes of this element describe the category and the detailed properties of the target which is either a data description or a function signature.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwPointerTargetProps"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SW-POINTER-TARGET-PROPS"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:simpleType name="APPLICATION-PRIMITIVE-DATA-TYPE--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="APPLICATION-PRIMITIVE-DATA-TYPE"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class DataElements::AutosarVariableRef -->
   <xsd:group name="AUTOSAR-VARIABLE-REF">
      <xsd:annotation>
         <xsd:documentation>This class represents a reference to a variable within AUTOSAR which can be one of the following use cases:

localVariable:

* localVariable which is used as whole (e.g. InterRunnableVariable, inputValue for curve)

autosarVariable:

* a variable provided via Port which is used as whole (e.g. dataAccesspoints)

* an element inside of a composite local variable typed by ApplicationDatatype (e.g. inputValue for a curve)

* an element inside of a composite variable provided via Port and typed by ApplicationDatatype (e.g. inputValue for a curve)

autosarVariableInImplDatatype:

* an element inside of a composite local variable typed by ImplementationDatatype  (e.g. nvramData mapping)

* an element inside of a composite variable provided via Port and typed by ImplementationDatatype (e.g. inputValue for a curve)</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AutosarVariableRef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="AUTOSAR-VARIABLE-IN-IMPL-DATATYPE" type="AR:AR-VARIABLE-IN-IMPLEMENTATION-DATA-INSTANCE-REF">
            <xsd:annotation>
               <xsd:documentation>This is used if the target variable is inside of variableDataPrototype typed by an ImplementationDataType.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AutosarVariableRef.autosarVariableInImplDatatype";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="AUTOSAR-VARIABLE-IREF" type="AR:VARIABLE-IN-ATOMIC-SWC-TYPE-INSTANCE-REF">
            <xsd:annotation>
               <xsd:documentation>This references a variable which is provided by a port and/or which is part of a CompositeDataType.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AutosarVariableRef.autosarVariable";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="LOCAL-VARIABLE-REF">
            <xsd:annotation>
               <xsd:documentation>This reference is used if the variable is local to the current component. It would also be possible to use the instance refence here.
Such an instance ref would not have a contextElement, since the current instance is the context.
But the local instance is a special case which may provide further optimization. Therefore an expclicit reference is provided for this case.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AutosarVariableRef.localVariable";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:VARIABLE-DATA-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class DataElements::AutosarVariableRef -->
   <xsd:complexType abstract="false" mixed="false" name="AUTOSAR-VARIABLE-REF">
      <xsd:annotation>
         <xsd:documentation>This class represents a reference to a variable within AUTOSAR which can be one of the following use cases:

localVariable:

* localVariable which is used as whole (e.g. InterRunnableVariable, inputValue for curve)

autosarVariable:

* a variable provided via Port which is used as whole (e.g. dataAccesspoints)

* an element inside of a composite local variable typed by ApplicationDatatype (e.g. inputValue for a curve)

* an element inside of a composite variable provided via Port and typed by ApplicationDatatype (e.g. inputValue for a curve)

autosarVariableInImplDatatype:

* an element inside of a composite local variable typed by ImplementationDatatype  (e.g. nvramData mapping)

* an element inside of a composite variable provided via Port and typed by ImplementationDatatype (e.g. inputValue for a curve)</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AutosarVariableRef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:AUTOSAR-VARIABLE-REF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <xsd:simpleType name="MODE-DECLARATION--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="MODE-DECLARATION"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class DataElements::AutosarParameterRef -->
   <xsd:group name="AUTOSAR-PARAMETER-REF">
      <xsd:annotation>
         <xsd:documentation>This class represents a reference to a parameter within AUTOSAR which can be one of the following use cases:

localParameter:

* localParameter which is used as whole (e.g.  sharedAxis for curve)

autosarVariable:

* a parameter provided via PortPrototype which is used as whole (e.g. parameterAccess)

* an element inside of a composite local parameter typed by ApplicationDatatype (e.g. sharedAxis for a curve)

* an element inside of a composite parameter provided via Port and typed by ApplicationDatatype (e.g. sharedAxis for a curve)

autosarParameterInImplDatatype:

* an element inside of a composite local parameter typed by ImplementationDatatype

* an element inside of a composite parameter provided via PortPrototype and typed by ImplementationDatatype</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AutosarParameterRef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="AUTOSAR-PARAMETER-IREF" type="AR:PARAMETER-IN-ATOMIC-SWC-TYPE-INSTANCE-REF">
            <xsd:annotation>
               <xsd:documentation>This instance reference is used if the callibration parameter is either imported via a port or is part of a composite data structure.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AutosarParameterRef.autosarParameter";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="LOCAL-PARAMETER-REF">
            <xsd:annotation>
               <xsd:documentation>In the majority of cases this reference goes to ParameterDataPrototyoes rather than VariableDataPrototypes. Pointing the reference to a VariableDataPrototype is limited to special use cases, e.g. if the AutosarParameterRef is used in the context of an SwAxisGrouped.

This reference is used if the arParameter is local to the current component. 

Of course, it would technically also be feasible to use an InstanceRef for this case. However, the InstanceRef would not have a contextElement (because the cureent instance is the context).

Hence, the local instance is a special case which may provide further optimization. Therefore an explicit reference is provided for this case.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AutosarParameterRef.localParameter";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:DATA-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class DataElements::AutosarParameterRef -->
   <xsd:complexType abstract="false" mixed="false" name="AUTOSAR-PARAMETER-REF">
      <xsd:annotation>
         <xsd:documentation>This class represents a reference to a parameter within AUTOSAR which can be one of the following use cases:

localParameter:

* localParameter which is used as whole (e.g.  sharedAxis for curve)

autosarVariable:

* a parameter provided via PortPrototype which is used as whole (e.g. parameterAccess)

* an element inside of a composite local parameter typed by ApplicationDatatype (e.g. sharedAxis for a curve)

* an element inside of a composite parameter provided via Port and typed by ApplicationDatatype (e.g. sharedAxis for a curve)

autosarParameterInImplDatatype:

* an element inside of a composite local parameter typed by ImplementationDatatype

* an element inside of a composite parameter provided via PortPrototype and typed by ImplementationDatatype</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AutosarParameterRef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:AUTOSAR-PARAMETER-REF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:simpleType name="PER-INSTANCE-MEMORY--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="PER-INSTANCE-MEMORY"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class Constants::NumericalOrText -->
   <xsd:group name="NUMERICAL-OR-TEXT">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to yield either a numerical or a string. A typical use case is that two or more instances of this meta-class are aggregated with a VariationPoint where some instances yield strings while other instances yield numerical depending on the resolution of the binding expression.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="NumericalOrText"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="VF" type="AR:NUMERICAL-VALUE-VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This attribute represents the ability to provide a numerical value. The latest binding time of the VariationPoint shall be preCompileTime.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="NumericalOrText.vf";pureMM.maxOccurs="1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="10"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VT" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>This attribute represents the ability to provide a textual value.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="NumericalOrText.vt";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="NumericalOrText.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Constants::NumericalOrText -->
   <xsd:complexType abstract="false" mixed="false" name="NUMERICAL-OR-TEXT">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to yield either a numerical or a string. A typical use case is that two or more instances of this meta-class are aggregated with a VariationPoint where some instances yield strings while other instances yield numerical depending on the resolution of the binding expression.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="NumericalOrText"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:NUMERICAL-OR-TEXT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class CalibrationValue::ValueGroup -->
   <xsd:group name="VALUE-GROUP">
      <xsd:annotation>
         <xsd:documentation>This element enables valules  to be grouped. It can be used to perform row and column-orientated groupings, so that these can be rendered properly e.g. as a table.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ValueGroup"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="LABEL" type="AR:MULTILANGUAGE-LONG-NAME">
            <xsd:annotation>
               <xsd:documentation>This label allows to give the valueGroup a partiluclar name. It can be usel if the Values are rendered as a table.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ValueGroup.label";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:choice maxOccurs="1" minOccurs="0">
            <xsd:group ref="AR:SW-VALUES"/>
         </xsd:choice>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class CalibrationValue::ValueGroup -->
   <xsd:complexType abstract="false" mixed="false" name="VALUE-GROUP">
      <xsd:annotation>
         <xsd:documentation>This element enables valules  to be grouped. It can be used to perform row and column-orientated groupings, so that these can be rendered properly e.g. as a table.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ValueGroup"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:VALUE-GROUP"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class CalibrationParameter::SwCalprmAxis -->
   <xsd:group name="SW-CALPRM-AXIS">
      <xsd:annotation>
         <xsd:documentation>This element specifies an individual input parameter axis (abscissa).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwCalprmAxis"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-AXIS-INDEX" type="AR:AXIS-INDEX-TYPE">
            <xsd:annotation>
               <xsd:documentation>This attribute specifies which axis is specified by the containing SwCalprmAxis.

For example in a curve this is usually "1". In a map this is "1" or "2".</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwCalprmAxis.swAxisIndex";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="CATEGORY" type="AR:CALPRM-AXIS-CATEGORY-ENUM">
            <xsd:annotation>
               <xsd:documentation>This property specifies the category of a particular axis.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwCalprmAxis.category";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:choice maxOccurs="1" minOccurs="0">
            <xsd:element name="SW-AXIS-GROUPED" type="AR:SW-AXIS-GROUPED"/>
            <xsd:element name="SW-AXIS-INDIVIDUAL" type="AR:SW-AXIS-INDIVIDUAL"/>
         </xsd:choice>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-CALIBRATION-ACCESS" type="AR:SW-CALIBRATION-ACCESS-ENUM">
            <xsd:annotation>
               <xsd:documentation>Describes the applicability of parameters and variables.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwCalprmAxis.swCalibrationAccess";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="90"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="DISPLAY-FORMAT" type="AR:DISPLAY-FORMAT-STRING">
            <xsd:annotation>
               <xsd:documentation>This property specifies how the axis values shall be displayed e.g. in documents or in measurement and calibration tools.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwCalprmAxis.displayFormat";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="100"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="BASE-TYPE-REF">
            <xsd:annotation>
               <xsd:documentation>The SwBaseType to be used for the axis. Note that this is not applicable for ApplicationDataTypes. The value shall be ignored.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="SwCalprmAxis.baseType";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="110"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:SW-BASE-TYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class CalibrationParameter::SwCalprmAxis -->
   <xsd:complexType abstract="false" mixed="false" name="SW-CALPRM-AXIS">
      <xsd:annotation>
         <xsd:documentation>This element specifies an individual input parameter axis (abscissa).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwCalprmAxis"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SW-CALPRM-AXIS"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <xsd:complexType name="ARRAY-SIZE-SEMANTICS-ENUM">
      <xsd:annotation>
         <xsd:documentation>This type controls how the information about the number of elements in an ApplicationArrayDataType is to be interpreted.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ArraySizeSemanticsEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ARRAY-SIZE-SEMANTICS-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="ARRAY-SIZE-SEMANTICS-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="FIXED-SIZE">
            <xsd:annotation>
               <xsd:documentation>This means that the ApplicationArrayDataType will always have a fixed number of elements.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ArraySizeSemanticsEnum.fixedSize"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VARIABLE-SIZE">
            <xsd:annotation>
               <xsd:documentation>This implies that the actual number of elements in the ApplicationArrayDataType might vary at run-time. The value of arraySize represents the maximum number of elements in the array.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ArraySizeSemanticsEnum.variableSize"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="MC-DATA-INSTANCE--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="MC-DATA-INSTANCE"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class ComputationMethod::CompuGenericMath -->
   <xsd:group name="COMPU-GENERIC-MATH">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to specify a generic formula expression.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CompuGenericMath"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- attribute group for class ComputationMethod::CompuGenericMath -->
   <xsd:attributeGroup name="COMPU-GENERIC-MATH">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to specify a generic formula expression.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CompuGenericMath"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="LEVEL" type="AR:PRIMITIVE-IDENTIFIER--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Placeholder to describe an indicator of a language level for the mathematics e.g. INFORMAL, ASAMHDO.
May be refined by particular use-cases.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="CompuGenericMath.level";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
   <!-- complex type for class ComputationMethod::CompuGenericMath -->
   <xsd:complexType abstract="false" mixed="true" name="COMPU-GENERIC-MATH">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to specify a generic formula expression.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CompuGenericMath"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixedString,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:FORMULA-EXPRESSION"/>
         <xsd:group ref="AR:COMPU-GENERIC-MATH"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:COMPU-GENERIC-MATH"/>
   </xsd:complexType>
<!-- element group for class DataDefProperties::SwDataDependencyArgs -->
   <xsd:group name="SW-DATA-DEPENDENCY-ARGS">
      <xsd:annotation>
         <xsd:documentation>This element specifies the elements used in a SwDataDependency.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDependencyArgs"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixed,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice>
         <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:choice maxOccurs="unbounded" minOccurs="0">
               <xsd:group ref="AR:SW-CALPRM-REF-PROXY"/>
            </xsd:choice>
            <xsd:choice maxOccurs="unbounded" minOccurs="0">
               <xsd:group ref="AR:SW-VARIABLE-REF-PROXY"/>
            </xsd:choice>
         </xsd:choice>
      </xsd:choice>
   </xsd:group>
   <!-- complex type for class DataDefProperties::SwDataDependencyArgs -->
   <xsd:complexType abstract="false" mixed="false" name="SW-DATA-DEPENDENCY-ARGS">
      <xsd:annotation>
         <xsd:documentation>This element specifies the elements used in a SwDataDependency.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwDataDependencyArgs"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpMixed,atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:choice maxOccurs="unbounded" minOccurs="0">
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SW-DATA-DEPENDENCY-ARGS"/>
      </xsd:choice>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class DataElements::ArVariableInImplementationDataInstanceRef -->
   <xsd:group name="AR-VARIABLE-IN-IMPLEMENTATION-DATA-INSTANCE-REF">
      <xsd:annotation>
         <xsd:documentation>This class represents the ability to navigate into a data element inside of an VariableDataPrototype which is typed  by an ImplementationDatatype.

Note that it shall not be used if the target is the VariableDataPrototype itself (e.g. if its a primitive).

Note that this class follows the pattern of an InstanceRef but is not implemented based on the abstract classes because the ImplementationDataType isn't either, especially because ImplementationDataTypeElement isn't derived from AtpPrototype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ArVariableInImplementationDataInstanceRef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="PORT-PROTOTYPE-REF">
            <xsd:annotation>
               <xsd:documentation>This is the port providing/receiving the root of the variable</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ArVariableInImplementationDataInstanceRef.portPrototype";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:PORT-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ROOT-VARIABLE-DATA-PROTOTYPE-REF">
            <xsd:annotation>
               <xsd:documentation>This refers to the variableDataPrototype which is typed by the implementationDatatype in which which the target can be found.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ArVariableInImplementationDataInstanceRef.rootVariableDataPrototype";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:VARIABLE-DATA-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="CONTEXT-DATA-PROTOTYPE-REFS">
            <xsd:annotation>
               <xsd:documentation>This is a context in case there are subelements with explicit types. The reference has to be ordered to properly reflect the nested structure.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ArVariableInImplementationDataInstanceRef.contextDataPrototype";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="CONTEXT-DATA-PROTOTYPE-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:IMPLEMENTATION-DATA-TYPE-ELEMENT--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TARGET-DATA-PROTOTYPE-REF">
            <xsd:annotation>
               <xsd:documentation>This is a context in case there are subelements with explicit types.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ArVariableInImplementationDataInstanceRef.targetDataPrototype";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="40"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:IMPLEMENTATION-DATA-TYPE-ELEMENT--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class DataElements::ArVariableInImplementationDataInstanceRef -->
   <xsd:complexType abstract="false" mixed="false" name="AR-VARIABLE-IN-IMPLEMENTATION-DATA-INSTANCE-REF">
      <xsd:annotation>
         <xsd:documentation>This class represents the ability to navigate into a data element inside of an VariableDataPrototype which is typed  by an ImplementationDatatype.

Note that it shall not be used if the target is the VariableDataPrototype itself (e.g. if its a primitive).

Note that this class follows the pattern of an InstanceRef but is not implemented based on the abstract classes because the ImplementationDataType isn't either, especially because ImplementationDataTypeElement isn't derived from AtpPrototype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ArVariableInImplementationDataInstanceRef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:AR-VARIABLE-IN-IMPLEMENTATION-DATA-INSTANCE-REF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class InstanceRefsUsage::VariableInAtomicSWCTypeInstanceRef -->
   <xsd:group name="VARIABLE-IN-ATOMIC-SWC-TYPE-INSTANCE-REF">
      <xsd:annotation>
         <xsd:appinfo source="tags">mmt.qualifiedName="VariableInAtomicSWCTypeInstanceRef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject,instanceRef</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <!-- Association <<atpDerived>>base skipped -->
         <xsd:element maxOccurs="1" minOccurs="0" name="PORT-PROTOTYPE-REF">
            <xsd:annotation>
               <xsd:documentation>This is the port providing the paramter or the entry point to the parameter structure.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="VariableInAtomicSWCTypeInstanceRef.portPrototype";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:PORT-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ROOT-VARIABLE-DATA-PROTOTYPE-REF">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="VariableInAtomicSWCTypeInstanceRef.rootVariableDataPrototype";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:VARIABLE-DATA-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="CONTEXT-DATA-PROTOTYPE-REF">
            <xsd:annotation>
               <xsd:documentation>This ist the context in a compositeDataType.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="VariableInAtomicSWCTypeInstanceRef.contextDataPrototype";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.sequenceOffset="40"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:APPLICATION-COMPOSITE-ELEMENT-DATA-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TARGET-DATA-PROTOTYPE-REF">
            <xsd:annotation>
               <xsd:documentation>This is the target of the instance ref. Note that it shall be one of ApplicationCompositeElementDataPrototype of VariableDataPrototype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="VariableInAtomicSWCTypeInstanceRef.targetDataPrototype";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="50"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:DATA-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class InstanceRefsUsage::VariableInAtomicSWCTypeInstanceRef -->
   <xsd:complexType abstract="false" mixed="false" name="VARIABLE-IN-ATOMIC-SWC-TYPE-INSTANCE-REF">
      <xsd:annotation>
         <xsd:appinfo source="tags">mmt.qualifiedName="VariableInAtomicSWCTypeInstanceRef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject,instanceRef</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ATP-INSTANCE-REF"/>
         <xsd:group ref="AR:VARIABLE-IN-ATOMIC-SWC-TYPE-INSTANCE-REF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class DatadictionaryProxies::SwCalprmRefProxy -->
   <xsd:group name="SW-CALPRM-REF-PROXY">
      <xsd:annotation>
         <xsd:documentation>Wrapper class for different kinds of references to a calibration parameter.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwCalprmRefProxy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="AR-PARAMETER" type="AR:AUTOSAR-PARAMETER-REF">
            <xsd:annotation>
               <xsd:documentation>This represents a Parameter within AUTOSAR. Note that the Datatype of the referenced ParameterDataPrototype shall be an ApplicationDataType of category VALUE.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwCalprmRefProxy.arParameter";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MC-DATA-INSTANCE-REF">
            <xsd:annotation>
               <xsd:documentation>This reference is used in the McSupport file to express the final instance of group axis etc. It is not allowed to use this outside of an McDataInstance.

The referenced mcDataInstance shall be originated from a ParameterDataPrototype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwCalprmRefProxy.mcDataInstance";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:MC-DATA-INSTANCE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class DatadictionaryProxies::SwCalprmRefProxy -->
   <xsd:complexType abstract="false" mixed="false" name="SW-CALPRM-REF-PROXY">
      <xsd:annotation>
         <xsd:documentation>Wrapper class for different kinds of references to a calibration parameter.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwCalprmRefProxy"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SW-CALPRM-REF-PROXY"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class InstanceRefsUsage::ParameterInAtomicSWCTypeInstanceRef -->
   <xsd:group name="PARAMETER-IN-ATOMIC-SWC-TYPE-INSTANCE-REF">
      <xsd:annotation>
         <xsd:documentation>This class implements an instance reference which can be applied for variables as well as for parameters.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ParameterInAtomicSWCTypeInstanceRef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject,instanceRef</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <!-- Association <<atpDerived>>base skipped -->
         <xsd:element maxOccurs="1" minOccurs="0" name="PORT-PROTOTYPE-REF">
            <xsd:annotation>
               <xsd:documentation>This is the port providing the variable or the entry point to the variable structure.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ParameterInAtomicSWCTypeInstanceRef.portPrototype";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:PORT-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ROOT-PARAMETER-DATA-PROTOTYPE-REF">
            <xsd:annotation>
               <xsd:documentation>This represents the entry point for references into a CompositeDataType.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ParameterInAtomicSWCTypeInstanceRef.rootParameterDataPrototype";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:DATA-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="CONTEXT-DATA-PROTOTYPE-REF">
            <xsd:annotation>
               <xsd:documentation>This ist the context in a compositeDataType.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ParameterInAtomicSWCTypeInstanceRef.contextDataPrototype";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.sequenceOffset="40"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:APPLICATION-COMPOSITE-ELEMENT-DATA-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TARGET-DATA-PROTOTYPE-REF">
            <xsd:annotation>
               <xsd:documentation>This is the target of the instance ref</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ParameterInAtomicSWCTypeInstanceRef.targetDataPrototype";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="50"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:DATA-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class InstanceRefsUsage::ParameterInAtomicSWCTypeInstanceRef -->
   <xsd:complexType abstract="false" mixed="false" name="PARAMETER-IN-ATOMIC-SWC-TYPE-INSTANCE-REF">
      <xsd:annotation>
         <xsd:documentation>This class implements an instance reference which can be applied for variables as well as for parameters.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ParameterInAtomicSWCTypeInstanceRef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject,instanceRef</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ATP-INSTANCE-REF"/>
         <xsd:group ref="AR:PARAMETER-IN-ATOMIC-SWC-TYPE-INSTANCE-REF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class Axis::SwAxisGrouped -->
   <xsd:group name="SW-AXIS-GROUPED">
      <xsd:annotation>
         <xsd:documentation>An SwAxisGrouped is an axis which is shared between multiple calibration parameters.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisGrouped"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="SHARED-AXIS-TYPE-REF">
            <xsd:annotation>
               <xsd:documentation>This is the datatype of the calibration parameter providing the shared axis.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisGrouped.sharedAxisType";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:APPLICATION-PRIMITIVE-DATA-TYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-AXIS-INDEX" type="AR:AXIS-INDEX-TYPE">
            <xsd:annotation>
               <xsd:documentation>Describes which axis of the referenced calibration parameter provides the values for the group axis.
The index satisfies the following convention:

* 0 = value axis. in this case, the interpolation result of the referenced parameter is used as a base point index. This means that the A2L keyword CURVE_AXIS_REF can be supported.
* The index should only be specified if the parameter under swCalprm contains more than one axis. It is standard practice for the axis index of parameters with more than one axis, to be set to 1, if data has not been assigned to swAxisIndex.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisGrouped.swAxisIndex";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:choice maxOccurs="1" minOccurs="0">
            <xsd:group ref="AR:SW-CALPRM-REF-PROXY"/>
         </xsd:choice>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Axis::SwAxisGrouped -->
   <xsd:complexType abstract="false" mixed="false" name="SW-AXIS-GROUPED">
      <xsd:annotation>
         <xsd:documentation>An SwAxisGrouped is an axis which is shared between multiple calibration parameters.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisGrouped"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SW-CALPRM-AXIS-TYPE-PROPS"/>
         <xsd:group ref="AR:SW-AXIS-GROUPED"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class Axis::SwAxisIndividual -->
   <xsd:group name="SW-AXIS-INDIVIDUAL">
      <xsd:annotation>
         <xsd:documentation>This meta-class describes an axis integrated into a parameter (field etc.). The integration makes this individual to each parameter. The so-called grouped axis represents the counterpart to this. It is conceived as an independent parameter (see class SwAxisGrouped).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisIndividual"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="INPUT-VARIABLE-TYPE-REF">
            <xsd:annotation>
               <xsd:documentation>This is the datatype of the input value for the axis. This allows to define e.g. a type of curve, where the input value is finalized at the access point.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisIndividual.inputVariableType";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:APPLICATION-PRIMITIVE-DATA-TYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-VARIABLE-REFS">
            <xsd:annotation>
               <xsd:documentation>Refers to input variables of the axis. It is possible to specify more than one variable. Here the following is valid:

* The variable with the highest priority shall be given first. It is used in the generation of the code and is also displayed first in the application system.

* All variables referenced shall be of the same physical nature. This is usually detected in that the conversion formulae affected refer back to the same SI-units.
In AUTOSAR this ensured by the constraint, that the referenced input variables shall use a type compatible to "inputVariableType".

* This multiple referencing allows a base point distribution for more than one input variable to be used. One example of this are the temperature curves which can depend both on the induction air temperature and the engine temperature.

These variables can be displayed simultaneously by MCD systems (adjustment systems), enabling operating points to be shown in the curves.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisIndividual.swVariableRef";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.roleElement="false";xml.roleWrapperElement="true";xml.sequenceOffset="20";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:group ref="AR:SW-VARIABLE-REF-PROXY"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="COMPU-METHOD-REF">
            <xsd:annotation>
               <xsd:documentation>This is the compuMethod which is expected for the axis. It is used in early stages if the particular input-value is not yet available.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisIndividual.compuMethod";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:COMPU-METHOD--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="UNIT-REF">
            <xsd:annotation>
               <xsd:documentation>This represents the physical unit of the input value of the axis. It is provided to support the case that the particular input variable is not yet known.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisIndividual.unit";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="40"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:UNIT--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-MAX-AXIS-POINTS" type="AR:INTEGER-VALUE-VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>Maximum number of base points contained in the axis of a map or curve.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisIndividual.swMaxAxisPoints";pureMM.maxOccurs="1";pureMM.minOccurs="1";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="60"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-MIN-AXIS-POINTS" type="AR:INTEGER-VALUE-VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>Minimum number of base points contained in the axis of a map or curve.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisIndividual.swMinAxisPoints";pureMM.maxOccurs="1";pureMM.minOccurs="1";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="70"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="DATA-CONSTR-REF">
            <xsd:annotation>
               <xsd:documentation>Refers to constraints, e.g. for plausibility checks.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisIndividual.dataConstr";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="80"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:DATA-CONSTR--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-AXIS-GENERIC" type="AR:SW-AXIS-GENERIC">
            <xsd:annotation>
               <xsd:documentation>this specifies the properties of a generic axis if applicable.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisIndividual.swAxisGeneric";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="90"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Axis::SwAxisIndividual -->
   <xsd:complexType abstract="false" mixed="false" name="SW-AXIS-INDIVIDUAL">
      <xsd:annotation>
         <xsd:documentation>This meta-class describes an axis integrated into a parameter (field etc.). The integration makes this individual to each parameter. The so-called grouped axis represents the counterpart to this. It is conceived as an independent parameter (see class SwAxisGrouped).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisIndividual"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SW-CALPRM-AXIS-TYPE-PROPS"/>
         <xsd:group ref="AR:SW-AXIS-INDIVIDUAL"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:simpleType name="PORT-PROTOTYPE--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ABSTRACT-PROVIDED-PORT-PROTOTYPE"/>
         <xsd:enumeration value="ABSTRACT-REQUIRED-PORT-PROTOTYPE"/>
         <xsd:enumeration value="P-PORT-PROTOTYPE"/>
         <xsd:enumeration value="PR-PORT-PROTOTYPE"/>
         <xsd:enumeration value="PORT-PROTOTYPE"/>
         <xsd:enumeration value="R-PORT-PROTOTYPE"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="IMPLEMENTATION-DATA-TYPE-ELEMENT--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="IMPLEMENTATION-DATA-TYPE-ELEMENT"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="APPLICATION-COMPOSITE-ELEMENT-DATA-PROTOTYPE--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="APPLICATION-ARRAY-ELEMENT"/>
         <xsd:enumeration value="APPLICATION-COMPOSITE-ELEMENT-DATA-PROTOTYPE"/>
         <xsd:enumeration value="APPLICATION-RECORD-ELEMENT"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class CalibrationParameter::SwCalprmAxisTypeProps -->
   <xsd:group name="SW-CALPRM-AXIS-TYPE-PROPS">
      <xsd:annotation>
         <xsd:documentation>Base class for the type of the calibration axis. This provides the particular model of the specialization. If the specialization would be the directly from SwCalPrmAxis, the sequence of common properties and the specializes ones would be different.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwCalprmAxisTypeProps"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
 <!-- element group for class Axis::SwAxisGeneric -->
   <xsd:group name="SW-AXIS-GENERIC">
      <xsd:annotation>
         <xsd:documentation>This meta-class defines a generic axis. In a generic axis the axispoints points are calculated in the ECU. 

The ECU is equipped with a fixed calculation algorithm. Parameters for the algorithm can be stored in the data component of the ECU. Therefore these parameters are specified in the data declaration, not in the calibration data.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisGeneric"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-AXIS-TYPE-REF">
            <xsd:annotation>
               <xsd:documentation>Associated axis calculation strategy.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisGeneric.swAxisType";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:SW-AXIS-TYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-NUMBER-OF-AXIS-POINTS" type="AR:INTEGER-VALUE-VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>The number of base points to be calculated for this axis. This element exists to enable the number of axis points to be stored explicitly, although it could also be described as swGenericAxisParam.

This attribute has been deprecated, note that the value of SwAxisIndividual.swMaxAxisPoints shall be taken instead.

In case of a generated axis, the number of axis points to be  generated shall be taken from SwAxisIndividual.swMaxAxisPoints.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="SwAxisGeneric.swNumberOfAxisPoints";pureMM.maxOccurs="1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-GENERIC-AXIS-PARAMS">
            <xsd:annotation>
               <xsd:documentation>Specific parameter of a generic axis.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisGeneric.swGenericAxisParam";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.roleElement="true";xml.roleWrapperElement="true";xml.sequenceOffset="40";xml.typeElement="false";xml.typeWrapperElement="false"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="SW-GENERIC-AXIS-PARAM" type="AR:SW-GENERIC-AXIS-PARAM"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Axis::SwAxisGeneric -->
   <xsd:complexType abstract="false" mixed="false" name="SW-AXIS-GENERIC">
      <xsd:annotation>
         <xsd:documentation>This meta-class defines a generic axis. In a generic axis the axispoints points are calculated in the ECU. 

The ECU is equipped with a fixed calculation algorithm. Parameters for the algorithm can be stored in the data component of the ECU. Therefore these parameters are specified in the data declaration, not in the calibration data.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwAxisGeneric"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SW-AXIS-GENERIC"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:simpleType name="SW-AXIS-TYPE--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="SW-AXIS-TYPE"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class Axis::SwGenericAxisParam -->
   <xsd:group name="SW-GENERIC-AXIS-PARAM">
      <xsd:annotation>
         <xsd:documentation>This meta-class describes a specific parameter of a generic axis. The name of the parameter is defined through a reference to a parameter type defined on a corresponding axis type.

The value of the parameter is given here in case that it is not changeable during calibration. Example is shift / offset in a fixed axis.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwGenericAxisParam"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-GENERIC-AXIS-PARAM-TYPE-REF">
            <xsd:annotation>
               <xsd:documentation>Parameter type defined on a corresponding axis type. References can only be made to axis parameters types which are defined within the referenced axis type.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwGenericAxisParam.swGenericAxisParamType";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:SW-GENERIC-AXIS-PARAM-TYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="unbounded" minOccurs="0" name="VF" type="AR:NUMERICAL-VALUE-VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This attribute represents the value of the generic axis parameter.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SwGenericAxisParam.vf";pureMM.maxOccurs="-1";pureMM.minOccurs="1";vh.latestBindingTime="preCompileTime";xml.roleElement="true";xml.roleWrapperElement="false";xml.sequenceOffset="30";xml.typeElement="false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Axis::SwGenericAxisParam -->
   <xsd:complexType abstract="false" mixed="false" name="SW-GENERIC-AXIS-PARAM">
      <xsd:annotation>
         <xsd:documentation>This meta-class describes a specific parameter of a generic axis. The name of the parameter is defined through a reference to a parameter type defined on a corresponding axis type.

The value of the parameter is given here in case that it is not changeable during calibration. Example is shift / offset in a fixed axis.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwGenericAxisParam"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SW-GENERIC-AXIS-PARAM"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:simpleType name="SW-GENERIC-AXIS-PARAM-TYPE--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="SW-GENERIC-AXIS-PARAM-TYPE"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class BswImplementation::BswImplementation -->
   <xsd:group name="BSW-IMPLEMENTATION">
      <xsd:annotation>
         <xsd:documentation>Contains the implementation specific information in addition to the generic specification (BswModuleDescription and BswBehavior).
It is possible to have several different BswImplementations referring to the same BswBehavior.</xsd:documentation>
         <xsd:appinfo source="tags">atp.recommendedPackage="BswImplementations";mmt.qualifiedName="BswImplementation"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="AR-RELEASE-VERSION" type="AR:REVISION-LABEL-STRING">
            <xsd:annotation>
               <xsd:documentation>Version of the AUTOSAR Release on which this implementation is based. The numbering contains three levels (major, minor, revision) which are defined by AUTOSAR.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswImplementation.arReleaseVersion";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="BEHAVIOR-REF">
            <xsd:annotation>
               <xsd:documentation>The behavior of this implementation.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswImplementation.behavior";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:BSW-INTERNAL-BEHAVIOR--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="DEBUG-INFOS">
            <xsd:annotation>
               <xsd:documentation>Collects the debug info for this implementation.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswImplementation.debugInfo";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BSW-DEBUG-INFO" type="AR:BSW-DEBUG-INFO"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="PRECONFIGURED-CONFIGURATION-REFS">
            <xsd:annotation>
               <xsd:documentation>Reference to the set of preconfigured (i.e. fixed) configuration values for this BswImplementation.

If the BswImplementation represents a cluster of several modules, more than one EcucModuleConfigurationValues element can be referred (at most one per module), otherwise at most one such element can be referred.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswImplementation.preconfiguredConfiguration";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.roleWrapperElement="true"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="PRECONFIGURED-CONFIGURATION-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:ECUC-MODULE-CONFIGURATION-VALUES--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="RECOMMENDED-CONFIGURATION-REFS">
            <xsd:annotation>
               <xsd:documentation>Reference to one or more sets of recommended configuration values for this module or module cluster.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswImplementation.recommendedConfiguration";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="RECOMMENDED-CONFIGURATION-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:ECUC-MODULE-CONFIGURATION-VALUES--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VENDOR-API-INFIX" type="AR:IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>In driver modules which can be instantiated several times on a single ECU, SRS_BSW_00347 requires that the names of files, APIs, published parameters and memory allocation keywords are extended by the vendorId and a vendor specific name. 
This parameter is used to specify the vendor specific name. In total, the implementation specific API name is generated as follows:
&amp;lt;ModuleName&amp;gt;_&amp;lt;vendorId&amp;gt;_ &amp;lt;vendorApiInfix&amp;gt;_&amp;lt;API name from SWS&amp;gt;.

E.g.  assuming that the vendorId of the implementer is 123 and the implementer chose a vendorApiInfix of "v11r456" an API name Can_Write defined in the SWS will translate to Can_123_v11r456_Write. 

This attribute is mandatory for all modules with upper multiplicity &amp;gt; 1. It shall not be used for modules with upper multiplicity =1.

See also SWS_BSW_00102.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswImplementation.vendorApiInfix";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VENDOR-SPECIFIC-MODULE-DEF-REFS">
            <xsd:annotation>
               <xsd:documentation>Reference to 

* the vendor specific EcucModuleDef used in this BswImplementation if it represents a single module

* several EcucModuleDefs used in this BswImplementation if it  represents a cluster of modules

* one or no EcucModuleDefs used in this BswImplementation if it represents a library</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswImplementation.vendorSpecificModuleDef";pureMM.maxOccurs="-1";pureMM.minOccurs="0";xml.roleWrapperElement="true"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="VENDOR-SPECIFIC-MODULE-DEF-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:ECUC-MODULE-DEF--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswImplementation::BswImplementation -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-IMPLEMENTATION">
      <xsd:annotation>
         <xsd:documentation>Contains the implementation specific information in addition to the generic specification (BswModuleDescription and BswBehavior).
It is possible to have several different BswImplementations referring to the same BswBehavior.</xsd:documentation>
         <xsd:appinfo source="tags">atp.recommendedPackage="BswImplementations";mmt.qualifiedName="BswImplementation"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:COLLECTABLE-ELEMENT"/>
         <xsd:group ref="AR:PACKAGEABLE-ELEMENT"/>
         <xsd:group ref="AR:AR-ELEMENT"/>
         <xsd:group ref="AR:IMPLEMENTATION"/>
         <xsd:group ref="AR:BSW-IMPLEMENTATION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
   <xsd:simpleType name="BSW-IMPLEMENTATION--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BSW-IMPLEMENTATION"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class Implementation::Implementation -->
   <xsd:group name="IMPLEMENTATION">
      <xsd:annotation>
         <xsd:documentation>Description of an implementation a single software component or module.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Implementation"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="BUILD-ACTION-MANIFESTS">
            <xsd:annotation>
               <xsd:documentation>A manifest specifying the intended build
actions for the software delivered with this implementation.
This property was modified due to atpVariation (DirectedAssociationPattern).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Implementation.buildActionManifest";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="codeGenerationTime"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="BUILD-ACTION-MANIFEST-REF-CONDITIONAL" type="AR:BUILD-ACTION-MANIFEST-REF-CONDITIONAL"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="CODE-DESCRIPTORS">
            <xsd:annotation>
               <xsd:documentation>Specifies the provided implementation code.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Implementation.codeDescriptor";pureMM.maxOccurs="-1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="CODE" type="AR:CODE"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="COMPILERS">
            <xsd:annotation>
               <xsd:documentation>Specifies the compiler for which this implementation has been released</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Implementation.compiler";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="COMPILER" type="AR:COMPILER"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="GENERATED-ARTIFACTS">
            <xsd:annotation>
               <xsd:documentation>Relates to an artifact that will be generated during the integration of this Implementation by an associated generator tool. Note that this is an optional information since it might  not always be in the scope of a single module or component  to provide this information.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Implementation.generatedArtifact";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="DEPENDENCY-ON-ARTIFACT" type="AR:DEPENDENCY-ON-ARTIFACT"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="HW-ELEMENT-REFS">
            <xsd:annotation>
               <xsd:documentation>The hardware elements (e.g. the processor) required for this implementation.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Implementation.hwElement";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="HW-ELEMENT-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:HW-ELEMENT--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="LINKERS">
            <xsd:annotation>
               <xsd:documentation>Specifies the linker for which this implementation has been released.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Implementation.linker";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="LINKER" type="AR:LINKER"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MC-SUPPORT" type="AR:MC-SUPPORT-DATA">
            <xsd:annotation>
               <xsd:documentation>The measurement &amp; calibration support data belonging to this implementation. The aggregtion is &lt;&lt;atpSplitable&gt;&gt; because in case of an already exisiting BSW Implementation model, this description will be added later in the process, namely at code generation time.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="mcSupport";mmt.qualifiedName="Implementation.mcSupport";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="PROGRAMMING-LANGUAGE" type="AR:PROGRAMMINGLANGUAGE-ENUM">
            <xsd:annotation>
               <xsd:documentation>Programming language the implementation was created in.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Implementation.programmingLanguage";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="REQUIRED-ARTIFACTS">
            <xsd:annotation>
               <xsd:documentation>Specifies that this Implementation depends on the existance of another artifact (e.g. a library). This aggregation of DependencyOnArtifact is subject to variability with the purpose to support variability in the implementations. Different algorithms in the implementation might cause different dependencies, e.g. the number of used libraries.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Implementation.requiredArtifact";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="DEPENDENCY-ON-ARTIFACT" type="AR:DEPENDENCY-ON-ARTIFACT"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="REQUIRED-GENERATOR-TOOLS">
            <xsd:annotation>
               <xsd:documentation>Relates this Implementation to a generator tool in order to generate additional artifacts during integration.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Implementation.requiredGeneratorTool";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="DEPENDENCY-ON-ARTIFACT" type="AR:DEPENDENCY-ON-ARTIFACT"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="RESOURCE-CONSUMPTION" type="AR:RESOURCE-CONSUMPTION">
            <xsd:annotation>
               <xsd:documentation>All static and dynamic resources for each implementation are described  within the ResourceConsumption class.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName";mmt.qualifiedName="Implementation.resourceConsumption";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-VERSION" type="AR:REVISION-LABEL-STRING">
            <xsd:annotation>
               <xsd:documentation>Software version of this implementation. The numbering contains three levels (like major, minor, patch), its values are vendor specific.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Implementation.swVersion";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SWC-BSW-MAPPING-REF">
            <xsd:annotation>
               <xsd:documentation>This allows a mapping between an SWC and  a BSW behavior to be attached to an implementation description (for AUTOSAR Service, ECU Abstraction and Complex Driver Components).  It is up to the methodology to define whether this reference has to be set for the Swc- or BswImplementtion or for both.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Implementation.swcBswMapping";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:SWC-BSW-MAPPING--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="USED-CODE-GENERATOR" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>Optional: code generator used.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Implementation.usedCodeGenerator";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VENDOR-ID" type="AR:POSITIVE-INTEGER">
            <xsd:annotation>
               <xsd:documentation>Vendor ID of this Implementation according to the AUTOSAR vendor list</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Implementation.vendorId";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
 <!-- element group for class BswImplementation::BswDebugInfo -->
   <xsd:group name="BSW-DEBUG-INFO">
      <xsd:annotation>
         <xsd:documentation>Collects the information on the data provided to the AUTOSAR debug module.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswDebugInfo"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="LOCAL-DEBUG-DATAS">
            <xsd:annotation>
               <xsd:documentation>A data element declared locally to this module, cluster or library. It shall be used (within AUTOSAR) only for debugging purposes.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswDebugInfo.localDebugData";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="IMPLEMENTATION-DATA-TYPE-ELEMENT" type="AR:IMPLEMENTATION-DATA-TYPE-ELEMENT"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="PARAMETER-ACCESSED-FOR-DEBUG-REFS">
            <xsd:annotation>
               <xsd:documentation>Indicates a parameter as to be debugged.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswDebugInfo.parameterAccessedForDebug";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="PARAMETER-ACCESSED-FOR-DEBUG-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:PARAMETER-DATA-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIABLE-ACCESSED-FOR-DEBUG-REFS">
            <xsd:annotation>
               <xsd:documentation>Indicates a variable as to be debugged.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswDebugInfo.variableAccessedForDebug";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="VARIABLE-ACCESSED-FOR-DEBUG-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:VARIABLE-DATA-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BswDebugInfo.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BswImplementation::BswDebugInfo -->
   <xsd:complexType abstract="false" mixed="false" name="BSW-DEBUG-INFO">
      <xsd:annotation>
         <xsd:documentation>Collects the information on the data provided to the AUTOSAR debug module.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswDebugInfo"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:BSW-DEBUG-INFO"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class BuildActionManifest::BuildActionManifestRefConditional -->
   <xsd:group name="BUILD-ACTION-MANIFEST-REF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BuildActionManifest"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="BUILD-ACTION-MANIFEST-REF">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BuildActionManifest";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:BUILD-ACTION-MANIFEST--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="BuildActionManifestRefConditional.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class BuildActionManifest::BuildActionManifestRefConditional -->
   <xsd:complexType abstract="false" mixed="false" name="BUILD-ACTION-MANIFEST-REF-CONDITIONAL">
      <xsd:annotation>
         <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BuildActionManifest"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:BUILD-ACTION-MANIFEST-REF-CONDITIONAL"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class Implementation::Code -->
   <xsd:group name="CODE">
      <xsd:annotation>
         <xsd:documentation>A generic code descriptor. The type of the code (source or object) is defined via the category attribute of the associated engineering object.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Code"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ARTIFACT-DESCRIPTORS">
            <xsd:annotation>
               <xsd:documentation>Refers to the artifact belonging to this code descriptor.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Code.artifactDescriptor";pureMM.maxOccurs="-1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="AUTOSAR-ENGINEERING-OBJECT" type="AR:AUTOSAR-ENGINEERING-OBJECT"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="CALLBACK-HEADER-REFS">
            <xsd:annotation>
               <xsd:documentation>The association callbackHeader describes in which header files the function declarations of callback functions are provided to a service module.
With this information the service module can include the appropriate header files in its configuration files.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Code.callbackHeader";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="CALLBACK-HEADER-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:SERVICE-NEEDS--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Implementation::Code -->
   <xsd:complexType abstract="false" mixed="false" name="CODE">
      <xsd:annotation>
         <xsd:documentation>A generic code descriptor. The type of the code (source or object) is defined via the category attribute of the associated engineering object.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Code"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:CODE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class Implementation::Compiler -->
   <xsd:group name="COMPILER">
      <xsd:annotation>
         <xsd:documentation>Specifies the compiler attributes. In case of source code this specifies requirements how the compiler shall be invoked. In case of object code this documents the used compiler settings.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Compiler"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="NAME" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>Compiler name (like gcc).</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Compiler.name";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="OPTIONS" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>Specifies the compiler options.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Compiler.options";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VENDOR" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>Vendor of compiler.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Compiler.vendor";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VERSION" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>Exact version of compiler executable.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Compiler.version";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Implementation::Compiler -->
   <xsd:complexType abstract="false" mixed="false" name="COMPILER">
      <xsd:annotation>
         <xsd:documentation>Specifies the compiler attributes. In case of source code this specifies requirements how the compiler shall be invoked. In case of object code this documents the used compiler settings.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Compiler"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:COMPILER"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class Implementation::DependencyOnArtifact -->
   <xsd:group name="DEPENDENCY-ON-ARTIFACT">
      <xsd:annotation>
         <xsd:documentation>Dependency on the existence of another artifact, e.g. a library.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DependencyOnArtifact"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ARTIFACT-DESCRIPTOR" type="AR:AUTOSAR-ENGINEERING-OBJECT">
            <xsd:annotation>
               <xsd:documentation>The specified artifact needs to exist.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="DependencyOnArtifact.artifactDescriptor";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="USAGES">
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="USAGE" type="AR:DEPENDENCY-USAGE-ENUM">
                     <xsd:annotation>
                        <xsd:documentation>Specification for which process step(s) this dependency is required.</xsd:documentation>
                        <xsd:appinfo source="tags">mmt.qualifiedName="DependencyOnArtifact.usage";pureMM.maxOccurs="-1";pureMM.minOccurs="1"</xsd:appinfo>
                     </xsd:annotation>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="DependencyOnArtifact.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Implementation::DependencyOnArtifact -->
   <xsd:complexType abstract="false" mixed="false" name="DEPENDENCY-ON-ARTIFACT">
      <xsd:annotation>
         <xsd:documentation>Dependency on the existence of another artifact, e.g. a library.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DependencyOnArtifact"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:DEPENDENCY-ON-ARTIFACT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
   
<xsd:simpleType name="HW-ELEMENT--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="HW-ELEMENT"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class Implementation::Linker -->
   <xsd:group name="LINKER">
      <xsd:annotation>
         <xsd:documentation>Specifies the linker attributes used to describe how the linker shall be invoked.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Linker"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="NAME" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>Linker name.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Linker.name";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="OPTIONS" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>Specifies the linker options.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Linker.options";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VENDOR" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>Vendor of linker.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Linker.vendor";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VERSION" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>Exact version of linker executable.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="Linker.version";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class Implementation::Linker -->
   <xsd:complexType abstract="false" mixed="false" name="LINKER">
      <xsd:annotation>
         <xsd:documentation>Specifies the linker attributes used to describe how the linker shall be invoked.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Linker"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:LINKER"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class MeasurementCalibrationSupport::McSupportData -->
   <xsd:group name="MC-SUPPORT-DATA">
      <xsd:annotation>
         <xsd:documentation>Root element for all measurement and calibration support data related to one Implementation artifact on an ECU. There shall be one such element related to the RTE implementation (if it owns MC data) and a separate one for each module or component, which owns private MC data.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="McSupportData"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="EMULATION-SUPPORTS">
            <xsd:annotation>
               <xsd:documentation>Describes the calibration method used by the RTE. This information is not needed for A2L generation, but to setup software emulation in the ECU.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="McSupportData.emulationSupport";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="MC-SW-EMULATION-METHOD-SUPPORT" type="AR:MC-SW-EMULATION-METHOD-SUPPORT"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MC-PARAMETER-INSTANCES">
            <xsd:annotation>
               <xsd:documentation>A data instance to be used for calibration.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="McSupportData.mcParameterInstance";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="postBuild"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="MC-DATA-INSTANCE" type="AR:MC-DATA-INSTANCE"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MC-VARIABLE-INSTANCES">
            <xsd:annotation>
               <xsd:documentation>A data instance to be used for measurement.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="McSupportData.mcVariableInstance";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="postBuild"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="MC-DATA-INSTANCE" type="AR:MC-DATA-INSTANCE"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MEASURABLE-SYSTEM-CONSTANT-VALUES-REFS">
            <xsd:annotation>
               <xsd:documentation>Sets of system constant values to be transferred to the MCD system, because the system constants have been specified with 
"swCalibrationAccess" = readonly.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="McSupportData.measurableSystemConstantValues";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="MEASURABLE-SYSTEM-CONSTANT-VALUES-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:SW-SYSTEMCONSTANT-VALUE-SET--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class MeasurementCalibrationSupport::McSupportData -->
   <xsd:complexType abstract="false" mixed="false" name="MC-SUPPORT-DATA">
      <xsd:annotation>
         <xsd:documentation>Root element for all measurement and calibration support data related to one Implementation artifact on an ECU. There shall be one such element related to the RTE implementation (if it owns MC data) and a separate one for each module or component, which owns private MC data.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="McSupportData"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:MC-SUPPORT-DATA"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:complexType name="PROGRAMMINGLANGUAGE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Programming language the implementation was created in.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ProgramminglanguageEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:PROGRAMMINGLANGUAGE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="PROGRAMMINGLANGUAGE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="C">
            <xsd:annotation>
               <xsd:documentation>C language</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ProgramminglanguageEnum.c"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CPP">
            <xsd:annotation>
               <xsd:documentation>C++ language</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ProgramminglanguageEnum.cpp"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="JAVA">
            <xsd:annotation>
               <xsd:documentation>Java language</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ProgramminglanguageEnum.java"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>

  
<!-- element group for class ResourceConsumption::ResourceConsumption -->
   <xsd:group name="RESOURCE-CONSUMPTION">
      <xsd:annotation>
         <xsd:documentation>Description of consumed resources by one implementation of a software.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ResourceConsumption"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="EXECUTION-TIMES">
            <xsd:annotation>
               <xsd:documentation>Collection of the execution time descriptions for this implementation.
The aggregation of executionTime is subject to variability with the purpose to support the conditional existence of runnable entities.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="ResourceConsumption.executionTime";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ANALYZED-EXECUTION-TIME" type="AR:ANALYZED-EXECUTION-TIME"/>
                  <xsd:element name="MEASURED-EXECUTION-TIME" type="AR:MEASURED-EXECUTION-TIME"/>
                  <xsd:element name="ROUGH-ESTIMATE-OF-EXECUTION-TIME" type="AR:ROUGH-ESTIMATE-OF-EXECUTION-TIME"/>
                  <xsd:element name="SIMULATED-EXECUTION-TIME" type="AR:SIMULATED-EXECUTION-TIME"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="HEAP-USAGES">
            <xsd:annotation>
               <xsd:documentation>Collection of the heap memory allocated by this implementation.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="ResourceConsumption.heapUsage";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="MEASURED-HEAP-USAGE" type="AR:MEASURED-HEAP-USAGE"/>
                  <xsd:element name="ROUGH-ESTIMATE-HEAP-USAGE" type="AR:ROUGH-ESTIMATE-HEAP-USAGE"/>
                  <xsd:element name="WORST-CASE-HEAP-USAGE" type="AR:WORST-CASE-HEAP-USAGE"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MEMORY-SECTIONS">
            <xsd:annotation>
               <xsd:documentation>An abstract memory section required by this Implementation.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="ResourceConsumption.memorySection";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="MEMORY-SECTION" type="AR:MEMORY-SECTION"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SECTION-NAME-PREFIXS">
            <xsd:annotation>
               <xsd:documentation>A prefix to be used for the memory section symbol in the code. 
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ResourceConsumption.sectionNamePrefix";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="SECTION-NAME-PREFIX" type="AR:SECTION-NAME-PREFIX"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="STACK-USAGES">
            <xsd:annotation>
               <xsd:documentation>Collection of the stack memory usage for each runnable entity of this implementation.
The aggregation of StackUsage is subject to variability with the purpose to support the conditional existence of runnable entities.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.Splitkey="shortName, variationPoint.shortLabel";mmt.qualifiedName="ResourceConsumption.stackUsage";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
               <xsd:appinfo source="stereotypes">atpSplitable</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="MEASURED-STACK-USAGE" type="AR:MEASURED-STACK-USAGE"/>
                  <xsd:element name="ROUGH-ESTIMATE-STACK-USAGE" type="AR:ROUGH-ESTIMATE-STACK-USAGE"/>
                  <xsd:element name="WORST-CASE-STACK-USAGE" type="AR:WORST-CASE-STACK-USAGE"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ResourceConsumption::ResourceConsumption -->
   <xsd:complexType abstract="false" mixed="false" name="RESOURCE-CONSUMPTION">
      <xsd:annotation>
         <xsd:documentation>Description of consumed resources by one implementation of a software.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ResourceConsumption"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:RESOURCE-CONSUMPTION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<xsd:simpleType name="SWC-BSW-MAPPING--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="SWC-BSW-MAPPING"/>
      </xsd:restriction>
   </xsd:simpleType>

<!-- element group for class ImplementationDataTypes::ImplementationDataTypeElement -->
   <xsd:group name="IMPLEMENTATION-DATA-TYPE-ELEMENT">
      <xsd:annotation>
         <xsd:documentation>Declares a data object which is locally aggregated. Such an element can only be used within the scope where it is aggregated. 

This element either consists of further subElements or it is further defined via its swDataDefProps.

There are several use cases within the system of ImplementationDataTypes fur such a local declaration:
* It can represent the elements of an array, defining the element type and array size
* It can represent an element of a struct, defining its type
* It can be the local declaration of a debug element.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ImplementationDataTypeElement"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ARRAY-SIZE" type="AR:POSITIVE-INTEGER-VALUE-VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>The existence of this attributes (if bigger than 0) defines the size of an array and declares that this ImplementationDataTypeElement represents the type of each single array element.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ImplementationDataTypeElement.arraySize";pureMM.maxOccurs="1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ARRAY-SIZE-HANDLING" type="AR:ARRAY-SIZE-HANDLING-ENUM">
            <xsd:annotation>
               <xsd:documentation>The way how the size of the array is handled in case of a variable size array.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ImplementationDataTypeElement.arraySizeHandling";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ARRAY-SIZE-SEMANTICS" type="AR:ARRAY-SIZE-SEMANTICS-ENUM">
            <xsd:annotation>
               <xsd:documentation>This attribute controls the meaning of the value of the array size.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ImplementationDataTypeElement.arraySizeSemantics";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SUB-ELEMENTS">
            <xsd:annotation>
               <xsd:documentation>Element of an array, struct, or union in case of a nested declaration (i.e. without using "typedefs").

The aggregation of ImplementionDataTypeElement is subject to variability with the purpose to support the conditional existence of elements inside a ImplementationDataType representing a structure. 
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ImplementationDataTypeElement.subElement";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="IMPLEMENTATION-DATA-TYPE-ELEMENT" type="AR:IMPLEMENTATION-DATA-TYPE-ELEMENT"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-DATA-DEF-PROPS" type="AR:SW-DATA-DEF-PROPS">
            <xsd:annotation>
               <xsd:documentation>The properties of this ImplementationDataTypeElementt.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ImplementationDataTypeElement.swDataDefProps";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ImplementationDataTypeElement.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ImplementationDataTypes::ImplementationDataTypeElement -->
   <xsd:complexType abstract="false" mixed="false" name="IMPLEMENTATION-DATA-TYPE-ELEMENT">
      <xsd:annotation>
         <xsd:documentation>Declares a data object which is locally aggregated. Such an element can only be used within the scope where it is aggregated. 

This element either consists of further subElements or it is further defined via its swDataDefProps.

There are several use cases within the system of ImplementationDataTypes fur such a local declaration:
* It can represent the elements of an array, defining the element type and array size
* It can represent an element of a struct, defining its type
* It can be the local declaration of a debug element.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ImplementationDataTypeElement"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:IMPLEMENTATION-DATA-TYPE-ELEMENT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
 <xsd:simpleType name="BUILD-ACTION-MANIFEST--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BUILD-ACTION-MANIFEST"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class EngineeringObject::AutosarEngineeringObject -->
   <xsd:group name="AUTOSAR-ENGINEERING-OBJECT">
      <xsd:annotation>
         <xsd:documentation>This denotes an engineering object being part of the process. It is a specialization of the abstract class EngineeringObject for usage within AUTOSAR.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AutosarEngineeringObject"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
   <!-- complex type for class EngineeringObject::AutosarEngineeringObject -->
   <xsd:complexType abstract="false" mixed="false" name="AUTOSAR-ENGINEERING-OBJECT">
      <xsd:annotation>
         <xsd:documentation>This denotes an engineering object being part of the process. It is a specialization of the abstract class EngineeringObject for usage within AUTOSAR.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AutosarEngineeringObject"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ENGINEERING-OBJECT"/>
         <xsd:group ref="AR:AUTOSAR-ENGINEERING-OBJECT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>

  
<!-- element group for class MeasurementCalibrationSupport::McSwEmulationMethodSupport -->
   <xsd:group name="MC-SW-EMULATION-METHOD-SUPPORT">
      <xsd:annotation>
         <xsd:documentation>This denotes the method used by the RTE to handle the calibration data. It is published by the RTE generator and can be used e.g. to generate the corresponding emulation method in a Complex Driver.

According to the actual method given by the category attribute,  not all attributes are always needed:

* double pointered method: only baseReference is mandatory
* single pointered method: only referenceTable is mandatory
* initRam method: only elementGroup(s) are mandatory

Note: For single/double pointered method the group locations are implicitly accessed via the reference table and their location can be found from the initial values in the M1 model of the respective pointers. Therefore, the description of elementGroups is not needed in these cases.  Likewise, for double pointered method the reference table description can be accessed via the M1 model under baseReference.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="McSwEmulationMethodSupport"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="SHORT-LABEL" type="AR:IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>Assigns a name to this element.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="McSwEmulationMethodSupport.shortLabel";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="-100"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="CATEGORY" type="AR:IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>Identifies the actual method. The possible names shall correspond to the symbols of the ECU configuration parameter for the calibration method of the RTE, and can include vendor specific methods.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="McSwEmulationMethodSupport.category";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="-90"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="BASE-REFERENCE-REF">
            <xsd:annotation>
               <xsd:documentation>Refers to the base pointer in case of the double-pointered method.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="McSwEmulationMethodSupport.baseReference";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:VARIABLE-DATA-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ELEMENT-GROUPS">
            <xsd:annotation>
               <xsd:documentation>Denotes the grouping of calibration parameters in the actual RTE code. Depending on the category, this information maybe required to set up the emulation code.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="McSwEmulationMethodSupport.elementGroup";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="MC-PARAMETER-ELEMENT-GROUP" type="AR:MC-PARAMETER-ELEMENT-GROUP"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="REFERENCE-TABLE-REF">
            <xsd:annotation>
               <xsd:documentation>Refers to the pointer table in case of the single-pointered method.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="McSwEmulationMethodSupport.referenceTable";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:VARIABLE-DATA-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="McSwEmulationMethodSupport.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class MeasurementCalibrationSupport::McSwEmulationMethodSupport -->
   <xsd:complexType abstract="false" mixed="false" name="MC-SW-EMULATION-METHOD-SUPPORT">
      <xsd:annotation>
         <xsd:documentation>This denotes the method used by the RTE to handle the calibration data. It is published by the RTE generator and can be used e.g. to generate the corresponding emulation method in a Complex Driver.

According to the actual method given by the category attribute,  not all attributes are always needed:

* double pointered method: only baseReference is mandatory
* single pointered method: only referenceTable is mandatory
* initRam method: only elementGroup(s) are mandatory

Note: For single/double pointered method the group locations are implicitly accessed via the reference table and their location can be found from the initial values in the M1 model of the respective pointers. Therefore, the description of elementGroups is not needed in these cases.  Likewise, for double pointered method the reference table description can be accessed via the M1 model under baseReference.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="McSwEmulationMethodSupport"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:MC-SW-EMULATION-METHOD-SUPPORT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class MeasurementCalibrationSupport::McDataInstance -->
   <xsd:group name="MC-DATA-INSTANCE">
      <xsd:annotation>
         <xsd:documentation>Describes the specific properties of one data instance in order to support measurement and/or calibration of this data instance.

The most important attributes are:
* Its shortName is copied from the ECU Flat map (if applicable) and will be used as identifier and for display by the MC system.
* The category is copied from the corresponding data type (ApplicationDataType if defined, otherwise ImplementationDataType) as far as applicable.
* The symbol is the one used in the programming language. It will be used to find out the actual memory address by the final generation tool with the help of linker generated information.

It is assumed that in the M1 model this part and all the aggregated and referred elements (with the exception of the Flat Map and the references from ImplementationElementInParameterInstanceRef and McAccessDetails) are completely generated from "upstream" information. This means, that even if an element like e.g. a CompuMethod is only used via reference here, it will be copied into the M1 artifact which holds the complete McSupportData for a given Implementation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="McDataInstance"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ARRAY-SIZE" type="AR:POSITIVE-INTEGER">
            <xsd:annotation>
               <xsd:documentation>The existence of this attribute turns the data instance into an array of data. The attribute determines the size of the array in terms of number of elements.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="McDataInstance.arraySize";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="DISPLAY-IDENTIFIER" type="AR:MCD-IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>An optional attribute to be used to set the ASAM ASAP2 DISPLAY_IDENTIFIER attribute.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="McDataInstance.displayIdentifier";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="FLAT-MAP-ENTRY-REF">
            <xsd:annotation>
               <xsd:documentation>Reference to the corresponding entry in the ECU Flat Map. This allows to trace back to the original specification of the generated data instance. This link shall be added by the RTE generator mainly for documentation purposes.

The reference is optional because 
* The McDataInstance may represent an array or struct in which only the subElements correspond to FlatMap entries.
* The McDataInstance may represent a task local buffer for rapid prototyping access which is different from the "main instance" used for measurement access.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="McDataInstance.flatMapEntry";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:FLAT-INSTANCE-DESCRIPTOR--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="INSTANCE-IN-MEMORY" type="AR:IMPLEMENTATION-ELEMENT-IN-PARAMETER-INSTANCE-REF">
            <xsd:annotation>
               <xsd:documentation>Reference to the corresponding data instance in the description of calibration data structures published by the RTE generator. This is used to support emulation methods inside the ECU, it is not required for A2L generation.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="McDataInstance.instanceInMemory";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MC-DATA-ACCESS-DETAILS" type="AR:MC-DATA-ACCESS-DETAILS">
            <xsd:annotation>
               <xsd:documentation>Refers to "upstream" information on how the RTE uses this data instance.
Use Case: Rapid Prototyping</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="McDataInstance.mcDataAccessDetails";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MC-DATA-ASSIGNMENTS">
            <xsd:annotation>
               <xsd:documentation>An assignment between McDataInstances.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="McDataInstance.mcDataAssignment";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="ROLE-BASED-MC-DATA-ASSIGNMENT" type="AR:ROLE-BASED-MC-DATA-ASSIGNMENT"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="RESULTING-PROPERTIES" type="AR:SW-DATA-DEF-PROPS">
            <xsd:annotation>
               <xsd:documentation>These are the generated properties resulting from decisions taken by the RTE  generator for the actually implemented data instance. Only those properties are relevant here, which are needed for the measurement and calibration system.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="McDataInstance.resultingProperties";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ROLE" type="AR:IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>An optional attribute to be used for additional information on the role of this data instance, for example in the context of rapid prototyping.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="McDataInstance.role";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SUB-ELEMENTS">
            <xsd:annotation>
               <xsd:documentation>This relation indicates, that the target element is part of a "struct" which is given by the source element. This information will be used by the final generator to set up the correct addressing scheme.
The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="McDataInstance.subElement";pureMM.maxOccurs="-1";pureMM.minOccurs="0";vh.latestBindingTime="preCompileTime"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="MC-DATA-INSTANCE" type="AR:MC-DATA-INSTANCE"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SYMBOL" type="AR:SYMBOL-STRING">
            <xsd:annotation>
               <xsd:documentation>This String is used to determine the memory address during final generation of the MC configuration data (e.g. "A2L" file) . It shall be the name of the element in the programming language such that it can be identified in linker generated information. 

In case the McDataInstance is part of composite data in the programming language, the symbol String may include parts denoting the element context, unless the context is given by the symbol attribute of an enclosing McDataInstance. This means in particular for the C language that the "." character shall be used as a separator between the name of a "struct" variable the name of one of its elements.

The symbol can differ from the shortName in case of generated C data declarations.

It is an optional attribute since it may be missing in case the instance represents an element (e.g. a single array element) which has no name in the linker map.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="McDataInstance.symbol";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="McDataInstance.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class MeasurementCalibrationSupport::McDataInstance -->
   <xsd:complexType abstract="false" mixed="false" name="MC-DATA-INSTANCE">
      <xsd:annotation>
         <xsd:documentation>Describes the specific properties of one data instance in order to support measurement and/or calibration of this data instance.

The most important attributes are:
* Its shortName is copied from the ECU Flat map (if applicable) and will be used as identifier and for display by the MC system.
* The category is copied from the corresponding data type (ApplicationDataType if defined, otherwise ImplementationDataType) as far as applicable.
* The symbol is the one used in the programming language. It will be used to find out the actual memory address by the final generation tool with the help of linker generated information.

It is assumed that in the M1 model this part and all the aggregated and referred elements (with the exception of the Flat Map and the references from ImplementationElementInParameterInstanceRef and McAccessDetails) are completely generated from "upstream" information. This means, that even if an element like e.g. a CompuMethod is only used via reference here, it will be copied into the M1 artifact which holds the complete McSupportData for a given Implementation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="McDataInstance"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:MC-DATA-INSTANCE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
   
 <xsd:simpleType name="SW-SYSTEMCONSTANT-VALUE-SET--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="SW-SYSTEMCONSTANT-VALUE-SET"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:complexType name="DEPENDENCY-USAGE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Enumeration describing the process steps a dependency is valid in.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DependencyUsageEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DEPENDENCY-USAGE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="DEPENDENCY-USAGE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BUILD">
            <xsd:annotation>
               <xsd:documentation>The object referred by the dependency is required during the build process.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="DependencyUsageEnum.build"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CODEGENERATION">
            <xsd:annotation>
               <xsd:documentation>The object referred by the dependency is required during code generation</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="DependencyUsageEnum.codegeneration"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="COMPILE">
            <xsd:annotation>
               <xsd:documentation>The object referred by the dependency is required during compilation.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="DependencyUsageEnum.compile"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EXECUTE">
            <xsd:annotation>
               <xsd:documentation>The object referred by the dependency is required at execution time.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="DependencyUsageEnum.execute"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LINK">
            <xsd:annotation>
               <xsd:documentation>The object referred by the dependency is required during linking.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="DependencyUsageEnum.link"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class ExecutionTime::AnalyzedExecutionTime -->
   <xsd:group name="ANALYZED-EXECUTION-TIME">
      <xsd:annotation>
         <xsd:documentation>AnalyzedExecutionTime provides an analytic method for specifying the best and worst case execution time.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AnalyzedExecutionTime"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="BEST-CASE-EXECUTION-TIME" type="AR:MULTIDIMENSIONAL-TIME">
            <xsd:annotation>
               <xsd:documentation>The best case execution time (BCET) defines the minimum amount of time the related executable entity requires for its execution.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AnalyzedExecutionTime.bestCaseExecutionTime";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="WORST-CASE-EXECUTION-TIME" type="AR:MULTIDIMENSIONAL-TIME">
            <xsd:annotation>
               <xsd:documentation>The worst case execution time (WCET) defines the maximum amount of time the related executable entity requires for its execution.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="AnalyzedExecutionTime.worstCaseExecutionTime";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ExecutionTime::AnalyzedExecutionTime -->
   <xsd:complexType abstract="false" mixed="false" name="ANALYZED-EXECUTION-TIME">
      <xsd:annotation>
         <xsd:documentation>AnalyzedExecutionTime provides an analytic method for specifying the best and worst case execution time.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AnalyzedExecutionTime"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:EXECUTION-TIME"/>
         <xsd:group ref="AR:ANALYZED-EXECUTION-TIME"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class ExecutionTime::MeasuredExecutionTime -->
   <xsd:group name="MEASURED-EXECUTION-TIME">
      <xsd:annotation>
         <xsd:documentation>Specifies the ExecutionTime which has been gathered using measurement means.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MeasuredExecutionTime"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="MAXIMUM-EXECUTION-TIME" type="AR:MULTIDIMENSIONAL-TIME">
            <xsd:annotation>
               <xsd:documentation>The maximum measured execution time.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MeasuredExecutionTime.maximumExecutionTime";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MINIMUM-EXECUTION-TIME" type="AR:MULTIDIMENSIONAL-TIME">
            <xsd:annotation>
               <xsd:documentation>The minimum measured execution time.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MeasuredExecutionTime.minimumExecutionTime";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="NOMINAL-EXECUTION-TIME" type="AR:MULTIDIMENSIONAL-TIME">
            <xsd:annotation>
               <xsd:documentation>The nominal measured execution time.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MeasuredExecutionTime.nominalExecutionTime";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ExecutionTime::MeasuredExecutionTime -->
   <xsd:complexType abstract="false" mixed="false" name="MEASURED-EXECUTION-TIME">
      <xsd:annotation>
         <xsd:documentation>Specifies the ExecutionTime which has been gathered using measurement means.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MeasuredExecutionTime"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:EXECUTION-TIME"/>
         <xsd:group ref="AR:MEASURED-EXECUTION-TIME"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class ExecutionTime::RoughEstimateOfExecutionTime -->
   <xsd:group name="ROUGH-ESTIMATE-OF-EXECUTION-TIME">
      <xsd:annotation>
         <xsd:documentation>Provides a description of a rough estimate on the ExecutionTime.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RoughEstimateOfExecutionTime"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ADDITIONAL-INFORMATION" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>Provides description on the rough estimate of the ExecutionTime.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RoughEstimateOfExecutionTime.additionalInformation";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ESTIMATED-EXECUTION-TIME" type="AR:MULTIDIMENSIONAL-TIME">
            <xsd:annotation>
               <xsd:documentation>The estimated execution time.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RoughEstimateOfExecutionTime.estimatedExecutionTime";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ExecutionTime::RoughEstimateOfExecutionTime -->
   <xsd:complexType abstract="false" mixed="false" name="ROUGH-ESTIMATE-OF-EXECUTION-TIME">
      <xsd:annotation>
         <xsd:documentation>Provides a description of a rough estimate on the ExecutionTime.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RoughEstimateOfExecutionTime"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:EXECUTION-TIME"/>
         <xsd:group ref="AR:ROUGH-ESTIMATE-OF-EXECUTION-TIME"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class ExecutionTime::SimulatedExecutionTime -->
   <xsd:group name="SIMULATED-EXECUTION-TIME">
      <xsd:annotation>
         <xsd:documentation>Specifies the ExecutionTime which has been gathered using simulation means.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SimulatedExecutionTime"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="MAXIMUM-EXECUTION-TIME" type="AR:MULTIDIMENSIONAL-TIME">
            <xsd:annotation>
               <xsd:documentation>The maximum simulated execution time.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SimulatedExecutionTime.maximumExecutionTime";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MINIMUM-EXECUTION-TIME" type="AR:MULTIDIMENSIONAL-TIME">
            <xsd:annotation>
               <xsd:documentation>The minimum simulated execution time.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SimulatedExecutionTime.minimumExecutionTime";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="NOMINAL-EXECUTION-TIME" type="AR:MULTIDIMENSIONAL-TIME">
            <xsd:annotation>
               <xsd:documentation>The nominal simulated execution time.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SimulatedExecutionTime.nominalExecutionTime";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ExecutionTime::SimulatedExecutionTime -->
   <xsd:complexType abstract="false" mixed="false" name="SIMULATED-EXECUTION-TIME">
      <xsd:annotation>
         <xsd:documentation>Specifies the ExecutionTime which has been gathered using simulation means.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SimulatedExecutionTime"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:EXECUTION-TIME"/>
         <xsd:group ref="AR:SIMULATED-EXECUTION-TIME"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
 <!-- element group for class HeapUsage::MeasuredHeapUsage -->
   <xsd:group name="MEASURED-HEAP-USAGE">
      <xsd:annotation>
         <xsd:documentation>The heap usage has been measured.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MeasuredHeapUsage"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="AVERAGE-MEMORY-CONSUMPTION" type="AR:POSITIVE-INTEGER">
            <xsd:annotation>
               <xsd:documentation>The average heap usage measured. Unit: byte.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MeasuredHeapUsage.averageMemoryConsumption";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MAXIMUM-MEMORY-CONSUMPTION" type="AR:POSITIVE-INTEGER">
            <xsd:annotation>
               <xsd:documentation>The maximum heap usage measured. Unit: byte.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MeasuredHeapUsage.maximumMemoryConsumption";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MINIMUM-MEMORY-CONSUMPTION" type="AR:POSITIVE-INTEGER">
            <xsd:annotation>
               <xsd:documentation>The minimum heap usage measured. Unit: byte.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MeasuredHeapUsage.minimumMemoryConsumption";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TEST-PATTERN" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>Description of the test pattern used to acquire the measured values.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MeasuredHeapUsage.testPattern";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class HeapUsage::MeasuredHeapUsage -->
   <xsd:complexType abstract="false" mixed="false" name="MEASURED-HEAP-USAGE">
      <xsd:annotation>
         <xsd:documentation>The heap usage has been measured.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MeasuredHeapUsage"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:HEAP-USAGE"/>
         <xsd:group ref="AR:MEASURED-HEAP-USAGE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class HeapUsage::RoughEstimateHeapUsage -->
   <xsd:group name="ROUGH-ESTIMATE-HEAP-USAGE">
      <xsd:annotation>
         <xsd:documentation>Rough estimation of the heap usage.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RoughEstimateHeapUsage"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="MEMORY-CONSUMPTION" type="AR:POSITIVE-INTEGER">
            <xsd:annotation>
               <xsd:documentation>Rough estimate of the heap usage. Unit: byte.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RoughEstimateHeapUsage.memoryConsumption";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class HeapUsage::RoughEstimateHeapUsage -->
   <xsd:complexType abstract="false" mixed="false" name="ROUGH-ESTIMATE-HEAP-USAGE">
      <xsd:annotation>
         <xsd:documentation>Rough estimation of the heap usage.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RoughEstimateHeapUsage"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:HEAP-USAGE"/>
         <xsd:group ref="AR:ROUGH-ESTIMATE-HEAP-USAGE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class HeapUsage::WorstCaseHeapUsage -->
   <xsd:group name="WORST-CASE-HEAP-USAGE">
      <xsd:annotation>
         <xsd:documentation>Provides a formal worst case heap usage.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="WorstCaseHeapUsage"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="MEMORY-CONSUMPTION" type="AR:POSITIVE-INTEGER">
            <xsd:annotation>
               <xsd:documentation>Worst case heap consumption. Unit: byte.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="WorstCaseHeapUsage.memoryConsumption";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class HeapUsage::WorstCaseHeapUsage -->
   <xsd:complexType abstract="false" mixed="false" name="WORST-CASE-HEAP-USAGE">
      <xsd:annotation>
         <xsd:documentation>Provides a formal worst case heap usage.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="WorstCaseHeapUsage"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:HEAP-USAGE"/>
         <xsd:group ref="AR:WORST-CASE-HEAP-USAGE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class MemorySectionUsage::MemorySection -->
   <xsd:group name="MEMORY-SECTION">
      <xsd:annotation>
         <xsd:documentation>Provides a description of an abstract memory section used in the Implementation for code or data. It shall be declared by the Implementation Description of the module or component, which actually allocates the memory in its code. This means in case of data prototypes which are allocated by the RTE, that the generated Implementation Description of the RTE shall contain the corresponding MemorySections.

The attribute "symbol" (if symbol is missing: "shortName") defines the module or component specific section name used in the code. For details see the document "Specification of Memory Mapping".
Typically the section name is build according the pattern:

&amp;lt;SwAddrMethod shortName&amp;gt;[_&amp;lt;further specialization nominator&amp;gt;][_&amp;lt;alignment&amp;gt;] 
where
* '''[&amp;lt;SwAddrMethod shortName&amp;gt;]''' is the shortName of the referenced SwAddrMethod
* '''[_&amp;lt;further specialization nominator&amp;gt;]''' is an optional infix to indicate the specialization in the case that several MemorySections for different purpose of the same Implementation Description referring to the same or equally named SwAddrMethods. 
* '''[_&amp;lt;alignment&amp;gt;]''' is the alignment attributes value and is only applicable in the case that the memoryAllocationKeywordPolicy value of the referenced SwAddrMethod is set to addrMethodShortNameAndAlignment 

MemorySection used to Implement the code of RunnableEntitys and BswSchedulableEntitys shall have a symbol (if missing: shortName) identical to the referred SwAddrMethod to conform to the generated RTE header files.   

In addition to the section name described above, a prefix is used in the corresponding macro code in order to define a name space. This prefix is by default given by the shortName of the BswModuleDescription resp. the SwComponentType. It can be superseded by  the prefix attribute.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MemorySection"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ALIGNMENT" type="AR:ALIGNMENT-TYPE">
            <xsd:annotation>
               <xsd:documentation>The attribute describes the alignment of objects within this memory section.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MemorySection.alignment";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="EXECUTABLE-ENTITY-REFS">
            <xsd:annotation>
               <xsd:documentation>Reference to the ExecutableEntitites located in this section. This allows to locate different ExecutableEntitities in different sections even if the associated SwAddrmethod is the same.

This is applicable to code sections only.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MemorySection.executableEntity";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="EXECUTABLE-ENTITY-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:EXECUTABLE-ENTITY--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MEM-CLASS-SYMBOL" type="AR:C-IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>Defines a specific  symbol in order to generate the compiler abstraction  "memclass" code for this MemorySection. The existence of this attribute supersedes the usage of swAddrmethod.shortName for this purpose. 

The complete name of the  "memclass" preprocessor symbol is constructed as &amp;lt;prefix&amp;gt;_&amp;lt;memClassSymbol&amp;gt; where prefix is defined in the same way as for the enclosing MemorySection. See also AUTOSAR_SWS_CompilerAbstraction SWS_COMPILER_00040.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MemorySection.memClassSymbol";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="OPTIONS">
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="OPTION" type="AR:IDENTIFIER">
                     <xsd:annotation>
                        <xsd:documentation>This attribute introduces the ability to specify further intended properties of this MemorySection.
The following two values are standardized (to be used for code sections only and exclusively to each other):

* INLINE - The code section is declared with the compiler abstraction macro INLINE.

* LOCAL_INLINE  - The code section is declared with the compiler abstraction macro LOCAL_INLINE

In both cases (INLINE and LOCAL_INLINE) the inline expansion depends on the compiler specific implementation of these macros. Depending on this, the code section either corresponds to an actual section in memory or is put into the section of the caller. See AUTOSAR_SWS_CompilerAbstraction for more details.</xsd:documentation>
                        <xsd:appinfo source="tags">mmt.qualifiedName="MemorySection.option";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
                     </xsd:annotation>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="PREFIX-REF">
            <xsd:annotation>
               <xsd:documentation>The prefix used to set the memory section's namespace in the code. The existence of a prefix element supersedes rules for a default prefix (such as the BswModuleDescription's shortName). This allows the user to define several name spaces for memory sections within the scope of one module, cluster or SWC.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MemorySection.prefix";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:SECTION-NAME-PREFIX--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SIZE" type="AR:POSITIVE-INTEGER">
            <xsd:annotation>
               <xsd:documentation>The size in bytes of the section.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MemorySection.size";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SW-ADDRMETHOD-REF">
            <xsd:annotation>
               <xsd:documentation>This association indicates that this module specific (abstract) memory section is part of an overall SwAddrMethod, referred by the upstream declarations (e.g. calibration parameters, data element prototypes, code entities) which share a common addressing strategy. This can be evaluated for the ECU configuration of the build support. 

This association shall always be declared by the Implementation description of the module or component, which allocates the memory in its code. This means in case of data prototypes which are allocated by the RTE, that the software components only declare the grouping of its data prototypes to SwAddrMethods, and the generated Implementation Description of the RTE actually sets up this association.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MemorySection.swAddrmethod";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:SW-ADDR-METHOD--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SYMBOL" type="AR:IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>Defines the section name as explained in the main description. By using this attribute for code generation (instead of the shortName) it is possible to define several different MemorySections having the same name - e.g. symbol = CODE - but using different sectionNamePrefixes.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MemorySection.symbol";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MemorySection.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class MemorySectionUsage::MemorySection -->
   <xsd:complexType abstract="false" mixed="false" name="MEMORY-SECTION">
      <xsd:annotation>
         <xsd:documentation>Provides a description of an abstract memory section used in the Implementation for code or data. It shall be declared by the Implementation Description of the module or component, which actually allocates the memory in its code. This means in case of data prototypes which are allocated by the RTE, that the generated Implementation Description of the RTE shall contain the corresponding MemorySections.

The attribute "symbol" (if symbol is missing: "shortName") defines the module or component specific section name used in the code. For details see the document "Specification of Memory Mapping".
Typically the section name is build according the pattern:

&amp;lt;SwAddrMethod shortName&amp;gt;[_&amp;lt;further specialization nominator&amp;gt;][_&amp;lt;alignment&amp;gt;] 
where
* '''[&amp;lt;SwAddrMethod shortName&amp;gt;]''' is the shortName of the referenced SwAddrMethod
* '''[_&amp;lt;further specialization nominator&amp;gt;]''' is an optional infix to indicate the specialization in the case that several MemorySections for different purpose of the same Implementation Description referring to the same or equally named SwAddrMethods. 
* '''[_&amp;lt;alignment&amp;gt;]''' is the alignment attributes value and is only applicable in the case that the memoryAllocationKeywordPolicy value of the referenced SwAddrMethod is set to addrMethodShortNameAndAlignment 

MemorySection used to Implement the code of RunnableEntitys and BswSchedulableEntitys shall have a symbol (if missing: shortName) identical to the referred SwAddrMethod to conform to the generated RTE header files.   

In addition to the section name described above, a prefix is used in the corresponding macro code in order to define a name space. This prefix is by default given by the shortName of the BswModuleDescription resp. the SwComponentType. It can be superseded by  the prefix attribute.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MemorySection"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:MEMORY-SECTION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
   <xsd:simpleType name="MEMORY-SECTION--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="MEMORY-SECTION"/>
      </xsd:restriction>
   </xsd:simpleType>
 
   <!-- complex type for class MemorySectionUsage::SectionNamePrefix -->
   <xsd:complexType abstract="false" mixed="false" name="SECTION-NAME-PREFIX">
      <xsd:annotation>
         <xsd:documentation>A prefix to be used for generated code artifacts defining a memory section name in the source code of the using module.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SectionNamePrefix"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:IMPLEMENTATION-PROPS"/>
         <xsd:group ref="AR:SECTION-NAME-PREFIX"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
   <xsd:simpleType name="SECTION-NAME-PREFIX--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="SECTION-NAME-PREFIX"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:complexType name="ARRAY-SIZE-HANDLING-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration defines different ways to handle the sizes of variable size arrays.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ArraySizeHandlingEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ARRAY-SIZE-HANDLING-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="ARRAY-SIZE-HANDLING-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ALL-INDICES-DIFFERENT-ARRAY-SIZE">
            <xsd:annotation>
               <xsd:documentation>All elements of the variable size array may have different sizes.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ArraySizeHandlingEnum.allIndicesDifferentArraySize"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ALL-INDICES-SAME-ARRAY-SIZE">
            <xsd:annotation>
               <xsd:documentation>All elements of the variable size array have the same size.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ArraySizeHandlingEnum.allIndicesSameArraySize"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="INHERITED-FROM-ARRAY-ELEMENT-TYPE-SIZE">
            <xsd:annotation>
               <xsd:documentation>The size of all dimensions of the variable size array is determined by the size of the contained array element.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ArraySizeHandlingEnum.inheritedFromArrayElementTypeSize"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class ExecutionTime::ExecutionTime -->
   <xsd:group name="EXECUTION-TIME">
      <xsd:annotation>
         <xsd:documentation>Base class for several means how to describe the ExecutionTime of software. The required context information is provided through this class.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ExecutionTime"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="EXCLUSIVE-AREA-REF">
            <xsd:annotation>
               <xsd:documentation>Reference to the ExclusiveArea this execution time is provided for.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ExecutionTime.exclusiveArea";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:EXCLUSIVE-AREA--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="EXECUTABLE-ENTITY-REF">
            <xsd:annotation>
               <xsd:documentation>The executable entity for which this execution time is described.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ExecutionTime.executableEntity";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:EXECUTABLE-ENTITY--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="HARDWARE-CONFIGURATION" type="AR:HARDWARE-CONFIGURATION">
            <xsd:annotation>
               <xsd:documentation>Provides information on the HardwareConfiguration used to specify this ExecutionTime.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ExecutionTime.hardwareConfiguration";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="HW-ELEMENT-REF">
            <xsd:annotation>
               <xsd:documentation>The hardware element (e.g. type of ECU) for which the execution time is specified.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ExecutionTime.hwElement";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:HW-ELEMENT--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="INCLUDED-LIBRARY-REFS">
            <xsd:annotation>
               <xsd:documentation>If this dependency is specified, the execution
time of the library code is included in the
execution time data for the runnable.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ExecutionTime.includedLibrary";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="INCLUDED-LIBRARY-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:DEPENDENCY-ON-ARTIFACT--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MEMORY-SECTION-LOCATIONS">
            <xsd:annotation>
               <xsd:documentation>Provides information on the MemorySectionLocation which is involved in the ExecutionTime description.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ExecutionTime.memorySectionLocation";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="MEMORY-SECTION-LOCATION" type="AR:MEMORY-SECTION-LOCATION"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SOFTWARE-CONTEXT" type="AR:SOFTWARE-CONTEXT">
            <xsd:annotation>
               <xsd:documentation>Provides information on the detailed SoftwareContext used to provide the ExecutionTime description.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ExecutionTime.softwareContext";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ExecutionTime.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
 <!-- element group for class HeapUsage::HeapUsage -->
   <xsd:group name="HEAP-USAGE">
      <xsd:annotation>
         <xsd:documentation>Describes the heap memory usage of a SW-Component.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="HeapUsage"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="HARDWARE-CONFIGURATION" type="AR:HARDWARE-CONFIGURATION">
            <xsd:annotation>
               <xsd:documentation>Contains information about the hardware context this heap usage is describing.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="HeapUsage.hardwareConfiguration";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="HW-ELEMENT-REF">
            <xsd:annotation>
               <xsd:documentation>Specifies for which hardware element (e.g. ECU) this heap usage  usage is given.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="HeapUsage.hwElement";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:HW-ELEMENT--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SOFTWARE-CONTEXT" type="AR:SOFTWARE-CONTEXT">
            <xsd:annotation>
               <xsd:documentation>Contains details about the software context this heap usage is provided for.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="HeapUsage.softwareContext";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="HeapUsage.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- element group for class EthernetTopology::HttpTp -->
   <xsd:group name="HTTP-TP">
      <xsd:annotation>
         <xsd:documentation>Http over TCP as transport protocol.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="HttpTp"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="CONTENT-TYPE" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>Descriptor for the transported content.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="HttpTp.contentType";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="PROTOCOL-VERSION" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>HTTP Protocol version (e.g. 1.1)</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="HttpTp.protocolVersion";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="REQUEST-METHOD" type="AR:REQUEST-METHOD-ENUM">
            <xsd:annotation>
               <xsd:documentation>HTTP request method to be used.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="HttpTp.requestMethod";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TCP-TP-CONFIG" type="AR:TCP-TP">
            <xsd:annotation>
               <xsd:documentation>TcpTp Configuration.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="HttpTp.tcpTpConfig";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="URI" type="AR:URI-STRING">
            <xsd:annotation>
               <xsd:documentation>URI to be called.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="HttpTp.uri";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
<!-- element group for class StackUsage::MeasuredStackUsage -->
   <xsd:group name="MEASURED-STACK-USAGE">
      <xsd:annotation>
         <xsd:documentation>The stack usage has been measured.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MeasuredStackUsage"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="AVERAGE-MEMORY-CONSUMPTION" type="AR:POSITIVE-INTEGER">
            <xsd:annotation>
               <xsd:documentation>The average stack usage measured. Unit: byte.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MeasuredStackUsage.averageMemoryConsumption";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MAXIMUM-MEMORY-CONSUMPTION" type="AR:POSITIVE-INTEGER">
            <xsd:annotation>
               <xsd:documentation>The maximum stack usage measured. Unit: byte.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MeasuredStackUsage.maximumMemoryConsumption";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="MINIMUM-MEMORY-CONSUMPTION" type="AR:POSITIVE-INTEGER">
            <xsd:annotation>
               <xsd:documentation>The minimum stack usage measured. Unit: byte.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MeasuredStackUsage.minimumMemoryConsumption";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TEST-PATTERN" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>Description of the test pattern used to acquire the measured values.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MeasuredStackUsage.testPattern";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class StackUsage::MeasuredStackUsage -->
   <xsd:complexType abstract="false" mixed="false" name="MEASURED-STACK-USAGE">
      <xsd:annotation>
         <xsd:documentation>The stack usage has been measured.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MeasuredStackUsage"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:STACK-USAGE"/>
         <xsd:group ref="AR:MEASURED-STACK-USAGE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
 <!-- element group for class StackUsage::RoughEstimateStackUsage -->
   <xsd:group name="ROUGH-ESTIMATE-STACK-USAGE">
      <xsd:annotation>
         <xsd:documentation>Rough estimation of the stack usage.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RoughEstimateStackUsage"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="MEMORY-CONSUMPTION" type="AR:POSITIVE-INTEGER">
            <xsd:annotation>
               <xsd:documentation>Rough estimate of the stack usage. Unit: byte.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RoughEstimateStackUsage.memoryConsumption";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class StackUsage::RoughEstimateStackUsage -->
   <xsd:complexType abstract="false" mixed="false" name="ROUGH-ESTIMATE-STACK-USAGE">
      <xsd:annotation>
         <xsd:documentation>Rough estimation of the stack usage.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RoughEstimateStackUsage"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:STACK-USAGE"/>
         <xsd:group ref="AR:ROUGH-ESTIMATE-STACK-USAGE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
 <!-- element group for class MeasurementCalibrationSupport::McParameterElementGroup -->
   <xsd:group name="MC-PARAMETER-ELEMENT-GROUP">
      <xsd:annotation>
         <xsd:documentation>Denotes a group of calibration parameters which are handled by the RTE as one data structure.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="McParameterElementGroup"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="SHORT-LABEL" type="AR:IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>Assigns a name to this element.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="McParameterElementGroup.shortLabel";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="-100"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="RAM-LOCATION-REF">
            <xsd:annotation>
               <xsd:documentation>Refers to the RAM location of this parameter group. To be used for the init-RAM method.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="McParameterElementGroup.ramLocation";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:VARIABLE-DATA-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ROM-LOCATION-REF">
            <xsd:annotation>
               <xsd:documentation>Refers to the ROM location of this parameter group. To be used for the init-RAM method.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="McParameterElementGroup.romLocation";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:PARAMETER-DATA-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class MeasurementCalibrationSupport::McParameterElementGroup -->
   <xsd:complexType abstract="false" mixed="false" name="MC-PARAMETER-ELEMENT-GROUP">
      <xsd:annotation>
         <xsd:documentation>Denotes a group of calibration parameters which are handled by the RTE as one data structure.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="McParameterElementGroup"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:MC-PARAMETER-ELEMENT-GROUP"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:complexType name="MCD-IDENTIFIER">
      <xsd:annotation>
         <xsd:documentation>This primitive denotes a name used for measurement and calibration systems and shall follow the restrictions for an ASAM ASAP2 ident. For detailed syntax see the xsd.pattern. The size limitations are not captured. 

McdIdentifiers are random names which may contain characters A through Z, a through z, underscore (_), numerals 0 through 9, points (‘.’) and brackets ( ‘[‘,’]’ ).
However, the following limitations apply: the first character must be a letter or an underscore, brackets must occur in pairs at the end of a partial string and must
contain a number or an alpha-numerical string (description of the index of an array element).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="McdIdentifier";xml.xsd.customType="MCD-IDENTIFIER";xml.xsd.pattern="[a-zA-Z_][a-zA-Z0-9_]*(\[([a-zA-Z_][a-zA-Z0-9_]*|[0-9]+)\])*(\.[a-zA-Z_][a-zA-Z0-9_]*(\[([a-zA-Z_][a-zA-Z0-9_]*|[0-9]+)\])*)*";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:MCD-IDENTIFIER--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="MCD-IDENTIFIER--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[a-zA-Z_][a-zA-Z0-9_]*(\[([a-zA-Z_][a-zA-Z0-9_]*|[0-9]+)\])*(\.[a-zA-Z_][a-zA-Z0-9_]*(\[([a-zA-Z_][a-zA-Z0-9_]*|[0-9]+)\])*)*"/>
      </xsd:restriction>
   </xsd:simpleType>
 <xsd:simpleType name="FLAT-INSTANCE-DESCRIPTOR--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="FLAT-INSTANCE-DESCRIPTOR"/>
      </xsd:restriction>
   </xsd:simpleType>
<!-- element group for class MeasurementCalibrationSupport::ImplementationElementInParameterInstanceRef -->
   <xsd:group name="IMPLEMENTATION-ELEMENT-IN-PARAMETER-INSTANCE-REF">
      <xsd:annotation>
         <xsd:documentation>Describes a reference to a particular ImplementationDataTypeElement instance in the context of a given ParameterDataPrototype.
Thus it refers to a particular element in the implementation description of a software data structure.

Use Case:
The RTE generator publishes its generated structure of calibration parameters in its BSW module description using the "constantMemory" role of ParameterDataPrototypes. Each ParameterDataPrototype describes a group of single calibration parameters. In order to point to these single parameters, this "instance ref" is needed.

Note that this class follows the pattern of an InstanceRef but is not implemented based on the abstract classes because the ImplementationDataType isn't either, especially because ImplementationDataTypeElement isn't derived from AtpPrototype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ImplementationElementInParameterInstanceRef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="CONTEXT-REF">
            <xsd:annotation>
               <xsd:documentation>The context for the referred element.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ImplementationElementInParameterInstanceRef.context";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:PARAMETER-DATA-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TARGET-REF">
            <xsd:annotation>
               <xsd:documentation>The referred data element.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="ImplementationElementInParameterInstanceRef.target";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:IMPLEMENTATION-DATA-TYPE-ELEMENT--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class MeasurementCalibrationSupport::ImplementationElementInParameterInstanceRef -->
   <xsd:complexType abstract="false" mixed="false" name="IMPLEMENTATION-ELEMENT-IN-PARAMETER-INSTANCE-REF">
      <xsd:annotation>
         <xsd:documentation>Describes a reference to a particular ImplementationDataTypeElement instance in the context of a given ParameterDataPrototype.
Thus it refers to a particular element in the implementation description of a software data structure.

Use Case:
The RTE generator publishes its generated structure of calibration parameters in its BSW module description using the "constantMemory" role of ParameterDataPrototypes. Each ParameterDataPrototype describes a group of single calibration parameters. In order to point to these single parameters, this "instance ref" is needed.

Note that this class follows the pattern of an InstanceRef but is not implemented based on the abstract classes because the ImplementationDataType isn't either, especially because ImplementationDataTypeElement isn't derived from AtpPrototype.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ImplementationElementInParameterInstanceRef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:IMPLEMENTATION-ELEMENT-IN-PARAMETER-INSTANCE-REF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class MeasurementCalibrationSupport::McDataAccessDetails -->
   <xsd:group name="MC-DATA-ACCESS-DETAILS">
      <xsd:annotation>
         <xsd:documentation>This meta-class allows to attach detailed information about the usage of a data buffer by the RTE to a corresponding McDataInstance.

Use Case:  Direct memory access to RTE internal buffers for rapid prototyping. In case of implicit communication, the various task local buffers need to be identified in relation to RTE events and variable access points.

Note that the SwComponentPrototype, the RunnableEntity and the VariableDataPrototype are implicitly given be the referred instances of RTEEvent and VariableAccess.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="McDataAccessDetails"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="RTE-EVENT-IREFS">
            <xsd:annotation>
               <xsd:documentation>The RTE event used to receive the data via this buffer.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="McDataAccessDetails.rteEvent";pureMM.maxOccurs="-1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="RTE-EVENT-IREF" type="AR:RTE-EVENT-IN-ECU-INSTANCE-REF"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIABLE-ACCESS-IREFS">
            <xsd:annotation>
               <xsd:documentation>The VariableAccess for which the data buffer is used.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="McDataAccessDetails.variableAccess";pureMM.maxOccurs="-1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="VARIABLE-ACCESS-IREF" type="AR:VARIABLE-ACCESS-IN-ECU-INSTANCE-REF"/>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class MeasurementCalibrationSupport::McDataAccessDetails -->
   <xsd:complexType abstract="false" mixed="false" name="MC-DATA-ACCESS-DETAILS">
      <xsd:annotation>
         <xsd:documentation>This meta-class allows to attach detailed information about the usage of a data buffer by the RTE to a corresponding McDataInstance.

Use Case:  Direct memory access to RTE internal buffers for rapid prototyping. In case of implicit communication, the various task local buffers need to be identified in relation to RTE events and variable access points.

Note that the SwComponentPrototype, the RunnableEntity and the VariableDataPrototype are implicitly given be the referred instances of RTEEvent and VariableAccess.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="McDataAccessDetails"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:MC-DATA-ACCESS-DETAILS"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>

<!-- element group for class MeasurementCalibrationSupport::RoleBasedMcDataAssignment -->
   <xsd:group name="ROLE-BASED-MC-DATA-ASSIGNMENT">
      <xsd:annotation>
         <xsd:documentation>This meta-class allows to define links that specify logical relationships between single McDataInstances. The details on the existence and semantics of such links are not standardized.

Possible Use Case: 
Rapid Prototyping solutions in which additional communication buffers and switches are implemented  in the RTE that allow to switch between the usage of the original and the bypass buffers. The different buffers and the switch can be represented by McDataInstances (in order to be accessed by MC tools) which have relationships to each other.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RoleBasedMcDataAssignment"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="MC-DATA-INSTANCE-REFS">
            <xsd:annotation>
               <xsd:documentation>The target of the assignment.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RoleBasedMcDataAssignment.mcDataInstance";pureMM.maxOccurs="-1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:choice maxOccurs="unbounded" minOccurs="0">
                  <xsd:element name="MC-DATA-INSTANCE-REF">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:extension base="AR:REF">
                              <xsd:attribute name="DEST" type="AR:MC-DATA-INSTANCE--SUBTYPES-ENUM" use="required"/>
                           </xsd:extension>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
               </xsd:choice>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="ROLE" type="AR:IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>Shall be used to specify the role of the assigned data instance in relation to the instance that owns the assignment.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RoleBasedMcDataAssignment.role";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class MeasurementCalibrationSupport::RoleBasedMcDataAssignment -->
   <xsd:complexType abstract="false" mixed="false" name="ROLE-BASED-MC-DATA-ASSIGNMENT">
      <xsd:annotation>
         <xsd:documentation>This meta-class allows to define links that specify logical relationships between single McDataInstances. The details on the existence and semantics of such links are not standardized.

Possible Use Case: 
Rapid Prototyping solutions in which additional communication buffers and switches are implemented  in the RTE that allow to switch between the usage of the original and the bypass buffers. The different buffers and the switch can be represented by McDataInstances (in order to be accessed by MC tools) which have relationships to each other.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RoleBasedMcDataAssignment"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ROLE-BASED-MC-DATA-ASSIGNMENT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:complexType name="SYMBOL-STRING">
      <xsd:annotation>
         <xsd:documentation>This meta-class has the ability to contain a string plus an additional namePattern. Please note that this meta-class has only been introduced to fix an issue with the backwards compatibility between R4.0.3 and R4.1.1 in the context of McDataInstance</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SymbolString";xml.xsd.customType="SYMBOL-STRING";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject,primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SYMBOL-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
            <xsd:attributeGroup ref="AR:SYMBOL-STRING"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <!-- attribute group for class SYMBOL-STRING -->
   <xsd:attributeGroup name="SYMBOL-STRING">
      <xsd:annotation/>
      <xsd:attribute name="NAME-PATTERN" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute represents a pattern which shall be used to define the value of the identifier if the CIdentifier in question is part of a blueprint. 

For more details refer to TPS_StandardizationTemplate.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="SymbolString.namePattern";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup>
<!-- element group for class StackUsage::StackUsage -->
   <xsd:group name="STACK-USAGE">
      <xsd:annotation>
         <xsd:documentation>Describes the stack memory usage of a software.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="StackUsage"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="EXECUTABLE-ENTITY-REF">
            <xsd:annotation>
               <xsd:documentation>The executable entity for which this stack usage is described.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="StackUsage.executableEntity";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:EXECUTABLE-ENTITY--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="HARDWARE-CONFIGURATION" type="AR:HARDWARE-CONFIGURATION">
            <xsd:annotation>
               <xsd:documentation>Contains information about the hardware context this stack usage is describing.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="StackUsage.hardwareConfiguration";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="HW-ELEMENT-REF">
            <xsd:annotation>
               <xsd:documentation>Specifies for which hardware element (e.g. ECU) this stack usage is given.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="StackUsage.hwElement";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:HW-ELEMENT--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SOFTWARE-CONTEXT" type="AR:SOFTWARE-CONTEXT">
            <xsd:annotation>
               <xsd:documentation>Contains details about the software context this stack usage is provided for.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="StackUsage.softwareContext";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="VARIATION-POINT" type="AR:VARIATION-POINT">
            <xsd:annotation>
               <xsd:documentation>This element was generated/modified due to an atpVariation stereotype.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="StackUsage.variationPoint";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.sequenceOffset="10000"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
<xsd:simpleType name="SYMBOL-STRING--SIMPLE">
      <xsd:restriction base="xsd:string"/>
   </xsd:simpleType>
 <!-- element group for class StackUsage::WorstCaseStackUsage -->
   <xsd:group name="WORST-CASE-STACK-USAGE">
      <xsd:annotation>
         <xsd:documentation>Provides a formal worst case stack usage.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="WorstCaseStackUsage"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="MEMORY-CONSUMPTION" type="AR:POSITIVE-INTEGER">
            <xsd:annotation>
               <xsd:documentation>Worst case stack consumption. Unit: byte.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="WorstCaseStackUsage.memoryConsumption";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class StackUsage::WorstCaseStackUsage -->
   <xsd:complexType abstract="false" mixed="false" name="WORST-CASE-STACK-USAGE">
      <xsd:annotation>
         <xsd:documentation>Provides a formal worst case stack usage.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="WorstCaseStackUsage"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:REFERRABLE"/>
         <xsd:group ref="AR:MULTILANGUAGE-REFERRABLE"/>
         <xsd:group ref="AR:IDENTIFIABLE"/>
         <xsd:group ref="AR:STACK-USAGE"/>
         <xsd:group ref="AR:WORST-CASE-STACK-USAGE"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
      <xsd:attributeGroup ref="AR:IDENTIFIABLE"/>
   </xsd:complexType>
<!-- element group for class ResourceConsumption::HardwareConfiguration -->
   <xsd:group name="HARDWARE-CONFIGURATION">
      <xsd:annotation>
         <xsd:documentation>Describes in which mode the hardware is operating while needing this resource consumption.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="HardwareConfiguration"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="ADDITIONAL-INFORMATION" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>Specifies additional information on the HardwareConfiguration.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="HardwareConfiguration.additionalInformation";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="PROCESSOR-MODE" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>Specifies in which mode the processor is operating.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="HardwareConfiguration.processorMode";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="PROCESSOR-SPEED" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>Specifies the speed the processor is operating.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="HardwareConfiguration.processorSpeed";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ResourceConsumption::HardwareConfiguration -->
   <xsd:complexType abstract="false" mixed="false" name="HARDWARE-CONFIGURATION">
      <xsd:annotation>
         <xsd:documentation>Describes in which mode the hardware is operating while needing this resource consumption.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="HardwareConfiguration"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:HARDWARE-CONFIGURATION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class ExecutionTime::MemorySectionLocation -->
   <xsd:group name="MEMORY-SECTION-LOCATION">
      <xsd:annotation>
         <xsd:documentation>Specifies in which hardware ProvidedMemorySegment the softwareMemorySection is located.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MemorySectionLocation"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="PROVIDED-MEMORY-REF">
            <xsd:annotation>
               <xsd:documentation>Reference to the hardware ProvidedMemorySegment.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MemorySectionLocation.providedMemory";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:HW-ELEMENT--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="SOFTWARE-MEMORY-SECTION-REF">
            <xsd:annotation>
               <xsd:documentation>Reference to the MemorySection which is mapped on a certain hardware memory segment.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="MemorySectionLocation.softwareMemorySection";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:MEMORY-SECTION--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ExecutionTime::MemorySectionLocation -->
   <xsd:complexType abstract="false" mixed="false" name="MEMORY-SECTION-LOCATION">
      <xsd:annotation>
         <xsd:documentation>Specifies in which hardware ProvidedMemorySegment the softwareMemorySection is located.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MemorySectionLocation"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:MEMORY-SECTION-LOCATION"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class ResourceConsumption::SoftwareContext -->
   <xsd:group name="SOFTWARE-CONTEXT">
      <xsd:annotation>
         <xsd:documentation>Specifies the context of the software for this resource consumption.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SoftwareContext"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="INPUT" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>Specifies the input vector which is used to provide the ExecutionTime.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SoftwareContext.input";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="STATE" type="AR:STRING">
            <xsd:annotation>
               <xsd:documentation>Specifies the state the software is in when the ExecutionTime is provided.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="SoftwareContext.state";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class ResourceConsumption::SoftwareContext -->
   <xsd:complexType abstract="false" mixed="false" name="SOFTWARE-CONTEXT">
      <xsd:annotation>
         <xsd:documentation>Specifies the context of the software for this resource consumption.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SoftwareContext"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:SOFTWARE-CONTEXT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:complexType name="REQUEST-METHOD-ENUM">
      <xsd:annotation>
         <xsd:documentation>Available request methods for HTTPs.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RequestMethodEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:REQUEST-METHOD-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="REQUEST-METHOD-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CONNECT">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RequestMethodEnum.connect"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DELETE">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RequestMethodEnum.delete"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="GET">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RequestMethodEnum.get"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="HEAD">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RequestMethodEnum.head"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OPTIONS">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RequestMethodEnum.options"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="POST">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RequestMethodEnum.post"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PUT">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RequestMethodEnum.put"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TRACE">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RequestMethodEnum.trace"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
 <!-- element group for class EthernetTopology::TcpTp -->
   <xsd:group name="TCP-TP">
      <xsd:annotation>
         <xsd:documentation>Content Model for TCP configuration.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TcpTp"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="KEEP-ALIVE-INTERVAL" type="AR:TIME-VALUE">
            <xsd:annotation>
               <xsd:documentation>Specifies the interval in seconds between subsequent keepalive probes.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="TcpTp.keepAliveInterval";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="KEEP-ALIVE-PROBES-MAX" type="AR:POSITIVE-INTEGER">
            <xsd:annotation>
               <xsd:documentation>Maximum number of times that TCP retransmits an individual data segment before aborting the connection.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="TcpTp.keepAliveProbesMax";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="KEEP-ALIVE-TIME" type="AR:TIME-VALUE">
            <xsd:annotation>
               <xsd:documentation>Specifies the time in seconds between the last data packet sent and the first keepalive probe.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="TcpTp.keepAliveTime";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="KEEP-ALIVES" type="AR:BOOLEAN">
            <xsd:annotation>
               <xsd:documentation>Indicates if Keep-Alive messages are send.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="TcpTp.keepAlives";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="NAGLES-ALGORITHM" type="AR:BOOLEAN">
            <xsd:annotation>
               <xsd:documentation>Indicates if Nagle's Algorithm is used.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="TcpTp.naglesAlgorithm";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TCP-TP-PORT" type="AR:TP-PORT">
            <xsd:annotation>
               <xsd:documentation>TCP Port configuration.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="TcpTp.tcpTpPort";pureMM.maxOccurs="1";pureMM.minOccurs="1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class EthernetTopology::TcpTp -->
   <xsd:complexType abstract="false" mixed="false" name="TCP-TP">
      <xsd:annotation>
         <xsd:documentation>Content Model for TCP configuration.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TcpTp"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:TRANSPORT-PROTOCOL-CONFIGURATION"/>
         <xsd:group ref="AR:TCP-UDP-CONFIG"/>
         <xsd:group ref="AR:TCP-TP"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:complexType name="URI-STRING">
      <xsd:annotation>
         <xsd:documentation>A Uniform Resource Identifier (URI), is a compact string of characters used to identify or name a resource.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="UriString";xml.xsd.customType="URI-STRING";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:URI-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="URI-STRING--SIMPLE">
      <xsd:restriction base="xsd:string"/>
   </xsd:simpleType>
<!-- element group for class InstanceRefs::RteEventInEcuInstanceRef -->
   <xsd:group name="RTE-EVENT-IN-ECU-INSTANCE-REF">
      <xsd:annotation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RteEventInEcuInstanceRef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject,instanceRef</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <!-- Association <<atpDerived>>base skipped -->
         <xsd:element maxOccurs="1" minOccurs="0" name="CONTEXT-ROOT-COMPOSITION-REF">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RteEventInEcuInstanceRef.contextRootComposition";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:ROOT-SW-COMPOSITION-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="CONTEXT-ATOMIC-COMPONENT-REF">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RteEventInEcuInstanceRef.contextAtomicComponent";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:SW-COMPONENT-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TARGET-RTE-EVENT-REF">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="RteEventInEcuInstanceRef.targetRteEvent";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="40"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:RTE-EVENT--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class InstanceRefs::RteEventInEcuInstanceRef -->
   <xsd:complexType abstract="false" mixed="false" name="RTE-EVENT-IN-ECU-INSTANCE-REF">
      <xsd:annotation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RteEventInEcuInstanceRef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject,instanceRef</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ATP-INSTANCE-REF"/>
         <xsd:group ref="AR:RTE-EVENT-IN-ECU-INSTANCE-REF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
 <!-- element group for class InstanceRefs::VariableAccessInEcuInstanceRef -->
   <xsd:group name="VARIABLE-ACCESS-IN-ECU-INSTANCE-REF">
      <xsd:annotation>
         <xsd:appinfo source="tags">mmt.qualifiedName="VariableAccessInEcuInstanceRef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject,instanceRef</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <!-- Association <<atpDerived>>base skipped -->
         <xsd:element maxOccurs="1" minOccurs="0" name="CONTEXT-ROOT-COMPOSITION-REF">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="VariableAccessInEcuInstanceRef.contextRootComposition";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="20"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:ROOT-SW-COMPOSITION-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="CONTEXT-ATOMIC-COMPONENT-REF">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="VariableAccessInEcuInstanceRef.contextAtomicComponent";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="30"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:SW-COMPONENT-PROTOTYPE--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="TARGET-VARIABLE-ACCESS-REF">
            <xsd:annotation>
               <xsd:appinfo source="tags">mmt.qualifiedName="VariableAccessInEcuInstanceRef.targetVariableAccess";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.sequenceOffset="40"</xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:simpleContent>
                  <xsd:extension base="AR:REF">
                     <xsd:attribute name="DEST" type="AR:VARIABLE-ACCESS--SUBTYPES-ENUM" use="required"/>
                  </xsd:extension>
               </xsd:simpleContent>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class InstanceRefs::VariableAccessInEcuInstanceRef -->
   <xsd:complexType abstract="false" mixed="false" name="VARIABLE-ACCESS-IN-ECU-INSTANCE-REF">
      <xsd:annotation>
         <xsd:appinfo source="tags">mmt.qualifiedName="VariableAccessInEcuInstanceRef"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject,instanceRef</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:ATP-INSTANCE-REF"/>
         <xsd:group ref="AR:VARIABLE-ACCESS-IN-ECU-INSTANCE-REF"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<!-- element group for class EthernetTopology::TransportProtocolConfiguration -->
   <xsd:group name="TRANSPORT-PROTOCOL-CONFIGURATION">
      <xsd:annotation>
         <xsd:documentation>Transport Protocol configuration.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TransportProtocolConfiguration"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
<!-- element group for class EthernetTopology::TcpUdpConfig -->
   <xsd:group name="TCP-UDP-CONFIG">
      <xsd:annotation>
         <xsd:documentation>Tcp or Udp Transport Protocol Configuration.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TcpUdpConfig"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:group>
<!-- element group for class EthernetTopology::TpPort -->
   <xsd:group name="TP-PORT">
      <xsd:annotation>
         <xsd:documentation>Dynamic or direct assignment of a PortNumber.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TpPort"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element maxOccurs="1" minOccurs="0" name="DYNAMICALLY-ASSIGNED" type="AR:BOOLEAN">
            <xsd:annotation>
               <xsd:documentation>Indicates whether the source port is dynamically assigned.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="TpPort.dynamicallyAssigned";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
         <xsd:element maxOccurs="1" minOccurs="0" name="PORT-NUMBER" type="AR:POSITIVE-INTEGER">
            <xsd:annotation>
               <xsd:documentation>Port Number.</xsd:documentation>
               <xsd:appinfo source="tags">mmt.qualifiedName="TpPort.portNumber";pureMM.maxOccurs="1";pureMM.minOccurs="0"</xsd:appinfo>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:group>
   <!-- complex type for class EthernetTopology::TpPort -->
   <xsd:complexType abstract="false" mixed="false" name="TP-PORT">
      <xsd:annotation>
         <xsd:documentation>Dynamic or direct assignment of a PortNumber.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TpPort"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:group ref="AR:AR-OBJECT"/>
         <xsd:group ref="AR:TP-PORT"/>
      </xsd:sequence>
      <xsd:attributeGroup ref="AR:AR-OBJECT"/>
   </xsd:complexType>
<xsd:simpleType name="ROOT-SW-COMPOSITION-PROTOTYPE--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ROOT-SW-COMPOSITION-PROTOTYPE"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="SW-COMPONENT-PROTOTYPE--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="SW-COMPONENT-PROTOTYPE"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="RTE-EVENT--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ASYNCHRONOUS-SERVER-CALL-RETURNS-EVENT"/>
         <xsd:enumeration value="BACKGROUND-EVENT"/>
         <xsd:enumeration value="DATA-RECEIVE-ERROR-EVENT"/>
         <xsd:enumeration value="DATA-RECEIVED-EVENT"/>
         <xsd:enumeration value="DATA-SEND-COMPLETED-EVENT"/>
         <xsd:enumeration value="DATA-WRITE-COMPLETED-EVENT"/>
         <xsd:enumeration value="EXTERNAL-TRIGGER-OCCURRED-EVENT"/>
         <xsd:enumeration value="INIT-EVENT"/>
         <xsd:enumeration value="INTERNAL-TRIGGER-OCCURRED-EVENT"/>
         <xsd:enumeration value="MODE-SWITCHED-ACK-EVENT"/>
         <xsd:enumeration value="OPERATION-INVOKED-EVENT"/>
         <xsd:enumeration value="RTE-EVENT"/>
         <xsd:enumeration value="SWC-MODE-MANAGER-ERROR-EVENT"/>
         <xsd:enumeration value="SWC-MODE-SWITCH-EVENT"/>
         <xsd:enumeration value="TIMING-EVENT"/>
         <xsd:enumeration value="TRANSFORMER-HARD-ERROR-EVENT"/>
      </xsd:restriction>
   </xsd:simpleType>
<xsd:simpleType name="VARIABLE-ACCESS--SUBTYPES-ENUM">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="VARIABLE-ACCESS"/>
      </xsd:restriction>
   </xsd:simpleType>








</xsd:schema>